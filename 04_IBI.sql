--Procedimiento de lectura del fichero enviado por Catastro. 
--Parámetros: xMunicipio: código del municipio; xYear: año del padrón; 
--            xClase_IBI: indica si estamos leyendo información de urbana o de rústica
--				  xFileName: nombre del archivo.
--				  xPath: localización del archivo.
CREATE OR REPLACE PROCEDURE Read_IBI (
	xMunicipio	IN	CHAR,
	xYear			IN	CHAR,
	xClase_IBI  IN CHAR,
	xFileName	IN	CHAR,
	xPath			IN	CHAR) 
AS
	vOutFile 				UTL_FILE.FILE_TYPE;
   vReg				    VARCHAR2(1001);
     
   --Identificacion del Bien Inmueble
	vCOD_DELEGACION			 	CHAR(2);
   vCOD_MUNICIPIO			 		CHAR(3);
   vCLASE_IBI			 			CHAR(2);
   vRC_NUM_PARCELA			 	CHAR(14);
   vRC_NUM_SECUENCIAL			CHAR(4);
   vRC_PRIMER_CONTROL			CHAR(1);
   vRC_SEGUNDO_CONTROL			CHAR(1);
   vRC_NUM_FIJO			 		CHAR(8);
   vIDENTIFICACION_IBI			CHAR(15);
   --Domicilio Tributario
   vCOD_PROVINCIA			 		CHAR(2);
   vNOMBRE_PROVINCIA			 	CHAR(25);
   vCOD_MUNICIPIO_DGC			CHAR(3);
   vCOD_MUNICIPIO_INE			CHAR(3);
   vNOMBRE_MUNICIPIO			 	CHAR(40);
   vNOMBRE_ENTIDAD_MENOR		CHAR(30);
   vCOD_VIA_PUBLICA			 	CHAR(5);
   vTIPO_VIA			 			CHAR(5);
   vNOMBRE_VIA			 			CHAR(25);
   vPRIMER_NUMERO			 		CHAR(4);
   vPRIMERA_LETRA			 		CHAR(1);
   vSEGUNDO_NUMERO			 	CHAR(4);
   vSEGUNDA_LETRA			 		CHAR(1);
   vKILOMETRO			 			CHAR(5);
   vBLOQUE			 				CHAR(4);
   vESCALERA			 			CHAR(2);
   vPLANTA			 				CHAR(3);
   vPUERTA			 				CHAR(3);
   vTEXTO_DIRECCION			 	CHAR(25);
   vCODIGO_POSTAL			 		CHAR(5);
   vDISTRITO_MUNICIPAL			CHAR(2);
   vCOD_MUNICIPIO_AGRAGACION	CHAR(3);
   vCOD_ZONA			 			CHAR(2);
   vCOD_POLIGONO			 		CHAR(3);
   vCOD_PARCELA			 		CHAR(5);
   vNOMBRE_PARAJE			 		CHAR(30);
   --Datos económicos de la Parcela
   vYEAR_PADRON			 		CHAR(4);
   vVALOR_CATASTRAL			 	FLOAT;
   vVC_SUELO			 			FLOAT;
   vVC_CONSTRUCCION			 	FLOAT;
   vBASE_LIQUIDABLE			 	FLOAT;
   vCLAVE_USO			 			CHAR(1);
   vVC_BONIFICADO			 		FLOAT;
   vCLAVE_BONIFICACION			CHAR(1);
   vSUPERFICIE_CONSTRUIDA		FLOAT;
   vSUPERFICIE_SUELO			 	FLOAT;
   vCOEFICIENTE_PROPIEDAD		FLOAT;
   vVALOR_BASE			 			FLOAT;
   vCOD_VALOR_BASE			 	CHAR(1);
   vYEAR_EFECTOS_VC			 	CHAR(4);
   vVC_EFECTOS_IBI			 	FLOAT;
   vYEAR_REVISION			 		CHAR(4);
   vYEAR_REVISION_PARCIAL		CHAR(4);
   vPERIODO_VIGENCIA			 	CHAR(4);
   --Informacion de titularidad del bien inmueble
   vCOD_DERECHO			 		CHAR(2);
   vNUMERO_TITULARES			 	CHAR(4);
   vTIPO_TITULARES			 	CHAR(1);
   vCOMPLEMENTO_TITULARIDAD	CHAR(20);
   --Identificación del Sujeto Pasivo del IBI
   vNIF			 					CHAR(9);
   vNOMBRE			 				CHAR(60);
   vCLAVE_IDENTIFICACION		CHAR(8);
   --Domicilio Fiscal del Sujeto Pasivo
   vCOD_PROVINCIA_FISCAL		CHAR(2);
   vNOMBRE_PROVINCIA_FISCAL	CHAR(25);
   vCOD_MUNICIPIO_DGC_FISCAL	CHAR(3);
   vCOD_MUNICIPIO_INE_FISCAL	CHAR(3);
   vNOMBRE_MUNICIPIO_FISCAL	CHAR(40);
   vNOMBRE_ENTIDAD_MENOR_FISCAL	CHAR(30);
   vCOD_VIA_PUBLICA_FISCAL		CHAR(5);
   vTIPO_VIA_FISCAL			 	CHAR(5);
   vNOMBRE_VIA_FISCAL			CHAR(25);
   vPRIMER_NUMERO_FISCAL		CHAR(4);
   vPRIMERA_LETRA_FISCAL		CHAR(1);
   vSEGUNDO_NUMERO_FISCAL		CHAR(4);
   vSEGUNDA_LETRA_FISCAL		CHAR(1);
   vKILOMETRO_FISCAL			 	CHAR(5);
   vBLOQUE_FISCAL			 		CHAR(4);
   vESCALERA_FISCAL			 	CHAR(2);
   vPLANTA_FISCAL			 		CHAR(3);
   vPUERTA_FISCAL			 		CHAR(3);
   vTEXTO_DIRECCION_FISCAL		CHAR(25);
   vCODIGO_POSTAL_FISCAL		CHAR(5);
   vAPARTADO_CORREOS_FISCAL	CHAR(5);
   --Datos del Conyuge
   vNIF_CONYUGE			 		CHAR(9);
   vNOMBRE_CONYUGE			 	CHAR(60);
   --Informacion de la Alteracion
   vCLASE_ALTERACION			 	CHAR(4);
   vTIPO_EXPEDIENTE			 	CHAR(4);
   vFECHA_ALTERACION			 	CHAR(8);
   vYEAR_EXPEDIENTE			 	CHAR(4);
   vREFERENCIA_EXPEDIENTE		CHAR(13);
   vYEAR_EXPEDIENTE_EC			CHAR(4);
   vREFERENCIA_EXPEDIENTE_EC	CHAR(13);
   vCOD_ENTIDAD_COLABORADORA	CHAR(3); 
	--Datos de Titularidad
   vPORCENTAJE_TITULARIDAD		FLOAT;
   vNIF_CB							CHAR(9);
   vDENOMINACION_CB				CHAR(60);

   PROCEDURE recNgo (str VARCHAR2)
   IS
   BEGIN
      DBMS_OUTPUT.PUT_LINE ('UTL_FILE error ' || str);
      UTL_FILE.FCLOSE (vOutFile);
   END;

begin

	--lo primero que haremos será borrar la información que puedieran contener las tablas
	--TMP_PADRONES_IBI y TMP_TITULARES_IBI del mismo año y municipio que se pretende leer
	IF xCLASE_IBI='RU' THEN	
		DELETE FROM TMP_TITULARES_IBI WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU';
		DELETE FROM TMP_PADRONES_IBI WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU';
	ELSE
		DELETE FROM TMP_TITULARES_IBI WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI<>'RU';
		DELETE FROM TMP_PADRONES_IBI WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI<>'RU';
	END IF;


   vOutFile:=UTL_FILE.FOPEN(trim(xPath),trim(xFileName),'R');
   UTL_FILE.GET_LINE(vOutFile,vReg);
   
   LOOP BEGIN

      IF SUBSTR(vReg,1,2)='53' THEN

        	--Identificacion del Bien Inmueble
        	vCOD_DELEGACION:=SUBSTR(vReg,3,2);
        	vCOD_MUNICIPIO:=SUBSTR(vReg,5,3);
        	vCLASE_IBI:=SUBSTR(vReg,8,2);

        	vRC_NUM_PARCELA:=SUBSTR(vReg,10,14);
        	vRC_NUM_SECUENCIAL:=SUBSTR(vReg,24,4);
        	vRC_PRIMER_CONTROL:=SUBSTR(vReg,28,1);
        	vRC_SEGUNDO_CONTROL:=SUBSTR(vReg,29,1);
        	vRC_NUM_FIJO:=SUBSTR(vReg,30,8);
        	vIDENTIFICACION_IBI:=SUBSTR(vReg,38,15);

        	--Domicilio Tributario
        	vCOD_PROVINCIA:=SUBSTR(vReg,53,2);
        	vNOMBRE_PROVINCIA:=SUBSTR(vReg,55,25);
        	vCOD_MUNICIPIO_DGC:=SUBSTR(vReg,80,3);
        	vCOD_MUNICIPIO_INE:=SUBSTR(vReg,83,3);
        	vNOMBRE_MUNICIPIO:=SUBSTR(vReg,86,40);
        	vNOMBRE_ENTIDAD_MENOR:=SUBSTR(vReg,126,30);
        	vCOD_VIA_PUBLICA:=SUBSTR(vReg,156,5);
        	vTIPO_VIA:=SUBSTR(vReg,161,5);
        	vNOMBRE_VIA:=SUBSTR(vReg,166,25);
        	vPRIMER_NUMERO:=SUBSTR(vReg,191,4);
        	vPRIMERA_LETRA:=SUBSTR(vReg,195,1);
        	vSEGUNDO_NUMERO:=SUBSTR(vReg,196,4);
        	vSEGUNDA_LETRA:=SUBSTR(vReg,200,1);
        	vKILOMETRO:=SUBSTR(vReg,201,5);
        	vBLOQUE:=SUBSTR(vReg,206,4);
        	vESCALERA:=SUBSTR(vReg,210,2);
        	vPLANTA:=SUBSTR(vReg,212,3);
        	vPUERTA:=SUBSTR(vReg,215,3);
        	vTEXTO_DIRECCION:=SUBSTR(vReg,218,25);
        	vCODIGO_POSTAL:=SUBSTR(vReg,243,5);
        	vDISTRITO_MUNICIPAL:=SUBSTR(vReg,248,2);
        	vCOD_MUNICIPIO_AGRAGACION:=SUBSTR(vReg,250,3);
        	vCOD_ZONA:=SUBSTR(vReg,253,2);
        	vCOD_POLIGONO:=SUBSTR(vReg,255,3);
        	vCOD_PARCELA:=SUBSTR(vReg,258,5);
        	vNOMBRE_PARAJE:=SUBSTR(vReg,263,30);

        	--Datos económicos de la Parcela
        	vYEAR_PADRON:=SUBSTR(vReg,293,4);
        	BEGIN
           	vVALOR_CATASTRAL:=TO_NUMBER(SUBSTR(vReg,297,12))/100;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vVALOR_CATASTRAL:=0;
        	END;

        	BEGIN
           	vVC_SUELO:=TO_NUMBER(SUBSTR(vReg,309,12))/100;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vVC_SUELO:=0;
        	END;

        	BEGIN
           	vVC_CONSTRUCCION:=TO_NUMBER(SUBSTR(vReg,321,12))/100;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vVC_CONSTRUCCION:=0;
        	END;

        	BEGIN
           	vBASE_LIQUIDABLE:=TO_NUMBER(SUBSTR(vReg,333,12))/100;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vBASE_LIQUIDABLE:=0;
        	END;

        	vCLAVE_USO:=SUBSTR(vReg,345,1);
        	BEGIN
           	vVC_BONIFICADO:=TO_NUMBER(SUBSTR(vReg,346,12))/100;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vVC_BONIFICADO:=0;
        	END;
        	vCLAVE_BONIFICACION:=SUBSTR(vReg,358,1);

        	BEGIN
           	vSUPERFICIE_CONSTRUIDA:=TO_NUMBER(SUBSTR(vReg,359,10));
        	EXCEPTION
           	WHEN OTHERS THEN
              	vSUPERFICIE_CONSTRUIDA:=0;
        	END;

        	BEGIN
           	vSUPERFICIE_SUELO:=TO_NUMBER(SUBSTR(vReg,369,10));
        	EXCEPTION
           WHEN OTHERS THEN
              vSUPERFICIE_SUELO:=0;
        	END;

        	BEGIN
           	vCOEFICIENTE_PROPIEDAD:=TO_NUMBER(SUBSTR(vReg,379,9))/1000000;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vCOEFICIENTE_PROPIEDAD:=0;
        	END;

        	--Datos para el cálculo de la base liquidable
        	BEGIN
           	vVALOR_BASE:=TO_NUMBER(SUBSTR(vReg,388,12))/100;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vVALOR_BASE:=0;
        	END;
        	vCOD_VALOR_BASE:=SUBSTR(vReg,400,1);

        	vYEAR_EFECTOS_VC:=SUBSTR(vReg,401,4);
        	BEGIN
           	vVC_EFECTOS_IBI:=TO_NUMBER(SUBSTR(vReg,405,12))/100;
        	EXCEPTION
           	WHEN OTHERS THEN
              	vVC_EFECTOS_IBI:=0;
        	END;

        	vYEAR_REVISION:=SUBSTR(vReg,417,4);
        	vYEAR_REVISION_PARCIAL:=SUBSTR(vReg,421,4);
        	vPERIODO_VIGENCIA:=SUBSTR(vReg,425,2);

        	--Informacion de titularidad del bien inmueble
        	vCOD_DERECHO:=SUBSTR(vReg,427,2);
        	vNUMERO_TITULARES:=SUBSTR(vReg,429,4);
        	vTIPO_TITULARES:=SUBSTR(vReg,433,1);
        	vCOMPLEMENTO_TITULARIDAD:=SUBSTR(vReg,434,20);

        	--Identificación del Sujeto Pasivo del IBI
        	IF (SUBSTR(vReg,454,9)='         ') THEN
        		vNIF:=NULL;
        	ELSE
        		vNIF:=SUBSTR(vReg,454,9);     
        	END IF;   	
        	vNOMBRE:=SUBSTR(vReg,463,60);
        	vCLAVE_IDENTIFICACION:=SUBSTR(vReg,523,8);

        	--Domicilio Fiscal del Sujeto Pasivo
        	vCOD_PROVINCIA_FISCAL:=SUBSTR(vReg,531,2);
        	vNOMBRE_PROVINCIA_FISCAL:=SUBSTR(vReg,533,25);
        	vCOD_MUNICIPIO_DGC_FISCAL:=SUBSTR(vReg,558,3);
        	vCOD_MUNICIPIO_INE_FISCAL:=SUBSTR(vReg,561,3);
        	vNOMBRE_MUNICIPIO_FISCAL:=SUBSTR(vReg,564,40);
        	vNOMBRE_ENTIDAD_MENOR_FISCAL:=SUBSTR(vReg,604,30);
        	vCOD_VIA_PUBLICA_FISCAL:=SUBSTR(vReg,634,5);
        	vTIPO_VIA_FISCAL:=SUBSTR(vReg,639,5);
        	vNOMBRE_VIA_FISCAL:=SUBSTR(vReg,644,25);
        	vPRIMER_NUMERO_FISCAL:=SUBSTR(vReg,669,4);
        	vPRIMERA_LETRA_FISCAL:=SUBSTR(vReg,673,1);
        	vSEGUNDO_NUMERO_FISCAL:=SUBSTR(vReg,674,4);
        	vSEGUNDA_LETRA_FISCAL:=SUBSTR(vReg,678,1);
        	vKILOMETRO_FISCAL:=SUBSTR(vReg,679,5);
        	vBLOQUE_FISCAL:=SUBSTR(vReg,684,4);
        	vESCALERA_FISCAL:=SUBSTR(vReg,688,2);
        	vPLANTA_FISCAL:=SUBSTR(vReg,690,3);
        	vPUERTA_FISCAL:=SUBSTR(vReg,693,3);
        	vTEXTO_DIRECCION_FISCAL:=SUBSTR(vReg,696,25);
        	vCODIGO_POSTAL_FISCAL:=SUBSTR(vReg,721,5);
        	vAPARTADO_CORREOS_FISCAL:=SUBSTR(vReg,726,5);

        	--Datos del Conyuge
        	IF (SUBSTR(vReg,731,9)='         ') THEN
        		vNIF_CONYUGE:=NULL;
        	ELSE
        		vNIF_CONYUGE:=SUBSTR(vReg,731,9);
        	END IF;
        	vNOMBRE_CONYUGE:=SUBSTR(vReg,740,60);
	
        	--Informacion de la Alteracion
        	vCLASE_ALTERACION:=SUBSTR(vReg,800,4);
        	vTIPO_EXPEDIENTE:=SUBSTR(vReg,804,4);
        	vFECHA_ALTERACION:=SUBSTR(vReg,808,8);
        	vYEAR_EXPEDIENTE:=SUBSTR(vReg,816,4);
        	vREFERENCIA_EXPEDIENTE:=SUBSTR(vReg,820,13);
        	vYEAR_EXPEDIENTE_EC:=SUBSTR(vReg,833,4);
        	vREFERENCIA_EXPEDIENTE_EC:=SUBSTR(vReg,837,13);
        	vCOD_ENTIDAD_COLABORADORA:=SUBSTR(vReg,850,3); 
		
        	INSERT INTO TMP_PADRONES_IBI (
				--Identificacion del Bien Inmueble
	    		COD_DELEGACION,COD_MUNICIPIO,CLASE_IBI,RC_NUM_PARCELA,RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,RC_SEGUNDO_CONTROL,
				RC_NUM_FIJO,IDENTIFICACION_IBI,
        		--Domicilio Tributario
        		COD_PROVINCIA,NOMBRE_PROVINCIA,COD_MUNICIPIO_DGC,COD_MUNICIPIO_INE,NOMBRE_MUNICIPIO,NOMBRE_ENTIDAD_MENOR,
				COD_VIA_PUBLICA,TIPO_VIA,NOMBRE_VIA,PRIMER_NUMERO,PRIMERA_LETRA,SEGUNDO_NUMERO,SEGUNDA_LETRA,KILOMETRO,
				BLOQUE,ESCALERA,PLANTA,PUERTA,TEXTO_DIRECCION,CODIGO_POSTAL,DISTRITO_MUNICIPAL,COD_MUNICIPIO_AGRAGACION,
				COD_ZONA,COD_POLIGONO,COD_PARCELA,NOMBRE_PARAJE,
				--Datos económicos de la Parcela,
				YEAR_PADRON,VALOR_CATASTRAL,VC_SUELO,VC_CONSTRUCCION,BASE_LIQUIDABLE,CLAVE_USO,VC_BONIFICADO,CLAVE_BONIFICACION,
				SUPERFICIE_CONSTRUIDA,SUPERFICIE_SUELO,COEFICIENTE_PROPIEDAD,VALOR_BASE,COD_VALOR_BASE,YEAR_EFECTOS_VC,
				VC_EFECTOS_IBI,YEAR_REVISION,YEAR_REVISION_PARCIAL,PERIODO_VIGENCIA,
				--Informacion de titularidad del bien inmueble,
				COD_DERECHO,NUMERO_TITULARES,TIPO_TITULARES,COMPLEMENTO_TITULARIDAD,
				--Identificación del Sujeto Pasivo del IBI,
				NIF,NOMBRE,CLAVE_IDENTIFICACION,
				--Domicilio Fiscal del Sujeto Pasivo,
				COD_PROVINCIA_FISCAL,NOMBRE_PROVINCIA_FISCAL,COD_MUNICIPIO_DGC_FISCAL,COD_MUNICIPIO_INE_FISCAL,
				NOMBRE_MUNICIPIO_FISCAL,NOMBRE_ENTIDAD_MENOR_FISCAL,COD_VIA_PUBLICA_FISCAL,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
				PRIMER_NUMERO_FISCAL,PRIMERA_LETRA_FISCAL,SEGUNDO_NUMERO_FISCAL,SEGUNDA_LETRA_FISCAL,KILOMETRO_FISCAL,
				BLOQUE_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,TEXTO_DIRECCION_FISCAL,CODIGO_POSTAL_FISCAL,
				APARTADO_CORREOS_FISCAL,
				--Datos del Conyuge,
				NIF_CONYUGE,NOMBRE_CONYUGE,
				--Informacion de la Alteracion,
				CLASE_ALTERACION,TIPO_EXPEDIENTE,FECHA_ALTERACION,YEAR_EXPEDIENTE,REFERENCIA_EXPEDIENTE,YEAR_EXPEDIENTE_EC,
				REFERENCIA_EXPEDIENTE_EC,COD_ENTIDAD_COLABORADORA)
			VALUES (
				--Identificacion del Bien Inmueble
	    		vCOD_DELEGACION,vCOD_MUNICIPIO,vCLASE_IBI,vRC_NUM_PARCELA,vRC_NUM_SECUENCIAL,vRC_PRIMER_CONTROL,
	    		vRC_SEGUNDO_CONTROL,vRC_NUM_FIJO,vIDENTIFICACION_IBI,
        		--Domicilio Tributario
        		vCOD_PROVINCIA,vNOMBRE_PROVINCIA,vCOD_MUNICIPIO_DGC,vCOD_MUNICIPIO_INE,vNOMBRE_MUNICIPIO,vNOMBRE_ENTIDAD_MENOR,
				vCOD_VIA_PUBLICA,vTIPO_VIA,vNOMBRE_VIA,vPRIMER_NUMERO,vPRIMERA_LETRA,vSEGUNDO_NUMERO,vSEGUNDA_LETRA,vKILOMETRO,
				vBLOQUE,vESCALERA,vPLANTA,vPUERTA,vTEXTO_DIRECCION,vCODIGO_POSTAL,vDISTRITO_MUNICIPAL,vCOD_MUNICIPIO_AGRAGACION,
				vCOD_ZONA,vCOD_POLIGONO,vCOD_PARCELA,vNOMBRE_PARAJE,
				--Datos económicos de la Parcela,
				vYEAR_PADRON,vVALOR_CATASTRAL,vVC_SUELO,vVC_CONSTRUCCION,vBASE_LIQUIDABLE,vCLAVE_USO,vVC_BONIFICADO,
				vCLAVE_BONIFICACION,vSUPERFICIE_CONSTRUIDA,vSUPERFICIE_SUELO,vCOEFICIENTE_PROPIEDAD,vVALOR_BASE,vCOD_VALOR_BASE,
				vYEAR_EFECTOS_VC,vVC_EFECTOS_IBI,vYEAR_REVISION,vYEAR_REVISION_PARCIAL,vPERIODO_VIGENCIA,
				--Informacion de titularidad del bien inmueble,
				vCOD_DERECHO,vNUMERO_TITULARES,vTIPO_TITULARES,vCOMPLEMENTO_TITULARIDAD,
				--Identificación del Sujeto Pasivo del IBI,
				vNIF,vNOMBRE,vCLAVE_IDENTIFICACION,
				--Domicilio Fiscal del Sujeto Pasivo,
				vCOD_PROVINCIA_FISCAL,vNOMBRE_PROVINCIA_FISCAL,vCOD_MUNICIPIO_DGC_FISCAL,vCOD_MUNICIPIO_INE_FISCAL,
				vNOMBRE_MUNICIPIO_FISCAL,vNOMBRE_ENTIDAD_MENOR_FISCAL,vCOD_VIA_PUBLICA_FISCAL,vTIPO_VIA_FISCAL,
				vNOMBRE_VIA_FISCAL,vPRIMER_NUMERO_FISCAL,vPRIMERA_LETRA_FISCAL,vSEGUNDO_NUMERO_FISCAL,vSEGUNDA_LETRA_FISCAL,
				vKILOMETRO_FISCAL,vBLOQUE_FISCAL,vESCALERA_FISCAL,vPLANTA_FISCAL,vPUERTA_FISCAL,vTEXTO_DIRECCION_FISCAL,
				vCODIGO_POSTAL_FISCAL,vAPARTADO_CORREOS_FISCAL,
				--Datos del Conyuge,
				vNIF_CONYUGE,vNOMBRE_CONYUGE,
				--Informacion de la Alteracion,
				vCLASE_ALTERACION,vTIPO_EXPEDIENTE,vFECHA_ALTERACION,vYEAR_EXPEDIENTE,vREFERENCIA_EXPEDIENTE,vYEAR_EXPEDIENTE_EC,
				vREFERENCIA_EXPEDIENTE_EC,vCOD_ENTIDAD_COLABORADORA);
	 
 	    	UTL_FILE.GET_LINE(vOutFile,vReg);

			WHILE (SUBSTR(vReg,1,2)='54') 
			LOOP 
		      --Identificacion del Bien Inmueble
		      vCOD_DELEGACION:=SUBSTR(vReg,3,2);
		      vCOD_MUNICIPIO:=SUBSTR(vReg,5,3);
		      vCLASE_IBI:=SUBSTR(vReg,8,2);
		
		      vRC_NUM_PARCELA:=SUBSTR(vReg,10,14);
		      vRC_NUM_SECUENCIAL:=SUBSTR(vReg,24,4);
		      vRC_PRIMER_CONTROL:=SUBSTR(vReg,28,1);
		      vRC_SEGUNDO_CONTROL:=SUBSTR(vReg,29,1);
		      vRC_NUM_FIJO:=SUBSTR(vReg,30,8);
		      vIDENTIFICACION_IBI:=SUBSTR(vReg,38,15);
		
		      --Datos del Derecho del Titular sobre el Bien
		      vCOD_DERECHO:=SUBSTR(vReg,53,2);
		      vPORCENTAJE_TITULARIDAD:=TO_NUMBER(SUBSTR(vReg,55,5))/100;
				
		      --Identificación del Titular Catastral
		      IF (SUBSTR(vReg,60,9)='         ') THEN
		      	vNIF:=NULL;
		      ELSE		      
		      	vNIF:=SUBSTR(vReg,60,9);
		      END IF;
		      vNOMBRE:=SUBSTR(vReg,69,60);
		      vCLAVE_IDENTIFICACION:=SUBSTR(vReg,129,8);
		
		      --Domicilio Fiscal del Titular Catastral
		      vCOD_PROVINCIA_FISCAL:=SUBSTR(vReg,137,2);
		      vNOMBRE_PROVINCIA_FISCAL:=SUBSTR(vReg,139,25);
		      vCOD_MUNICIPIO_DGC_FISCAL:=SUBSTR(vReg,164,3);
		      vCOD_MUNICIPIO_INE_FISCAL:=SUBSTR(vReg,167,3);
		      vNOMBRE_MUNICIPIO_FISCAL:=SUBSTR(vReg,170,40);
		      vNOMBRE_ENTIDAD_MENOR_FISCAL:=SUBSTR(vReg,210,30);
		      vCOD_VIA_PUBLICA_FISCAL:=SUBSTR(vReg,240,5);
		      vTIPO_VIA_FISCAL:=SUBSTR(vReg,245,5);
		      vNOMBRE_VIA_FISCAL:=SUBSTR(vReg,250,25);
		      vPRIMER_NUMERO_FISCAL:=SUBSTR(vReg,275,4);
		      vPRIMERA_LETRA_FISCAL:=SUBSTR(vReg,279,1);
		      vSEGUNDO_NUMERO_FISCAL:=SUBSTR(vReg,280,4);
		      vSEGUNDA_LETRA_FISCAL:=SUBSTR(vReg,284,1);
		      vKILOMETRO_FISCAL:=SUBSTR(vReg,285,5);
		      vBLOQUE_FISCAL:=SUBSTR(vReg,290,4);
		      vESCALERA_FISCAL:=SUBSTR(vReg,294,2);
		      vPLANTA_FISCAL:=SUBSTR(vReg,296,3);
		      vPUERTA_FISCAL:=SUBSTR(vReg,299,3);
		      vTEXTO_DIRECCION_FISCAL:=SUBSTR(vReg,302,25);
		      vCODIGO_POSTAL_FISCAL:=SUBSTR(vReg,327,5);
		      vAPARTADO_CORREOS_FISCAL:=SUBSTR(vReg,332,5);
	
				--Datos de la CB (Comunidad de Bienes) formalmente construida
				IF (SUBSTR(vReg,337,9)='         ') THEN
					vNIF_CB:=NULL;
				ELSE
		      	vNIF_CB:=SUBSTR(vReg,337,9);
		      END IF;
		      vDENOMINACION_CB:=SUBSTR(vReg,346,60);
		
		      --Informacion de la alteracion juridica
		      vTIPO_EXPEDIENTE:=SUBSTR(vReg,406,4);
		      vFECHA_ALTERACION:=SUBSTR(vReg,410,8);
		      vYEAR_EXPEDIENTE:=SUBSTR(vReg,418,4);
		      vREFERENCIA_EXPEDIENTE:=SUBSTR(vReg,422,13);
		      vYEAR_EXPEDIENTE_EC:=SUBSTR(vReg,435,4);
		      vREFERENCIA_EXPEDIENTE_EC:=SUBSTR(vReg,439,13);
		      vCOD_ENTIDAD_COLABORADORA:=SUBSTR(vReg,452,3);
				vYEAR_PADRON:=SUBSTR(vReg,455,4);

            INSERT INTO TMP_TITULARES_IBI 
            (
            	COD_DELEGACION,COD_MUNICIPIO,CLASE_IBI,RC_NUM_PARCELA,RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,
            	RC_SEGUNDO_CONTROL,RC_NUM_FIJO,IDENTIFICACION_IBI,
					--Datos del Derecho del Titular sobre el Bien
					COD_DERECHO,PORCENTAJE_TITULARIDAD,
					--Identificación del Titular Catastral
					NIF,NOMBRE,CLAVE_IDENTIFICACION,
					--Domicilio Fiscal del Titular Catastral
					COD_PROVINCIA_FISCAL,NOMBRE_PROVINCIA_FISCAL,COD_MUNICIPIO_DGC_FISCAL,COD_MUNICIPIO_INE_FISCAL,
					NOMBRE_MUNICIPIO_FISCAL,NOMBRE_ENTIDAD_MENOR_FISCAL,COD_VIA_PUBLICA_FISCAL,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
					PRIMER_NUMERO_FISCAL,PRIMERA_LETRA_FISCAL,SEGUNDO_NUMERO_FISCAL,SEGUNDA_LETRA_FISCAL,
					KILOMETRO_FISCAL,BLOQUE_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,TEXTO_DIRECCION_FISCAL,
					CODIGO_POSTAL_FISCAL,APARTADO_CORREOS_FISCAL,
					--Datos de la CB (Comunidad de Bienes) formalmente construida
					NIF_CB,DENOMINACION_CB,
					--Informacion de la alteracion juridica
					TIPO_EXPEDIENTE,FECHA_ALTERACION,YEAR_EXPEDIENTE,REFERENCIA_EXPEDIENTE,YEAR_EXPEDIENTE_EC,
					REFERENCIA_EXPEDIENTE_EC,COD_ENTIDAD_COLABORADORA,YEAR_PADRON
				)
				VALUES 
				(
					vCOD_DELEGACION,vCOD_MUNICIPIO,vCLASE_IBI,vRC_NUM_PARCELA,vRC_NUM_SECUENCIAL,
					vRC_PRIMER_CONTROL,vRC_SEGUNDO_CONTROL,vRC_NUM_FIJO,vIDENTIFICACION_IBI,
					--Datos del Derecho del Titular sobre el Bien
					vCOD_DERECHO,vPORCENTAJE_TITULARIDAD,
					--Identificación del Titular Catastral
					vNIF,vNOMBRE,vCLAVE_IDENTIFICACION,
					--Domicilio Fiscal del Titular Catastral
					vCOD_PROVINCIA_FISCAL,vNOMBRE_PROVINCIA_FISCAL,vCOD_MUNICIPIO_DGC_FISCAL,vCOD_MUNICIPIO_INE_FISCAL,
					vNOMBRE_MUNICIPIO_FISCAL,vNOMBRE_ENTIDAD_MENOR_FISCAL,vCOD_VIA_PUBLICA_FISCAL,vTIPO_VIA_FISCAL,
					vNOMBRE_VIA_FISCAL,vPRIMER_NUMERO_FISCAL,vPRIMERA_LETRA_FISCAL,vSEGUNDO_NUMERO_FISCAL,vSEGUNDA_LETRA_FISCAL,
					vKILOMETRO_FISCAL,vBLOQUE_FISCAL,vESCALERA_FISCAL,vPLANTA_FISCAL,vPUERTA_FISCAL,vTEXTO_DIRECCION_FISCAL,
					vCODIGO_POSTAL_FISCAL,vAPARTADO_CORREOS_FISCAL,
					--Datos de la CB (Comunidad de Bienes) formalmente construida
					vNIF_CB,vDENOMINACION_CB,
					--Informacion de la alteracion juridica
					vTIPO_EXPEDIENTE,vFECHA_ALTERACION,vYEAR_EXPEDIENTE,vREFERENCIA_EXPEDIENTE,vYEAR_EXPEDIENTE_EC,
					vREFERENCIA_EXPEDIENTE_EC,vCOD_ENTIDAD_COLABORADORA,vYEAR_PADRON
				);

				UTL_FILE.GET_LINE(vOutFile,vReg);
			END LOOP;
		
	  	ELSE 
	  		UTL_FILE.GET_LINE(vOutFile,vReg);
	  	END IF;

  	  	EXCEPTION
	      WHEN NO_DATA_FOUND THEN
	   	   EXIT;
	  	END;

   END LOOP;

   UTL_FILE.FCLOSE(vOutFile);

   EXCEPTION
   	WHEN NO_DATA_FOUND
    		THEN recNgo ('no_data_found');
      WHEN UTL_FILE.INVALID_PATH
      	THEN recNgo ('invalid_path');
      WHEN UTL_FILE.INVALID_MODE
       	THEN recNgo ('invalid_mode');
      WHEN UTL_FILE.INVALID_FILEHANDLE
      	THEN recNgo ('invalid_filehandle');
      WHEN UTL_FILE.INVALID_OPERATION
      	THEN recNgo ('invalid_operation');
      WHEN UTL_FILE.READ_ERROR
      	THEN recNgo ('read_error');
      WHEN UTL_FILE.WRITE_ERROR
      	THEN recNgo ('write_error');
      WHEN UTL_FILE.INTERNAL_ERROR
      	THEN recNgo ('internal_error');
	  	WHEN VALUE_ERROR
	   	THEN recNgo ('value_error'); 
	  	WHEN OTHERS
	   	THEN recNgo (To_Char(SQLCODE)||SQLERRM); 
	COMMIT;   
END Read_IBI;
/

--17/05/2006 Mª del Carmen Junco Gómez.
--Procedimiento de selección de información para la impresión de consultas
--Parámetros:	xMUNICIPIO: código del municipio cuya información se está consultando.
--					xTIPO_LISTADO: tipo de información que se quiere obtener
--					Valores para xTIPO_LISTADO: 
--							1: Altas nuevas con respecto al padrón del año anterior 		
--							2:	Comparación con la información del año anterior
--							Si los tipos de variación son CONT o EV01 tendremos que comparar sólo con 
--							los registros que tuvieron variación ('S' en VARIACION de la tabla REFERENCIAS_BANCOS)
CREATE OR REPLACE PROCEDURE IMPRIME_LISTADOS_IBI(
				xMUNICIPIO 			IN	CHAR,
				xYEAR					IN CHAR,
				xTIPO_LISTADO 		IN INTEGER,
				xCLASE_ALTERACION	IN	CHAR)				
AS
	TYPE tCURSOR IS REF CURSOR;  -- define REF CURSOR type 
    vCURSOR    	 	tCURSOR;     -- declare cursor variable 
    vSentencia		VARCHAR2(2000);
    vIBI				tmp_padrones_ibi%ROWTYPE;
    vCOMP      	tmp_listados_ibi_comp%ROWTYPE;
    XID 				INTEGER;
    xVARIACION 	CHAR(1);
    xCONTINUAR		BOOLEAN DEFAULT TRUE;
BEGIN

	DELETE FROM TMP_LISTADOS_IBI WHERE USUARIO=USER;
	DELETE FROM TMP_LISTADOS_IBI_COMP WHERE USUARIO=USER;

	--Asignamos valor a vSentencia teniendo en cuenta el tipo de listado que se quiere obtener
	IF (xTIPO_LISTADO=1)  THEN   --altas nuevas con respecto al padrón del año anterior
		vSentencia:='SELECT * FROM TMP_PADRONES_IBI WHERE COD_MUNICIPIO=:xMUNICIPIO AND CLASE_IBI<>''RU''';
	
		--Asignar consulta a cursor, abrirlo y recorrerlo 
    	OPEN vCURSOR FOR vSENTENCIA USING xMUNICIPIO;
    	LOOP
			FETCH vCURSOR INTO vIBI;
   	   		EXIT WHEN vCURSOR%NOTFOUND;
   	   		
   	   		BEGIN
   	   			SELECT ID INTO XID 
   	   			FROM IBI 
   	   			WHERE MUNICIPIO=vIBI.COD_MUNICIPIO AND YEAR=vIBI.YEAR_PADRON-1 AND
   	   				  REF_CATASTRAL=vIBI.RC_NUM_PARCELA AND
   	   				  NUMERO_SECUENCIAL=vIBI.RC_NUM_SECUENCIAL;
   	   			EXCEPTION
   	   				WHEN NO_DATA_FOUND THEN

						INSERT INTO TMP_Listados_IBI (COD_DELEGACION,COD_MUNICIPIO,CLASE_IBI,RC_NUM_PARCELA,
								RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,RC_SEGUNDO_CONTROL,RC_NUM_FIJO,IDENTIFICACION_IBI,
								COD_PROVINCIA,NOMBRE_PROVINCIA,COD_MUNICIPIO_DGC,COD_MUNICIPIO_INE,NOMBRE_MUNICIPIO,
								NOMBRE_ENTIDAD_MENOR,COD_VIA_PUBLICA,TIPO_VIA,NOMBRE_VIA,PRIMER_NUMERO,PRIMERA_LETRA,
								SEGUNDO_NUMERO,SEGUNDA_LETRA,KILOMETRO,BLOQUE,ESCALERA,PLANTA,PUERTA,TEXTO_DIRECCION,
								CODIGO_POSTAL,DISTRITO_MUNICIPAL,COD_MUNICIPIO_AGRAGACION,COD_ZONA,COD_POLIGONO,COD_PARCELA,
								NOMBRE_PARAJE,YEAR_PADRON,VALOR_CATASTRAL,VC_SUELO,VC_CONSTRUCCION,BASE_LIQUIDABLE,CLAVE_USO,
								VC_BONIFICADO,CLAVE_BONIFICACION,SUPERFICIE_CONSTRUIDA,SUPERFICIE_SUELO,
								COEFICIENTE_PROPIEDAD,VALOR_BASE,COD_VALOR_BASE,YEAR_EFECTOS_VC,VC_EFECTOS_IBI,YEAR_REVISION,
								YEAR_REVISION_PARCIAL,PERIODO_VIGENCIA,COD_DERECHO,NUMERO_TITULARES,TIPO_TITULARES,
								COMPLEMENTO_TITULARIDAD,NIF,NOMBRE,CLAVE_IDENTIFICACION,COD_PROVINCIA_FISCAL,
								NOMBRE_PROVINCIA_FISCAL,COD_MUNICIPIO_DGC_FISCAL,COD_MUNICIPIO_INE_FISCAL,
								NOMBRE_MUNICIPIO_FISCAL,NOMBRE_ENTIDAD_MENOR_FISCAL,COD_VIA_PUBLICA_FISCAL,TIPO_VIA_FISCAL,
								NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,PRIMERA_LETRA_FISCAL,SEGUNDO_NUMERO_FISCAL,
								SEGUNDA_LETRA_FISCAL,KILOMETRO_FISCAL,BLOQUE_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,
								PUERTA_FISCAL,TEXTO_DIRECCION_FISCAL,CODIGO_POSTAL_FISCAL,APARTADO_CORREOS_FISCAL,     
								NIF_CONYUGE,NOMBRE_CONYUGE,CLASE_ALTERACION,TIPO_EXPEDIENTE,FECHA_ALTERACION,
								YEAR_EXPEDIENTE,REFERENCIA_EXPEDIENTE,YEAR_EXPEDIENTE_EC,REFERENCIA_EXPEDIENTE_EC,
								COD_ENTIDAD_COLABORADORA,CARGADO,F_GRABACION)    
     					VALUES (vIBI.COD_DELEGACION,vIBI.COD_MUNICIPIO,vIBI.CLASE_IBI,vIBI.RC_NUM_PARCELA,
     							vIBI.RC_NUM_SECUENCIAL,vIBI.RC_PRIMER_CONTROL,vIBI.RC_SEGUNDO_CONTROL,vIBI.RC_NUM_FIJO,
     							vIBI.IDENTIFICACION_IBI,vIBI.COD_PROVINCIA,vIBI.NOMBRE_PROVINCIA,vIBI.COD_MUNICIPIO_DGC,
     							vIBI.COD_MUNICIPIO_INE,vIBI.NOMBRE_MUNICIPIO,vIBI.NOMBRE_ENTIDAD_MENOR,vIBI.COD_VIA_PUBLICA,
     							vIBI.TIPO_VIA,vIBI.NOMBRE_VIA,vIBI.PRIMER_NUMERO,vIBI.PRIMERA_LETRA,vIBI.SEGUNDO_NUMERO,
     							vIBI.SEGUNDA_LETRA,vIBI.KILOMETRO,vIBI.BLOQUE,vIBI.ESCALERA,vIBI.PLANTA,vIBI.PUERTA,
     							vIBI.TEXTO_DIRECCION,vIBI.CODIGO_POSTAL,vIBI.DISTRITO_MUNICIPAL,
     							vIBI.COD_MUNICIPIO_AGRAGACION,vIBI.COD_ZONA,vIBI.COD_POLIGONO,vIBI.COD_PARCELA,
     							vIBI.NOMBRE_PARAJE,vIBI.YEAR_PADRON,vIBI.VALOR_CATASTRAL,vIBI.VC_SUELO,vIBI.VC_CONSTRUCCION,
     							vIBI.BASE_LIQUIDABLE,vIBI.CLAVE_USO,vIBI.VC_BONIFICADO,vIBI.CLAVE_BONIFICACION,
     							vIBI.SUPERFICIE_CONSTRUIDA,vIBI.SUPERFICIE_SUELO,vIBI.COEFICIENTE_PROPIEDAD,vIBI.VALOR_BASE,
     							vIBI.COD_VALOR_BASE,vIBI.YEAR_EFECTOS_VC,vIBI.VC_EFECTOS_IBI,vIBI.YEAR_REVISION,
     							vIBI.YEAR_REVISION_PARCIAL,vIBI.PERIODO_VIGENCIA,vIBI.COD_DERECHO,vIBI.NUMERO_TITULARES,
     							vIBI.TIPO_TITULARES,vIBI.COMPLEMENTO_TITULARIDAD,vIBI.NIF,vIBI.NOMBRE,
     							vIBI.CLAVE_IDENTIFICACION,vIBI.COD_PROVINCIA_FISCAL,vIBI.NOMBRE_PROVINCIA_FISCAL,
     							vIBI.COD_MUNICIPIO_DGC_FISCAL,vIBI.COD_MUNICIPIO_INE_FISCAL,vIBI.NOMBRE_MUNICIPIO_FISCAL,
     							vIBI.NOMBRE_ENTIDAD_MENOR_FISCAL,vIBI.COD_VIA_PUBLICA_FISCAL,vIBI.TIPO_VIA_FISCAL,
     							vIBI.NOMBRE_VIA_FISCAL,vIBI.PRIMER_NUMERO_FISCAL,vIBI.PRIMERA_LETRA_FISCAL,
     							vIBI.SEGUNDO_NUMERO_FISCAL,vIBI.SEGUNDA_LETRA_FISCAL,vIBI.KILOMETRO_FISCAL,
     							vIBI.BLOQUE_FISCAL,vIBI.ESCALERA_FISCAL,vIBI.PLANTA_FISCAL,vIBI.PUERTA_FISCAL,
     							vIBI.TEXTO_DIRECCION_FISCAL,vIBI.CODIGO_POSTAL_FISCAL,vIBI.APARTADO_CORREOS_FISCAL,
     							vIBI.NIF_CONYUGE,vIBI.NOMBRE_CONYUGE,vIBI.CLASE_ALTERACION,vIBI.TIPO_EXPEDIENTE,
     							vIBI.FECHA_ALTERACION,vIBI.YEAR_EXPEDIENTE,vIBI.REFERENCIA_EXPEDIENTE,
     							vIBI.YEAR_EXPEDIENTE_EC,vIBI.REFERENCIA_EXPEDIENTE_EC,vIBI.COD_ENTIDAD_COLABORADORA,
     							vIBI.CARGADO,vIBI.F_GRABACION);   		
     		END;
    	END LOOP;
		CLOSE vCURSOR;
	
	ELSIF (xTIPO_LISTADO=2) THEN
		vSentencia:='SELECT USER,p.rc_num_parcela,p.rc_num_secuencial,p.rc_primer_control,p.rc_segundo_control,p.nif,p.nombre,'||
			'trim(trim(p.tipo_via_fiscal)||'' ''||trim(p.nombre_via_fiscal)||'' ''||trim(p.primer_numero_fiscal)||'' ''||'||
			'trim(p.escalera_fiscal)||'' ''||trim(p.planta_fiscal)||'' ''||trim(p.puerta_fiscal)) AS DIRECCION_FISCAL,'||
			'p.valor_catastral,p.base_liquidable,i.nif AS BD_NIF,i.nombre AS BD_NOMBRE,'||
			'trim(trim(i.tipo_via_fiscal)||'' ''||trim(i.nombre_via_fiscal)||'' ''||'||
			'trim(i.primer_numero_fiscal)||'' ''||trim(i.escalera_fiscal)||'' ''||trim(i.planta_fiscal)||'' ''||'||
			'trim(i.puerta_fiscal)) AS BD_DIRECCION_FISCAL,i.valor_catastral AS BD_VALOR_CATASTRAL,'||
			'i.base_liquidable AS BD_BASE_LIQUIDABLE '||
			'FROM tmp_padrones_ibi p JOIN ibi i ON p.cod_municipio=i.municipio AND p.cod_municipio=:xMUNICIPIO '|| 
			'AND p.year_padron=:xYEAR AND i.YEAR=p.year_padron-1 AND p.rc_num_parcela=i.ref_catastral AND '||
			'p.rc_num_secuencial=i.numero_secuencial AND CLASE_ALTERACION=:xCLASE_ALTERACION AND CLASE_IBI<>''RU'' ';
		IF (xCLASE_ALTERACION='CONT') THEN
			vSentencia:=vSentencia||			
			'AND (i.nif<>p.nif OR i.nombre<>p.nombre OR trim(trim(p.tipo_via_fiscal)||'' ''||trim(p.nombre_via_fiscal)'||
			'||'' ''||trim(p.primer_numero_fiscal)||'' ''||trim(p.escalera_fiscal)||'' ''||trim(p.planta_fiscal)'||
			'||'' ''||trim(p.puerta_fiscal))<>trim(trim(i.tipo_via_fiscal)||'' ''||trim(i.nombre_via_fiscal)'||
			'||'' ''||trim(i.primer_numero_fiscal)||'' ''||trim(i.escalera_fiscal)||'' ''||trim(i.planta_fiscal)'||
			'||'' ''||trim(i.puerta_fiscal))) ';
		END IF;
			
		vSentencia:=vSentencia||'ORDER BY p.rc_num_parcela,rc_num_secuencial';
		
		--Asignar consulta a cursor, abrirlo y recorrerlo 
    	OPEN vCURSOR FOR vSENTENCIA USING xMUNICIPIO,xYEAR,xCLASE_ALTERACION;
    	LOOP
			FETCH vCURSOR INTO vCOMP;
   	   EXIT WHEN vCURSOR%NOTFOUND;
   	   		
   	   -- para los tipos de variación CONT y EV01
   	   -- sólo nos interesan las referencias con alguna variación.
   	   -- para ello consultaremos la tabla REFERENCIAS_BANCOS.
   	   IF ((xCLASE_ALTERACION='CONT') OR (xCLASE_ALTERACION='EV01')) THEN
   	   	xCONTINUAR:=FALSE;
   	   	BEGIN
   	   		SELECT VARIACION INTO xVARIACION FROM REFERENCIAS_BANCOS 
   	   		WHERE REF_CATASTRAL=vCOMP.RC_NUM_PARCELA||vCOMP.RC_NUM_SECUENCIAL||vCOMP.RC_PRIMER_CONTROL||
   	   		vCOMP.RC_SEGUNDO_CONTROL AND MUNICIPIO=xMUNICIPIO;
   	   		EXCEPTION
   	   			WHEN NO_DATA_FOUND THEN
   	   				xVARIACION:='N';
   	   	END;
   	   END IF;
   	   		
   	   IF ((xVARIACION='S') OR (xCONTINUAR=TRUE)) THEN
   	   	INSERT INTO TMP_LISTADOS_IBI_COMP(
					RC_NUM_PARCELA,RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,RC_SEGUNDO_CONTROL,NIF,
					NOMBRE,DIRECCION_FISCAL,BD_NIF,BD_NOMBRE,BD_DIRECCION_FISCAL,VALOR_CATASTRAL,
					BASE_LIQUIDABLE,BD_VALOR_CATASTRAL,BD_BASE_LIQUIDABLE) 
				VALUES(
					vCOMP.RC_NUM_PARCELA,vCOMP.RC_NUM_SECUENCIAL,vCOMP.RC_PRIMER_CONTROL,vCOMP.RC_SEGUNDO_CONTROL,
					vCOMP.NIF,vCOMP.NOMBRE,vCOMP.DIRECCION_FISCAL,vCOMP.BD_NIF,vCOMP.BD_NOMBRE,
					vCOMP.BD_DIRECCION_FISCAL,vCOMP.VALOR_CATASTRAL,vCOMP.BASE_LIQUIDABLE,vCOMP.BD_VALOR_CATASTRAL,
					vCOMP.BD_BASE_LIQUIDABLE);
   	   END IF;   	   		
   	   		
   	END LOOP;
   	CLOSE vCURSOR;
	END IF;	

END;
/

--**********************************************************************************************
-- 07/04/2006 Mª Carmen Junco Gómez
---Procedimiento de carga individual 
-- Parámetro adicional a la información de disco: xTIPO_CARGA: Indicará si se ha de considerar la
-- información del parámetro xCLASE_ALTERACION para la carga de la información de titularidad o no
-- Si xTIPO_CARGA=0, no considerar xCLASE_ALTERACION; si xTIPO_CARGA=1, considerar el parámetro
--
-- MODIFICACION: 05/02/2007. Lucas Fernández Pérez. Nuevos parametros bloque-portal en la llamada a InsertaModiContribuyente.
--
CREATE OR REPLACE PROCEDURE INSERTA_REGISTRO_IBI (
     	xCLASE_ALTERACION			IN CHAR,
     	xTIPO_CARGA					IN	INTEGER,
 	 	xMUNICIPIO 					IN CHAR,
     	xYEAR							IN CHAR,
	 	xCOD_DELEGACION_MEH		IN CHAR,
  	 	xCOD_GERENCIA				IN CHAR,
     	xCOD_MUNICIPIO				IN CHAR,
     	xREF_CATASTRAL				IN CHAR,
     	xNUMERO_SECUENCIAL		IN CHAR,
	 	xPRIMER_CARACTER_CONTROL	IN CHAR,
     	xSEGUN_CARACTER_CONTROL	IN CHAR,
     	xNUM_FIJO					IN CHAR,
	 	xLETRA_NUM_FIJO			IN CHAR,
     	xIDENTIFICACION			IN CHAR,
     	xCOEFICIENTE_PARTICI		IN CHAR,
	 	xCOD_PROVI_INE				IN CHAR,
     	xCOD_MUNI_INE				IN CHAR,
     	xDISTRITO_MUNI				IN CHAR,
     	xCOD_ENTIDAD_MENOR		IN CHAR,
	 	xCOD_VIA_PUBLICA			IN CHAR,
     	xTIPO_VIA					IN CHAR,
     	xNOMBRE_VIA					IN CHAR,
     	xPRIMER_NUMERO				IN CHAR,
	 	xPRIMERA_LETRA				IN CHAR,
     	xSEGUNDO_NUMERO			IN CHAR,
     	xSEGUNDA_LETRA				IN CHAR,
     	xKILOMETRO					IN CHAR,
	 	xBLOQUE						IN CHAR,
     	xTEXTO_DIRECCION			IN CHAR,
     	xCODIGO_POSTAL				IN CHAR,
     	xESCALERA					IN CHAR,
     	xPLANTA						IN CHAR,
	 	xPUERTA						IN CHAR,
     	xNIF							IN CHAR,
     	xPERSONALIDAD				IN CHAR,
     	xNOMBRE						IN CHAR,
     	xCOD_DEL_MEH				IN CHAR,
	 	xCOD_MUNICIPIO_DGC		IN CHAR,
     	xCOD_PROVI_INE_FISCAL	IN CHAR,
     	xCOD_MUNI_INE_FISCAL		IN CHAR,
	 	xCOD_VIA_PUBLICA_FISCAL	IN CHAR,
     	xTIPO_VIA_FISCAL			IN CHAR,
     	xNOMBRE_VIA_FISCAL		IN CHAR,
	 	xPRIMER_NUMERO_FISCAL	IN CHAR,
     	xPRIMERA_LETRA_FISCAL	IN CHAR,
     	xSEGUNDO_NUMERO_FISCAL	IN CHAR,
	 	xSEGUNDA_LETRA_FISCAL	IN CHAR,
     	xKILOMETRO_FISCAL			IN CHAR,
     	xBLOQUE_FISCAL				IN CHAR,
	 	xTEXTO_DIRECCION_FISCAL	IN CHAR,
     	xESCALERA_FISCAL			IN CHAR,
     	xPLANTA_FISCAL				IN CHAR,
	 	xPUERTA_FISCAL				IN CHAR,
     	xCOD_POSTAL_FISCAL		IN CHAR,
     	xAPARTADO_CORREOS			IN CHAR,
	 	xPAIS							IN CHAR,
     	xPROVINCIA					IN CHAR,
     	xMUNICIPIO_FISCAL		   IN CHAR,
     	xYEAR_VALOR_CATASTRAL	IN CHAR,
	 	xVALOR_CATASTRAL			IN FLOAT,
     	xVALOR_SUELO				IN FLOAT,
     	xVALOR_CONSTRUCCION		IN FLOAT,
	 	xBASE_LIQUIDABLE			IN FLOAT,
     	xCLAVE_USO					IN CHAR,
     	xYEAR_ULTIMA_REVISION	IN CHAR,
	 	xYEAR_ULTIMA_NOTIFICA	IN CHAR,
     	xNUM_ULTIMA_NOTIFICA		IN CHAR,
	 	xSUPERFICIE_FINCAS		IN FLOAT,
     	xSUPERFICIE_SOLARES		IN FLOAT,
     	xCOEFICIENTE_FINCA		IN FLOAT)
AS
	xDOMICILIADO   	CHAR(1);
	xENTIDAD       	CHAR(4);
	xSUCURSAL      	CHAR(4);
	xDC            	CHAR(2);
	xCUENTA        	CHAR(10);
	xF_DOMICILIACION  DATE;
	xDNI_FACTURA   	CHAR(10);
	xID_CONCEPTO   	INTEGER;

	xREPRESENTANTE		CHAR(10);
	xIDDOMIALTER		INTEGER;
	xCOTITULARES		CHAR(1);

	xNIF_old 				 	CHAR(10);
	xNOMBRE_old 				CHAR(60);
	xTIPO_VIA_FISCAL_old		CHAR(5);
	xNOMBRE_VIA_FISCAL_old	CHAR(25);
	xPRIMER_NUMERO_FISCAL_old	CHAR(4);
	xESCALERA_FISCAL_old		CHAR(2);
	xPLANTA_FISCAL_old		CHAR(3);
	xPUERTA_FISCAL_old		CHAR(3);
	xCOD_POSTAL_FISCAL_old	CHAR(5);
	xMUNICIPIO_FISCAL_old	CHAR(25);
	xPROVINCIA_old				CHAR(25);
	xPAIS_old					CHAR(25);
	xTIPO_VIA_old				CHAR(5);
	xNOMBRE_VIA_old			CHAR(25);
	xPRIMER_NUMERO_old		CHAR(4);
	xBLOQUE_old					CHAR(4);
	xESCALERA_old				CHAR(2);
	xPLANTA_old					CHAR(3);
	xPUERTA_old					CHAR(3);

	xBONIFICACION_old			FLOAT;
	xYEAR_INI_BONI_old		CHAR(4);
	xMES_INI_BONI_old			CHAR(2);
	xYEAR_BONI_old				CHAR(4);
	xMES_BONI_old				CHAR(2);
	xARTICULO_old				CHAR(6);

	mNIF	 						CHAR(10);
	mNOMBRE	 					CHAR(60);
	mTIPO_VIA_FISCAL			CHAR(5);
	mNOMBRE_VIA_FISCAL		CHAR(25);
	mPRIMER_NUMERO_FISCAL	CHAR(4);
	mESCALERA_FISCAL			CHAR(2);
	mPLANTA_FISCAL				CHAR(3);
	mPUERTA_FISCAL				CHAR(3);
	mCOD_POSTAL_FISCAL		CHAR(5);
	mMUNICIPIO_FISCAL			CHAR(25);
	mPROVINCIA					CHAR(25);
	mPAIS							CHAR(25);
	mTIPO_VIA					CHAR(5);
	mNOMBRE_VIA					CHAR(25);
	mPRIMER_NUMERO				CHAR(4);
	mBLOQUE						CHAR(4);
   mESCALERA					CHAR(2);
	mPLANTA						CHAR(3);
	mPUERTA						CHAR(3);

   xCORREGIDOS					CHAR(1);
	xID							INTEGER;
	xIDIBIOLD					INTEGER; --id del ibi del año anterior.
	xVARIACION					CHAR(1) DEFAULT 'N';
	xQUIEN_VARIA				CHAR(1);
	mCODMOTIVO					VARCHAR2(512);

BEGIN

   -- recogemos información de la cinta del año anterior, tales como la domiciliación,
   -- bonificación, datos del representante, domicilios alternativos y cotitulares.
   -- también se recogen los datos fiscales, ya que en el caso de haber
   -- variación serán estos datos los que se deban meter en la lectura de este año.
   begin
   		SELECT ID,DOMICILIADO,ENTIDAD,SUCURSAL,DC,CUENTA,F_DOMICILIACION,DNI_FACTURA,
		 		 REPRESENTANTE,IDDOMIALTER,COTITULARES,NIF,NOMBRE,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
      	 	 PRIMER_NUMERO_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,COD_POSTAL_FISCAL,
      	 	 MUNICIPIO_FISCAL,PROVINCIA,PAIS,TIPO_VIA,NOMBRE_VIA,PRIMER_NUMERO,BLOQUE,ESCALERA,PLANTA,PUERTA,
		 		 BONIFICACION,YEAR_INI_BONI,MES_INI_BONI,YEAR_BONI,MES_BONI,ARTICULO
		INTO 	 xIDIBIOLD,xDOMICILIADO,xENTIDAD,xSUCURSAL,xDC,xCUENTA,xF_DOMICILIACION,xDNI_FACTURA,
	     		 xREPRESENTANTE,xIDDOMIALTER,xCOTITULARES,xNIF_old,xNOMBRE_old,xTIPO_VIA_FISCAL_old,
	     		 xNOMBRE_VIA_FISCAL_old,xPRIMER_NUMERO_FISCAL_old,xESCALERA_FISCAL_old,xPLANTA_FISCAL_old,
         	 xPUERTA_FISCAL_old,xCOD_POSTAL_FISCAL_old,xMUNICIPIO_FISCAL_old,xPROVINCIA_old,xPAIS_old,
         	 xTIPO_VIA_old,xNOMBRE_VIA_old,xPRIMER_NUMERO_old,xBLOQUE_old,xESCALERA_old,xPLANTA_old,xPUERTA_old,
		 		 xBONIFICACION_old,xYEAR_INI_BONI_old,xMES_INI_BONI_old,xYEAR_BONI_old,xMES_BONI_old,xARTICULO_old
		FROM IBI 
		WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR-1 AND REF_CATASTRAL=xREF_CATASTRAL
	 			AND NUMERO_SECUENCIAL=xNUMERO_SECUENCIAL; 			

		EXCEPTION
	   	when no_data_found then
	    	xIDIBIOLD:=Null;
	    	xDOMICILIADO:=NULL;
			xENTIDAD:=Null;
			xSUCURSAL:=Null;
			xDC:=Null;
			xCUENTA:=Null;
			xF_DOMICILIACION:=Null;
			xDNI_FACTURA:=Null;
			xREPRESENTANTE:=Null;
			xIDDOMIALTER:=Null;
			xCOTITULARES:=Null;
			xBONIFICACION_old:=NULL;
	end;
	
	--inicializamos la información a cargar con lo que trae Catastro
	mNIF:=xNIF;
	mNOMBRE:=xNOMBRE;
	mTIPO_VIA_FISCAL:=xTIPO_VIA_FISCAL;
	mNOMBRE_VIA_FISCAL:=xNOMBRE_VIA_FISCAL;
	mPRIMER_NUMERO_FISCAL:=xPRIMER_NUMERO_FISCAL;
	mESCALERA_FISCAL:=xESCALERA_FISCAL;
	mPLANTA_FISCAL:=xPLANTA_FISCAL;
	mPUERTA_FISCAL:=xPUERTA_FISCAL;
	mCOD_POSTAL_FISCAL:=xCOD_POSTAL_FISCAL;
	mMUNICIPIO_FISCAL:=xMUNICIPIO_FISCAL;
	mPROVINCIA:=xPROVINCIA;
	mPAIS:=xPAIS;
	mTIPO_VIA:=xTIPO_VIA;
	mNOMBRE_VIA:=xNOMBRE_VIA;
   	mPRIMER_NUMERO:=xPRIMER_NUMERO;
	mBLOQUE:=xBLOQUE;
	mESCALERA:=xESCALERA;
	mPLANTA:=xPLANTA;
	mPUERTA:=xPUERTA;
	
	-- Tendremos que averiguar si ha habido alguna variación del registro que
   	-- queremos insertar en años anteriores. Para ello hacemos uso de la tabla
   	-- REFERENCIAS_BANCOS.
   	begin
     	SELECT VARIACION INTO xVARIACION FROM REFERENCIAS_BANCOS
	  	WHERE MUNICIPIO=xMUNICIPIO AND REF_CATASTRAL=xREF_CATASTRAL || xNUMERO_SECUENCIAL ||
			  xPRIMER_CARACTER_CONTROL || xSEGUN_CARACTER_CONTROL;
   	Exception
	  	When no_data_found then
			xVARIACION:='N';
   	end;	

   	IF ( (xTIPO_CARGA=0) OR ((xTIPO_CARGA=1) AND ((xCLASE_ALTERACION='CONT') OR (xCLASE_ALTERACION='EV01'))) ) THEN
   
   		IF (xVARIACION<>'N') THEN
      	-- antes de hacer el cambio comprobaremos si los datos que vienen en la Cinta de
 	  		-- Hacienda este año vienen ya corregidos o no.
			IF (xNIF=xNIF_old AND xNOMBRE=xNOMBRE_old AND xTIPO_VIA_FISCAL=xTIPO_VIA_FISCAL_old AND
	    		xNOMBRE_VIA_FISCAL=xNOMBRE_VIA_FISCAL_old AND xPRIMER_NUMERO_FISCAL=xPRIMER_NUMERO_FISCAL_old AND
	    		xESCALERA_FISCAL=xESCALERA_FISCAL_old AND xPLANTA_FISCAL=xPLANTA_FISCAL_old AND
        		xPUERTA_FISCAL=xPUERTA_FISCAL_old AND xCOD_POSTAL_FISCAL=xCOD_POSTAL_FISCAL_old AND
	    		xMUNICIPIO_FISCAL=xMUNICIPIO_FISCAL_old AND xPROVINCIA=xPROVINCIA_old AND
	    		xPAIS=xPAIS_old AND xTIPO_VIA=xTIPO_VIA_old AND xNOMBRE_VIA=xNOMBRE_VIA_old AND
	    		xPRIMER_NUMERO=xPRIMER_NUMERO_old AND xBLOQUE=xBLOQUE_old AND
	    		xESCALERA=xESCALERA_old AND xPLANTA=xPLANTA_old AND xPUERTA=xPUERTA_old) THEN

       			-- Si los datos están corregidos lo indicamos en la tabla REFERENCIAS_BANCOS 
	   			-- modificando el valor de VARIACION='N' para que el año siguiente no tenga que
	   			-- hacer comprobaciones innecesarias.
	   			xCORREGIDOS:='S';
	   			UPDATE REFERENCIAS_BANCOS SET VARIACION='N'
	   			WHERE MUNICIPIO=xMUNICIPIO AND REF_CATASTRAL=xREF_CATASTRAL || xNUMERO_SECUENCIAL ||
				  			xPRIMER_CARACTER_CONTROL || xSEGUN_CARACTER_CONTROL;
    		ELSE
	   			xCORREGIDOS:='N';
	   			mNIF:=xNIF_old;
	   			mNOMBRE:=xNOMBRE_old;
	   			mTIPO_VIA_FISCAL:=xTIPO_VIA_FISCAL_old;
	   			mNOMBRE_VIA_FISCAL:=xNOMBRE_VIA_FISCAL_old;
	   			mPRIMER_NUMERO_FISCAL:=xPRIMER_NUMERO_FISCAL_old;
	   			mESCALERA_FISCAL:=xESCALERA_FISCAL_old;
	   			mPLANTA_FISCAL:=xPLANTA_FISCAL_old;
	   			mPUERTA_FISCAL:=xPUERTA_FISCAL_old;
	   			mCOD_POSTAL_FISCAL:=xCOD_POSTAL_FISCAL_old;
	   			mMUNICIPIO_FISCAL:=xMUNICIPIO_FISCAL_old;
	   			mPROVINCIA:=xPROVINCIA_old;
	   			mPAIS:=xPAIS_old;
	   			mTIPO_VIA:=xTIPO_VIA_old;
	   			mNOMBRE_VIA:=xNOMBRE_VIA_old;
       			mPRIMER_NUMERO:=xPRIMER_NUMERO_old;
	   			mBLOQUE:=xBLOQUE_old;
	   			mESCALERA:=xESCALERA_old;
	   			mPLANTA:=xPLANTA_old;
	   			mPUERTA:=xPUERTA_old;	
	   		
	   			begin
		   			SELECT COD_MOTIVO INTO mCODMOTIVO 
		   			FROM HIS_CARGOREAL_IBI
						WHERE IDIBI=xIDIBIOLD AND FECHA IN (SELECT MAX(FECHA) 
						FROM HIS_CARGOREAL_IBI WHERE IDIBI=xIDIBIOLD);
	   			exception
						when no_data_found then
							mCODMOTIVO:='CV02';  -- por defecto, cambio de la información físico-económica
	   			end;	   
	   		
	   			xQUIEN_VARIA:='S'; --variación automática debido al proceso de carga
	   		
   			END IF;
   		END IF; -- IF (xVARIACION<>'N') THEN
   		
  	-- en este caso hay que cargar lo que viene de Catastro
  	
   	ELSIF ( (xTIPO_CARGA=1) AND ((xCLASE_ALTERACION='EV03') OR (xCLASE_ALTERACION='EN01')) ) THEN
		
   		--Anular la domiciliación si verdaderamente cambia el NIF con respecto al año anterior, ya
   		--que el cambio de titularidad se puede deber a la incorporación de un titular, por ejemplo.
   	
   		IF (mNIF<>xNIF_OLD) THEN
			xDOMICILIADO:=NULL;   		
   		END IF;
   
	   	xCORREGIDOS:= 'N'; --indicamos que 'N' para que realice un apunte en el histórico de cambios de IBI. De esta manera,
	   						 --indicamos la rectificación que ha realizado catastro con respecto a la información del año 
	   						 --anterior
		mCODMOTIVO:='CV01'; -- por defecto indicaremos cambio de titularidad, ya que en ambas opciones (EV03 y EN01) se
								 --produce la misma, incluyendo además EV03 un cambio físico-económico.
		xQUIEN_VARIA:='C'; --variación procedente de rectificación de Catastro
   
   	END IF;

	InsertaModiContribuyente(mNIF,substr(mNOMBRE,1,40),substr(mTIPO_VIA_FISCAL,1,2),mNOMBRE_VIA_FISCAL,
			mPRIMER_NUMERO_FISCAL,mBLOQUE,'',mESCALERA,mPLANTA,substr(mPUERTA,1,2),mMUNICIPIO_FISCAL,mPROVINCIA,
			mCOD_POSTAL_FISCAL,mPAIS);			
	

	IF (xDOMICILIADO IS NULL) THEN
   		xDOMICILIADO:='N';
		xSUCURSAL:=NULL;
		xDC:=NULL;
		xCUENTA:=NULL;
		xF_DOMICILIACION:=NULL;
		xDNI_FACTURA:=NULL;
		xREPRESENTANTE:=NULL;
		xIDDOMIALTER:=NULL;
		xCOTITULARES:='N';
	END IF;

  	IF (xBONIFICACION_old IS NULL) THEN
   		xYEAR_INI_BONI_old:='0000';
		xMES_INI_BONI_old:='00';
		xYEAR_BONI_old:='0000';
		xMES_BONI_old:='00';
		xBONIFICACION_old:=0;
		xARTICULO_old:='';
  	END IF;

  	INSERT INTO IBI
      (MUNICIPIO, YEAR, COD_DELEGACION_MEH,
      COD_GERENCIA, COD_MUNICIPIO, REF_CATASTRAL, NUMERO_SECUENCIAL,
      PRIMER_CARACTER_CONTROL, SEGUN_CARACTER_CONTROL, NUM_FIJO,
      LETRA_NUM_FIJO, IDENTIFICACION, COEFICIENTE_PARTICI, COD_PROVI_INE,
      COD_MUNI_INE, DISTRITO_MUNI, COD_ENTIDAD_MENOR, COD_VIA_PUBLICA,
      TIPO_VIA, NOMBRE_VIA, PRIMER_NUMERO, PRIMERA_LETRA, SEGUNDO_NUMERO,
      SEGUNDA_LETRA, KILOMETRO, BLOQUE, TEXTO_DIRECCION, CODIGO_POSTAL,
      ESCALERA, PLANTA, PUERTA, NIF, PERSONALIDAD, NOMBRE, COD_DEL_MEH,
      COD_MUNICIPIO_DGC, COD_PROVI_INE_FISCAL, COD_MUNI_INE_FISCAL,
      COD_VIA_PUBLICA_FISCAL, TIPO_VIA_FISCAL, NOMBRE_VIA_FISCAL,
      PRIMER_NUMERO_FISCAL, PRIMERA_LETRA_FISCAL, SEGUNDO_NUMERO_FISCAL,
      SEGUNDA_LETRA_FISCAL, KILOMETRO_FISCAL, BLOQUE_FISCAL,
      TEXTO_DIRECCION_FISCAL, ESCALERA_FISCAL, PLANTA_FISCAL,
      PUERTA_FISCAL, COD_POSTAL_FISCAL, APARTADO_CORREOS, PAIS, PROVINCIA,
      MUNICIPIO_FISCAL, YEAR_VALOR_CATASTRAL, VALOR_CATASTRAL, VALOR_SUELO,
   	  VALOR_CONSTRUCCION, BASE_LIQUIDABLE, CLAVE_USO, YEAR_ULTIMA_REVISION,
      YEAR_ULTIMA_NOTIFICA, NUM_ULTIMA_NOTIFICA, SUPERFICIE_FINCAS,
      SUPERFICIE_SOLARES, COEFICIENTE_FINCA, DOMICILIADO, ENTIDAD,
      SUCURSAL, DC, CUENTA,F_DOMICILIACION, DNI_FACTURA,
	  YEAR_INI_BONI,MES_INI_BONI,YEAR_BONI,MES_BONI,BONIFICACION,ARTICULO,
	  REPRESENTANTE,IDDOMIALTER,COTITULARES)
  	VALUES
     	(xMUNICIPIO, xYEAR, xCOD_DELEGACION_MEH,
	 	xCOD_GERENCIA, xCOD_MUNICIPIO, xREF_CATASTRAL, xNUMERO_SECUENCIAL,
	 	xPRIMER_CARACTER_CONTROL, xSEGUN_CARACTER_CONTROL, xNUM_FIJO,
	 	xLETRA_NUM_FIJO, xIDENTIFICACION, xCOEFICIENTE_PARTICI,
	 	xCOD_PROVI_INE,xCOD_MUNI_INE, xDISTRITO_MUNI, xCOD_ENTIDAD_MENOR,
	 	xCOD_VIA_PUBLICA, mTIPO_VIA, mNOMBRE_VIA, mPRIMER_NUMERO,
	 	xPRIMERA_LETRA, xSEGUNDO_NUMERO, xSEGUNDA_LETRA, xKILOMETRO,
	 	mBLOQUE, xTEXTO_DIRECCION, xCODIGO_POSTAL, mESCALERA, mPLANTA,
	 	mPUERTA, mNIF, xPERSONALIDAD, mNOMBRE, xCOD_DEL_MEH,
	 	xCOD_MUNICIPIO_DGC, xCOD_PROVI_INE_FISCAL, xCOD_MUNI_INE_FISCAL,
	 	xCOD_VIA_PUBLICA_FISCAL, mTIPO_VIA_FISCAL, mNOMBRE_VIA_FISCAL,
     	mPRIMER_NUMERO_FISCAL, xPRIMERA_LETRA_FISCAL, xSEGUNDO_NUMERO_FISCAL,
	 	xSEGUNDA_LETRA_FISCAL, xKILOMETRO_FISCAL, xBLOQUE_FISCAL,
	 	xTEXTO_DIRECCION_FISCAL, mESCALERA_FISCAL, mPLANTA_FISCAL,
	 	mPUERTA_FISCAL, mCOD_POSTAL_FISCAL, xAPARTADO_CORREOS,
	 	mPAIS, mPROVINCIA, mMUNICIPIO_FISCAL, xYEAR_VALOR_CATASTRAL,
	 	xVALOR_CATASTRAL, xVALOR_SUELO, xVALOR_CONSTRUCCION, xBASE_LIQUIDABLE,
     	xCLAVE_USO, xYEAR_ULTIMA_REVISION,xYEAR_ULTIMA_NOTIFICA, xNUM_ULTIMA_NOTIFICA,
	 	xSUPERFICIE_FINCAS, xSUPERFICIE_SOLARES, xCOEFICIENTE_FINCA,
	 	xDOMICILIADO, xENTIDAD, xSUCURSAL, xDC, xCUENTA, xF_DOMICILIACION, xDNI_FACTURA,
	 	xYEAR_INI_BONI_old,xMES_INI_BONI_old,xYEAR_BONI_old,xMES_BONI_old,xBONIFICACION_old,xARTICULO_old,
	 	xREPRESENTANTE,xIDDOMIALTER,xCOTITULARES)
   RETURNING ID INTO xID;
   
   -- Asociamos el ID a los titulares de la tabla TMP_TITULARES_IBI
   UPDATE TMP_TITULARES_IBI SET IDIBI=xID 
   WHERE RC_NUM_PARCELA=xREF_CATASTRAL AND RC_NUM_SECUENCIAL=xNUMERO_SECUENCIAL AND 
   		CLASE_IBI<>'RU' AND COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR;

	IF (xCORREGIDOS='N') THEN
	  	-- si NO vienen los datos corregidos en la cinta de este año, insertamos una nueva tupla
	   -- de variaciones, indicando que la ha generado el programa automáticamente. La variación
	   -- se indicará que proviene de IBI, si es una variación del año pasado que no ha recogido
	   -- el catastro, o una rectificación proveniente de Catastro
	   INSERT INTO HIS_CARGOREAL_IBI
			(IDIBI,AYTO,TIPO_VARIACION,QUIEN_VARIA,FECHA_ALTERACION,NIF,NOMBRE,TIPO_VIA_FISCAL,
		   NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL, ESCALERA_FISCAL,PLANTA_FISCAL, PUERTA_FISCAL,
	      COD_POSTAL_FISCAL,MUNICIPIO_FISCAL,PROVINCIA,PAIS,TIPO_VIA,NOMBRE_VIA,
		   PRIMER_NUMERO,BLOQUE,ESCALERA,PLANTA,PUERTA,COD_MOTIVO)
	   VALUES
			(xID,xMUNICIPIO,'A',xQUIEN_VARIA,SYSDATE,xNIF,xNOMBRE,xTIPO_VIA_FISCAL,xNOMBRE_VIA_FISCAL,
		   xPRIMER_NUMERO_FISCAL,xESCALERA_FISCAL,xPLANTA_FISCAL,xPUERTA_FISCAL,
	      xCOD_POSTAL_FISCAL,xMUNICIPIO_FISCAL,xPROVINCIA,xPAIS,xTIPO_VIA,
		   xNOMBRE_VIA,xPRIMER_NUMERO,xBLOQUE,xESCALERA,xPLANTA,xPUERTA,mCODMOTIVO);
	END IF;
	
END;
/

--**********************************************************************************************

--Procedimiento de carga del padrón completo
-- Mofificado: 22/01/2007. Lucas Fernández Pérez. Obtiene el número de gerencia del registro y el
--		código de delegación de la dirección fiscal para grabarlo en el ibi (antes se enviaba null)
--		Para ello hace uso de la nueva tabla cod_municipios.
--
CREATE OR REPLACE PROCEDURE CARGA_PADRON_IBI (
 	 xMUNICIPIO 			IN CHAR,
 	 xYEAR					IN	CHAR)
AS
	xTIPO_CARGA INTEGER;	
	xGerencia   CHAR(1);
	xDelegacionFiscal CHAR(2);
	
	CURSOR CIBI IS SELECT * FROM TMP_PADRONES_IBI 
						WHERE Cod_Municipio=xMunicipio AND YEAR_PADRON=xYEAR AND CLASE_IBI<>'RU' AND CARGADO='N';
BEGIN
	
	SELECT IBI_CLASE_ALTERACION INTO xTIPO_CARGA FROM DATOSPER WHERE MUNICIPIO=xMUNICIPIO;

	FOR vIBI IN CIBI
	LOOP		
		
		
		begin -- Se busca la gerencia del registro a partir del código de delegación
			SELECT GERENCIA INTO  xGerencia FROM COD_MUNICIPIOS 
				WHERE DELEGACION=vIBI.COD_DELEGACION AND COD_MUNICIPIO_DGC=vIBI.COD_MUNICIPIO;
		exception
			when no_data_found then
				xGerencia:=null;
		end;

		begin -- Se busca la delegación de la dirección fiscal
			SELECT DELEGACION INTO  xDelegacionFiscal FROM COD_MUNICIPIOS 
				WHERE COD_PROVINCIA_INE=vIBI.COD_PROVINCIA_FISCAL AND COD_MUNICIPIO_DGC=vIBI.COD_MUNICIPIO_DGC_FISCAL;
		exception
			when no_data_found then
				xDelegacionFiscal:=null;
		end;
		
		INSERTA_REGISTRO_IBI (vIBI.CLASE_ALTERACION,xTIPO_CARGA,vIBI.COD_MUNICIPIO,vIBI.YEAR_PADRON,
			vIBI.COD_DELEGACION,xGerencia,vIBI.COD_MUNICIPIO,vIBI.RC_NUM_PARCELA,vIBI.RC_NUM_SECUENCIAL,vIBI.RC_PRIMER_CONTROL,vIBI.RC_SEGUNDO_CONTROL,
			vIBI.RC_NUM_FIJO,NULL,vIBI.IDENTIFICACION_IBI,NULL,vIBI.COD_PROVINCIA,vIBI.COD_MUNICIPIO_INE,vIBI.DISTRITO_MUNICIPAL,NULL,
			vIBI.COD_VIA_PUBLICA,vIBI.TIPO_VIA,vIBI.NOMBRE_VIA,vIBI.PRIMER_NUMERO,vIBI.PRIMERA_LETRA,vIBI.SEGUNDO_NUMERO,vIBI.SEGUNDA_LETRA,vIBI.KILOMETRO,
			vIBI.BLOQUE,vIBI.TEXTO_DIRECCION,vIBI.CODIGO_POSTAL,vIBI.ESCALERA,vIBI.PLANTA,vIBI.PUERTA,vIBI.NIF,NULL,
			vIBI.NOMBRE,xDelegacionFiscal,vIBI.COD_MUNICIPIO_DGC_FISCAL,
			vIBI.COD_PROVINCIA_FISCAL,vIBI.COD_MUNICIPIO_INE_FISCAL,vIBI.COD_VIA_PUBLICA_FISCAL,vIBI.TIPO_VIA_FISCAL,vIBI.NOMBRE_VIA_FISCAL,vIBI.PRIMER_NUMERO_FISCAL,
			vIBI.PRIMERA_LETRA_FISCAL,vIBI.SEGUNDO_NUMERO_FISCAL,vIBI.SEGUNDA_LETRA_FISCAL,vIBI.KILOMETRO_FISCAL,vIBI.BLOQUE_FISCAL,vIBI.TEXTO_DIRECCION_FISCAL,
			vIBI.ESCALERA_FISCAL,vIBI.PLANTA_FISCAL,vIBI.PUERTA_FISCAL,vIBI.CODIGO_POSTAL_FISCAL,vIBI.APARTADO_CORREOS_FISCAL,NULL,vIBI.NOMBRE_PROVINCIA_FISCAL,
			SUBSTR(TRIM(vIBI.NOMBRE_MUNICIPIO_FISCAL),1,25),vIBI.YEAR_PADRON,vIBI.VALOR_CATASTRAL,vIBI.VC_SUELO,vIBI.VC_CONSTRUCCION,vIBI.BASE_LIQUIDABLE,
			vIBI.CLAVE_USO,vIBI.YEAR_REVISION,NULL,NULL,vIBI.SUPERFICIE_CONSTRUIDA,vIBI.SUPERFICIE_SUELO,vIBI.COEFICIENTE_PROPIEDAD);
	END LOOP;
	
	UPDATE TMP_PADRONES_IBI SET CARGADO='S' WHERE Cod_Municipio=xMunicipio AND YEAR_PADRON=xYEAR AND CLASE_IBI<>'RU' AND CARGADO='N';
END;
/


/********************************************************************************
Autor: Agustin Leon Robles
Fecha: 22/08/2001.
Acción:Añadir o eliminar un representante a un abonado 
Mofificado: 12/06/2006. Nuevo parámetro con el motivo por el que cambia el 
	representante, que se graba en usuariosgt y lo recoge el trigger T_UPDCUENTA_IBI
********************************************************************************/

CREATE OR REPLACE PROCEDURE ADDDEL_IBI_REPRESENTANTE 
		(xID 		IN 	integer,
		 xNIF		IN	char,
		 xMotivo IN varchar,
		 xAddDel	IN	char)
AS
BEGIN

	UPDATE USUARIOSGT SET TEXTO=xMotivo WHERE USUARIO=USER;

	if xAddDel='A' then
		update ibi set representante=xNIF where id=xID;
	else
		update ibi set representante=NULL,IDDOMIALTER=NULL where id=xID;
	end if;
END;
/

/*******************************************************************************
Acción: Añade un nuevo tipo de bonificación o exención a la lista existente según municipio. 
*******************************************************************************/

CREATE OR REPLACE PROCEDURE ADD_BONI_CONF (
       xMUNICIPIO   IN CHAR,
       xTIPO 	  IN CHAR,
       xBONI 	  IN FLOAT,
       xARTICULO 	  IN CHAR,
       xDESC 	  IN CHAR
)
AS
BEGIN
   INSERT INTO BONI_EXEN (MUNICIPIO,TIPO,BONIFICACION,ARTICULO,DESCRIPCION)
   VALUES (xMUNICIPIO, xTIPO, xBONI, xARTICULO, xDESC);
END;
/

/*******************************************************************************
Acción: Añade un nuevo Gravamen y máximo valor catastral para un municipio y año determinados.
MODIFICADO: 17/05/04. Gloria Maria Calle Hernandez. Cambiado MAX_VALOR_CATASTRAL por MAX_CUOTA 
			y añadido campo CLAVE (para los bienes de caracteristicas especiales).
MODIFICADO: 21/02/05. Gloria Maria Calle Hernandez. Añadido MAX_VCATASTRAL para indicar
			el max. valor catastral a partir del cual se aplica el correspondiente gravamen
			de la clave de uso a la que pertenezca. Para aquelos de menor valor catastral
			se aplicará el tipo general (clave_uso nula para dicho año).
*******************************************************************************/

CREATE OR REPLACE PROCEDURE ADD_GRAVAMEN(
       xMODULO 	     IN CHAR,
       xMUNICIPIO    IN CHAR,
       xYEAR 	     IN CHAR,
       xGRAVAMEN 	 IN FLOAT,
       xMAXCUOTA	 IN FLOAT,
       xINCREMENTO   IN FLOAT,
       xMAXVCATASTRAL IN FLOAT,
	   xCLAVE     	 IN CHAR
)
AS
BEGIN

   INSERT INTO GRAVAMEN_IBI_RUS
      (MODULO, MUNICIPIO, GRAVAMEN, MAX_CUOTA,
       INCREMENTO_VC, YEAR, CLAVE, MAX_VCATASTRAL)
   VALUES
      (xMODULO, xMUNICIPIO, xGRAVAMEN, xMAXCUOTA,
       xINCREMENTO, xYEAR, xCLAVE, xMAXVCATASTRAL);
END;
/

/*******************************************************************************
Acción: Antes de generar el padrón o cargar un disco se comprueba si existen datos 
        anteriores del municipio y año de entrada.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE CHECK_EXIT_IBI(
       xMUNICIPIO  IN CHAR,
       xYEAR 	 IN CHAR,       
       xCUANTOS    OUT INTEGER)
AS
BEGIN
   SELECT COUNT(*) INTO xCUANTOS
   FROM IBI WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;   
END;
/

/*******************************************************************************
Acción: Antes de generar el padrón se comprueba si éste ya había sido generado 
        con anterioridad.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE CHECK_EXIT_PADIBI(
       xYEAR 	  IN CHAR,
       xPERIODO 	  IN CHAR,
       xCUANTOS 	  OUT INTEGER
)
AS
BEGIN
   SELECT COUNT(*) INTO xCUANTOS FROM RECIBOS_IBI
   WHERE YEAR=xYEAR AND PERIODO=xPERIODO AND
         MUNICIPIO IN (SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER);
END;
/


/*******************************************************************************
Acción: Gestión de grupos desde las consultas de ibi. Nos permite crear,pegar o quitar 
        de un grupo el registro de ibi identificado con xID.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE CREA_PEGA_GRUPO_IBI(
       xID 			    IN INTEGER,
       xTIPO 		    IN CHAR,
       xCODIGO_OPERACION    IN OUT INTEGER)
AS
BEGIN

  IF(xTIPO='C') THEN /*CREAR GRUPO*/
     ADD_COD_OPERACION(xCODIGO_OPERACION);
     UPDATE IBI SET CODIGO_OPERACION=xCODIGO_OPERACION WHERE ID=xID;
  END IF;

  IF (xTIPO='P') THEN /*PEGAR GRUPO*/ 
      UPDATE IBI SET CODIGO_OPERACION=xCODIGO_OPERACION WHERE ID=xID;
  END IF;

  IF (xTIPO='Q') THEN /*QUITAR GRUPO*/ 
      UPDATE IBI SET CODIGO_OPERACION=0 WHERE ID=xID;
  END IF;

END;
/

/*******************************************************************************
Acción: Inserción en una tabla temporal de los datos para generar el Cuaderno19 para IBI.
MODIFICACIÓN: 21/08/2001 Agustin Leon Robles. 
MODIFICACIÓN: 10/09/2001 M. Carmen Junco Gómez. Adaptación al euro.
Modificacion: 17/09/2001 Agustin Leon Robles. Se ha añadido que en el fichero del banco 
								salga el año y periodo
MODIFICACIÓN: 08/08/2002 M. Carmen Junco Gómez. No deberán entrar en el disco aquellos
		  recibos que se hayan pasado ya a Recaudación y que se encuentren 
		  ingresados o dados de baja.
Modificacion: 22/08/2002 Agustin Leon Robles. Se ha añadido el valor de la construccion
Modificacion: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato del tipo de Gravamen
			de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
MODIFICACIÓN: 21/01/2004 Lucas Fernández Pérez. Bonificaciones por domiciliaciones.
	  Obtiene de la tabla PROGRAMAS la bonificación por domiciliación y la aplica al 
		importe del recibo, para que en el disco del c19 vaya el importe bonificado.
MODIFICACION: 19/05/2004 Gloria Maria Calle Hernandez. Añadido campo AYTO a la tabla 
			  Recibos_Cuadreno19 para generar ficheros por ayuntamientos (xej. Catoure).
-- MODIFICACIÓN: 02/06/2004 Agustín León Robles. Cuando no hay el NIF del titular de la cuenta
--			se toman los datos del fichero de recibos_ibi			  
-- MODIFICACIÓN: 22/08/2005 Lucas Fernández. Si existe bonificación por domiciliación,
--				se indicará en el campo 15 de concepto.
-- MODIFICACIÓN: 06/02/2007 Lucas Fernández Pérez. Ampliación de la variable xDomi_Titular para recoger el 
--					nuevo domicilio con bloque y portal.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE CUADERNO19_IBI (
       xYEAR 	  IN CHAR,
       xPERI 	  IN CHAR,
       xESTADO 	  IN CHAR)
AS
    xNIF_TITULAR		CHAR(10);
	xNOMBRE_TITULAR 	CHAR(40);
	xDOMI_TITULAR 		CHAR(60);
	x2 					CHAR(40);
	x3 					CHAR(40);
	x4 					CHAR(40);
	x5 					CHAR(40);
	x6 					CHAR(40);
	x7 					CHAR(40);
	x8 					CHAR(40);
	x9 					CHAR(40);
	x10 				CHAR(40);
	x11 				CHAR(40);
	x12 				CHAR(40);
	x13 				CHAR(40);
	x14					CHAR(40);
	x15					CHAR(40);

	xCODPOSTAL 			CHAR(5);
	xMUNITITULAR 		CHAR(35);
	I 					INTEGER;
	xREGIS 				INTEGER;
	xNOMBRE_VIA     	CHAR(25);
	xESCALERA       	CHAR(2);
	xPLANTA         	CHAR(3);
	xPUERTA         	CHAR(3);
	xPRIMER_NUMERO  	CHAR(6);
	xBASE_LIQUIDABLE 	FLOAT;
	xVALOR_SUELO		FLOAT;
	xVALOR_CONSTRUCCION	FLOAT;

	xProvincia			CONTRIBUYENTES.Provincia%Type;
	xRefeCatastral		char(20);

	xCONCEPTO			CHAR(6);
	xBONIDOMI			FLOAT;
	xF_INGRESO			DATE;
	xFECHA_DE_BAJA		DATE;

	CURSOR CRECI IS SELECT * FROM RECIBOS_IBI 
		WHERE YEAR=xYEAR AND PERIODO=xPERI AND ESTADO_BANCO=xESTADO AND TOTAL>0
		  AND MUNICIPIO IN (SELECT DISTINCT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER);
BEGIN

	--Borrar los datos de este usuario de la tabla temporal
	DELETE FROM RECIBOS_CUADERNO19 WHERE USUARIO=USER;

	xREGIS:=0;

	SELECT COUNT(*) INTO xREGIS FROM RECIBOS_IBI 
	 WHERE YEAR=xYEAR AND PERIODO=xPERI AND ESTADO_BANCO=xESTADO AND TOTAL>0
	   AND MUNICIPIO IN (SELECT DISTINCT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER);

	-- recogemos el concepto y la bonificacion por domiciliaciones para el IBI
	SELECT CONCEPTO,PORC_BONIFI_DOMI INTO xCONCEPTO, xBONIDOMI 
	FROM PROGRAMAS WHERE PROGRAMA='IBI';

	-- si hay bonificación por domiciliación, se indicará en el ultimo campo de concepto
	I:=13;
	IF (xBONIDOMI>0) THEN
		I:=14;
	END IF;

	FOR v_RIbi IN CRECI 
	LOOP

		begin
			SELECT F_INGRESO,FECHA_DE_BAJA INTO xF_INGRESO,xFECHA_DE_BAJA
			FROM VALORES WHERE AYTO=v_RIbi.MUNICIPIO AND PADRON=xCONCEPTO AND
						 YEAR=v_RIbi.YEAR AND PERIODO=v_RIbi.PERIODO AND
						 RECIBO=v_RIbi.RECIBO AND TIPO_DE_OBJETO='R';
			Exception
			   When no_data_found then
				xF_INGRESO:=NULL;
				xFECHA_DE_BAJA:=NULL;
		end;

		IF ((xF_INGRESO IS NULL) AND (xFECHA_DE_BAJA IS NULL)) THEN	

			--recogemos el domicilio tributario,entre otros datos
			SELECT NOMBRE_VIA, ESCALERA, PLANTA, PUERTA, PRIMER_NUMERO, 
				BASE_LIQUIDABLE,VALOR_SUELO,VALOR_CONSTRUCCION

			INTO xNOMBRE_VIA, xESCALERA, xPLANTA, xPUERTA, xPRIMER_NUMERO, 
				xBASE_LIQUIDABLE, xVALOR_SUELO, xVALOR_CONSTRUCCION
			FROM IBI WHERE ID=v_RIbi.ABONADO;

			--DATOS DEL TITULAR DE LA CUENTA
			IF v_RIbi.TITULAR IS NULL THEN
			   xNIF_TITULAR:=v_RIbi.NIF;
			ELSE
			   xNIF_TITULAR:=v_RIbi.TITULAR;
			END IF;
			
			if RTRIM(xNIF_TITULAR) is null then
				xNOMBRE_TITULAR:=v_RIbi.NOMBRE;
				xMuniTitular:=v_RIbi.POBLACION;
				xProvincia:=v_RIbi.PROVINCIA;
				xCodPostal:=v_RIbi.CODIGO_POSTAL;
				xDomi_Titular:=v_RIbi.DOMICILIO;
			else
				GETContribuyente(xNIF_TITULAR,xNOMBRE_TITULAR,xMuniTitular,xProvincia,xCodPostal,xDomi_Titular);
			end if;

			xRefeCatastral:=v_RIbi.REF_CATASTRAL||v_RIbi.NUMERO_SECUENCIAL||
				v_RIbi.PRIMER_CARACTER_CONTROL||v_RIbi.SEGUN_CARACTER_CONTROL;

			/*ESTA VARIABLE INDICA EL NUMERO DE CAMPOS OPCIONALES QUE HAY,
			  SI LAS VARIABLES LLEGAN HASTA x13 ENTONCES SON 12 PORQUE SE EMPIEZA EN EL
			  x2,SI SON x15 ENTONCES SON 14, ETC...*/  
			
			x2:='CALLE: '||xNOMBRE_VIA;
			x3:='ESCALERA: '||xESCALERA ||' PLANTA: '||xPLANTA;
			x4:='PUERTA: '||xPUERTA || ' NUMERO: '||xPRIMER_NUMERO;
		
			x5:='REF. CATASTRAL: '||xRefeCatastral;
			x6:='VALOR SUELO: '||xVALOR_SUELO;
			x7:='VALOR CONS.: '||xVALOR_CONSTRUCCION;
			x8:='BASE LIQUIDABLE: '||xBASE_LIQUIDABLE;
			x9:='VALOR CATASTRAL: '||v_RIbi.VALOR_CATASTRAL;
			x10:='BASE IMPONIBLE: '||v_RIbi.BASE_IMPONIBLE;
			x11:='% BONIFICACION: '||TO_CHAR(v_RIbi.BONIFICACION,'900');
			
			x12:='NUMERO FIJO: '||v_RIbi.NUM_FIJO;
			x13:='TIPO GRAVAMEN: '||TO_CHAR(v_RIbi.TIPO_GRAVAMEN,'0D999');
			x14:='AÑO: '||xYEAR||' PERIODO: '||xPERI;
			
			IF (I=14) THEN
				x15:='BONIFICACIÓN DEL '||xBONIDOMI||'% POR DOMICILIACIÓN';
			END IF;

			INSERT INTO RECIBOS_CUADERNO19
				(AYTO,ABONADO,NIF,NOMBRE,DOMICILIO,CODPOSTAL,MUNICIPIO,NOMBRE_TITULAR,
				ENTIDAD,SUCURSAL,DC,CUENTA,
				TOTAL, Campo2, Campo3, Campo4, Campo5, Campo6, Campo7, 
				Campo8, Campo9, Campo10, Campo11, Campo12, Campo13, Campo14, Campo15,
				CAMPOS_OPCIONALES, CUANTOS_REGISTROS)
			VALUES 
				(v_RIbi.MUNICIPIO,v_RIbi.RECIBO,xNIF_TITULAR,v_RIbi.NOMBRE,
				SUBSTR(xDOMI_TITULAR,1,40),
				xCODPOSTAL,xMUNITITULAR, xNOMBRE_TITULAR, 
				v_RIbi.ENTIDAD,v_RIbi.SUCURSAL, v_RIbi.DC, v_RIbi.CUENTA, 
				ROUND(v_RIbi.TOTAL*(1-(xBoniDomi/100)),2), 
				x2, x3, x4, x5, x6, x7, x8,x9,x10,x11,x12,x13,x14,x15,
				I, xREGIS); 
		END IF;     
	END LOOP;
END;
/

/*******************************************************************************
Acción: Al cargar un disco se borran los datos anteriores que existiesen para
        el año y municipio dados.
Modificacion: 10/06/2003. Agustín León Robles. Borrar también de la tabla his_cargoreal_ibi
MODIFICACIÓN: 18/04/2006. M. Carmen Junco Gómez. Al borrar un padrón, habrá que marcarlo como
			no cargado en la tabla tmp_padrones_ibi
*******************************************************************************/

CREATE OR REPLACE PROCEDURE BORRA_VIEJO_IBI(
       xYEAR 	  IN CHAR,
       xMUNICIPIO   IN CHAR)
AS
BEGIN

	DELETE FROM HIS_CARGOREAL_IBI WHERE IDIBI IN (SELECT ID FROM IBI WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR);

	DELETE FROM RECIBOS_IBI WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;

	DELETE FROM IBI WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;

	DELETE FROM COTITULARES_RECIBO WHERE PROGRAMA='IBI' 
		AND AYTO=xMUNICIPIO AND YEAR=xYEAR;
		
	UPDATE TMP_PADRONES_IBI SET CARGADO='N' WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI<>'RU';
END;
/

/*******************************************************************************
Acción: Procedimiento que borra un padron anterior del municipio,año y periodo dados.
MODIFICACIÓN: 28/06/2002 M. Carmen Junco Gómez. Insertar una tupla en LogsPadrones
		  para controlar que se ha borrado un padrón.
MODIFICACIÓN: 29/11/2002 M. Carmen Junco Gómez. Insertamos el municipio y el periodo
		  en logspadrones.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE BORRA_PADRON_VIEJO_IBI(
       xYEAR 	  IN CHAR,
       xPERIODO 	  IN CHAR)
AS
   CURSOR CMUNI IS SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
BEGIN
   FOR vMUNI IN CMUNI
   LOOP	

	DELETE FROM RECIBOS_IBI 
		WHERE MUNICIPIO=vMUNI.MUNICIPIO AND YEAR=xYEAR AND PERIODO=xPERIODO;

	DELETE FROM COTITULARES_RECIBO WHERE PROGRAMA='IBI' 
		AND AYTO=vMUNI.MUNICIPIO AND YEAR=xYEAR AND PERIODO=xPERIODO;

   	-- Insertamos una tupla en LOGSPADRONES para controlar que esta acción ha sido ejecutada
   	INSERT INTO LOGSPADRONES (MUNICIPIO,PROGRAMA,PYEAR,PERIODO,HECHO)
   	VALUES (vMUNI.MUNICIPIO,'IBI',xYEAR,xPERIODO,'Se Borra un Padrón');     
   END LOOP;
END;
/

/*******************************************************************************
Acción: Procedimiento que bonifica los recibos ya liquidados por el DocDgc.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE BONIFICA_RECIBOS_PADRON (
	 xARTICULO	  CHAR)
AS
   vYEAR  CHAR(4);	

   CURSOR CMUNI IS SELECT I.ID 
     FROM IBI I JOIN IBI_DOCDGC D ON I.YEAR=D.YEAR_ENTRADA_PADRON
      AND I.REF_CATASTRAL||I.NUMERO_SECUENCIAL||I.PRIMER_CARACTER_CONTROL||I.SEGUN_CARACTER_CONTROL=D.REF_CATASTRAL 
    WHERE I.YEAR=vYEAR AND D.YEAR_EFECTOS_IBI=D.YEAR_ENTRADA_PADRON AND D.GENERADO='S';  

BEGIN
   vYEAR:= TO_CHAR(SYSDATE);

   FOR vMUNI IN CMUNI
   LOOP	

     UPDATE IBI SET BONIFICACION=100,YEAR_INI_BONI=vYEAR,MES_INI_BONI='01',YEAR_BONI=vYEAR,MES_BONI='12',ARTICULO=xARTICULO
   	  WHERE ID=vMUNI.ID;
 
   END LOOP;
END;
/


/*******************************************************************************
Acción: Genera el padrón (los recibos) de ibi de un municipio y año determinados.
MODIFICACIÓN: 21/08/2001 Agustin Leon Robles. 
		  Se ha incluido todo lo referente a representante y domicilios alternativos.
MODIFICACIÓN: 10/09/2001 M. Carmen Junco Gómez. Adaptación al euro.
MODIFICACIÓN: 28/06/2002 M. Carmen Junco Gómez. Insertar una tupla en LogsPadrones
		  para controlar que se ha generado un padrón.
MODIFICACIÓN: 09/09/2002 M. Carmen Junco Gómez. Cuando la bonificación ha finalizado,
		  incluir como %Bonificación un 0 en el recibo, y no el %Bonificación
		  que tiene asignado el abonado de ibi.
MODIFICACIÓN: 29/11/2002 M. Carmen Junco Gómez. Insertamos los campos municipio y
		  periodo en logspadrones
MODIFICACIÓN: 05/05/2003. Agustín León Robles. Las altas nuevas del padrón del IBI
		  se hacen mediante liquidaciones. Esto se controla mediante el campo AltaNueva.
MODIFICADO: 17/05/04. Gloria Maria Calle Hernandez. Cambiado MAX_VALOR_CATASTRAL por MAX_CUOTA
			y añadido campo CLAVE (para los bienes de caracteristicas especiales).
Modificación: 02/06/2004. Agustín León Robles. Si no tiene NIF del titular de la cuenta, el Nombre del titular 
			es el nombre de la tabla de IBI			
MODIFICADO: 22/02/05. Gloria Maria Calle Hernandez. A partir del año 2005 se toma el gravamen 
		  según la clave de uso y comprobando que no supere 
MODIFICADO: 27/04/06. Agustín León Robles. Consultados con todos nuestros clientes y son de la partida de cojer 
		el domicilio fiscal de la tabla de contribuyentes en vez de tomar los datos del fichero de catastro.
Modificado 08/06/2006. Agustín León Robles. En el caso de NIF nulos se coge de la tabla de IBI y no de contribuyentes.
MODIFICACIÓN: 05/02/2007 Lucas Fernández Pérez. Ampliación del campo domicilio de la tabla RECIBOS_IBI
*******************************************************************************/

CREATE OR REPLACE PROCEDURE GENERA_PADRON_IBI (
       xMUNICIPIO 		IN CHAR,
       xYEAR 			IN CHAR,
       xDESDE 			IN DATE,
       xHASTA 			IN DATE,
	   xCARGO			IN DATE,
       xCONCEPTO 		IN CHAR,
       xLINEA1 			IN CHAR,
       xLINEA2 			IN CHAR,
       xLINEA3 			IN CHAR,
       xPERIODO 		IN CHAR)
AS
   xIMPORTE             CHAR(12);
   xTOTAL               FLOAT;
   xREFERENCIA          CHAR(10);
   xDIGITO_CONTROL      CHAR(2);
   xDIG_C60_M2	      	CHAR(2);
   xNUM_PER             INTEGER;
   xRECIBO              INTEGER;
   xBASE_IMPONIBLE      FLOAT;
   xBONIFICACION		FLOAT;

   --domicilio fiscal
   xDOMICILIO           VARCHAR2(60);
   --domicilio tributario
   xDOMI_TRIBUTARIO		VARCHAR2(50);

   xGRAVAMEN 			FLOAT;
   xMAX_CUOTA 			FLOAT;

   xPADRON		    	CHAR(6);
   xEMISOR 	    		CHAR(6);
   xTRIBUTO 	    	CHAR(3);

   xNOMBRE_TITULAR   	VARCHAR2(40);
   xCODPOSTAL 	    	CHAR(5);
   xPoblacion 	    	VARCHAR2(35);
   xPROVINCIA	    	VARCHAR2(35);

   CURSOR CIBI IS 
       SELECT * FROM IBI WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR AND ALTANUEVA='N';

BEGIN

	SELECT IBI_NUM_PERIODOS INTO xNUM_PER FROM DATOSPER WHERE MUNICIPIO=xMUNICIPIO;

	--Averiguar que concepto es el padron de IBI
	SELECT CONCEPTO INTO xPADRON FROM PROGRAMAS WHERE PROGRAMA='IBI';

	--recoger los datos para el cuaderno 60
	BEGIN
		select EMISORA,CONCEPTO_BANCO into xEMISOR,xTRIBUTO from RELA_APLI_BANCOS
				where AYTO=xMUNICIPIO and CONCEPTO=xPADRON;
	EXCEPTION
		when no_data_found then
			BEGIN
			xEMISOR:='000000';
			xTRIBUTO:='000';
			END;
	END;

   FOR v_TIbi IN CIBI 
   LOOP
	  
      --recoger el gravamen para cada Clave de bien inmueble	
      BEGIN
         SELECT GRAVAMEN,MAX_CUOTA INTO xGRAVAMEN,xMAX_CUOTA
		   FROM GRAVAMEN_IBI_RUS
          WHERE MODULO='IBI' AND MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR 
		    AND CLAVE=v_TIbi.CLAVE_USO AND v_TIbi.VALOR_CATASTRAL>MAX_VCATASTRAL;
	  --Si estamos en un año anterior al 2005 o si para dicha clave de uso no supera el valor catastral minimo
	  --la consulta no devolverá gravamen alguno y se buscará el gravamen general para clave nula. 
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
		    BEGIN 
              SELECT GRAVAMEN,MAX_CUOTA INTO xGRAVAMEN,xMAX_CUOTA
		        FROM GRAVAMEN_IBI_RUS
               WHERE MODULO='IBI' AND MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR 
			     AND TRIM(CLAVE) IS NULL;
			EXCEPTION
			   WHEN NO_DATA_FOUND THEN	 
                    xGRAVAMEN:=0;
                    xMAX_CUOTA:=0;
			END;
      END;


      IF (v_TIbi.DOMICILIADO='N') THEN
          xNOMBRE_TITULAR:=NULL;
      ELSE
			if RTRIM(v_TIbi.DNI_FACTURA) IS NULL then
				xNOMBRE_TITULAR:=SUBSTR(v_TIbi.NOMBRE,1,40);
			else      	
				--nombre del titular de la cuenta, para el cuaderno 19
				SELECT NOMBRE INTO xNOMBRE_TITULAR FROM CONTRIBUYENTES WHERE NIF=v_TIbi.DNI_FACTURA;
			end if;
      END IF;

	--domicilio tributario
	xDOMI_TRIBUTARIO:=v_TIbi.TIPO_VIA||' '|| v_TIbi.NOMBRE_VIA ||' '||
   	  	      v_TIbi.PRIMER_NUMERO||' '||v_TIbi.PRIMERA_LETRA||' '||
                  v_TIbi.ESCALERA||' '||v_TIbi.PLANTA||' '||v_TIbi.PUERTA;
		
	--domicilio fiscal
	
	--
	-- Consultados el día 27/04/2006 con todos nuestros clientes y son de la partida de cojer el domicilio fiscal de la tabla de contribuyentes
	-- en vez de tomar los datos del fichero de catastro.
	--
	-- Modificado 08/06/2006. En el caso de NIF nulos se coge de la tabla de IBI y no de contribuyentes
			
	IF trim(v_TIbi.NIF) IS NULL THEN
		xDOMICILIO:=v_TIbi.TIPO_VIA_FISCAL||' '|| v_TIbi.NOMBRE_VIA_FISCAL
			||' '|| v_TIbi.PRIMER_NUMERO_FISCAL||' '|| v_TIbi.PRIMERA_LETRA_FISCAL
			||' '|| v_TIbi.ESCALERA_FISCAL||' '|| v_TIbi.PLANTA_FISCAL
			||' '|| v_TIbi.PUERTA_FISCAL;
			
		xPoblacion:=v_TIbi.Municipio_Fiscal;
		xProvincia:=v_TIbi.Provincia;
		xCodPostal:=v_TIbi.Cod_Postal_Fiscal;
	ELSE
		GetDomicilioFiscal(v_TIbi.NIF,NULL,xDomicilio,xPoblacion,xProvincia,xCodPostal);
	END IF;

	--domicilio fiscal en funcion de si tiene un representante o no.
	--Dentro de la funcion "GetDomicilioFiscal" se comprueba si tiene a su vez 
	--un domicilio alternativo.
	IF v_TIbi.REPRESENTANTE IS NULL THEN		
		IF v_TIbi.IDDOMIALTER IS NOT NULL THEN			
			GetDomicilioFiscal(v_TIbi.NIF,v_TIbi.IDDOMIALTER,xDomicilio,xPoblacion,xProvincia,xCodPostal);
		END IF;
	ELSE
		GetDomicilioFiscal(v_TIbi.REPRESENTANTE,v_TIbi.IDDOMIALTER,xDomicilio,xPoblacion,xProvincia,xCodPostal);
	END IF;



      -- EL NUMERO DE RECIBO VA A SER EL ID DE LA TABLA DE REFERENCIAS_BANCOS

      SELECT ID INTO xRECIBO FROM REFERENCIAS_BANCOS WHERE MUNICIPIO=xMUNICIPIO
			AND REF_CATASTRAL=v_TIbi.REF_CATASTRAL||v_TIbi.NUMERO_SECUENCIAL||
			v_TIbi.PRIMER_CARACTER_CONTROL||v_TIbi.SEGUN_CARACTER_CONTROL;


      -- SI ES EL MISMO IMPORTE SE CALCULA SOBRE EL VALOR CATASTRAL, 
      --  SINO SOBRE BASE LIQUIDABLE

      IF v_TIbi.VALOR_CATASTRAL=v_TIbi.BASE_LIQUIDABLE THEN
   	   xBASE_IMPONIBLE:=Round((v_TIbi.VALOR_CATASTRAL * xGRAVAMEN)/100,2);
      ELSE
         xBASE_IMPONIBLE:=Round((v_TIbi.BASE_LIQUIDABLE * xGRAVAMEN)/100,2);
      END IF;


      -- SI AÑO ES MAYOR NO SE APLICA BONIFICACION
      IF (xYEAR > v_TIbi.YEAR_BONI or v_TIbi.YEAR_BONI is null) THEN	
         xTOTAL:=ROUND(xBASE_IMPONIBLE/xNUM_PER,2);
	   xBONIFICACION:=0;

      ELSE --APLICAR BONIF A TODOS LOS MESES
	   xBONIFICACION:=v_TIbI.BONIFICACION;
         IF(xYEAR < v_TIbi.YEAR_BONI) THEN
 	      xTOTAL:=ROUND((xBASE_IMPONIBLE*(1-(v_TIbi.BONIFICACION/100)))/xNUM_PER,2);

         ELSE --APLICAR BONIF A LOS MESES QUE CORRESPONDAN
		--MESES BONIF
	      xTOTAL:=ROUND(((xBASE_IMPONIBLE/12)* TO_NUMBER(v_TIbi.MES_BONI)*
                     (1-(v_TIbi.BONIFICACION/100)))+((xBASE_IMPONIBLE/12)*
 	               (12- TO_NUMBER(v_TIbi.MES_BONI))),2);

	     --MESES SIN BONIF
            xTOTAL:=ROUND(xTOTAL/xNUM_PER,2);
         END IF;
      END IF;

      IF (xTOTAL<xMAX_CUOTA) THEN
	      xTOTAL:=0;
      END IF;

	  xTOTAL:=ROUND(xTOTAL,2);

	--calcular los digitos de control del cuaderno 60 modalidad 1
      CALCULA_DC_60(xTOTAL, xRECIBO, xTRIBUTO, SUBSTR(xYEAR,3,2), xPERIODO, xEMISOR, 
					xDIGITO_CONTROL);

	--calcular los digitos de control del cuaderno 60 modalidad 2
	  CALCULA_DC_MODALIDAD2_60(xTOTAL, xRECIBO, xTRIBUTO, SUBSTR(xYEAR,3,2), '1',
			to_char(xHASTA,'y'), to_char(xHASTA,'ddd'), xEMISOR, xDIG_C60_M2);

      --CONVIERTE Nº DE RECIBO EN CARACTER Y RELLENO DE CEROS
      GETREFERENCIA(xRECIBO, xREFERENCIA); 

      --CONVIERTE EL IMPORTE RELLENO DE CEROS
      IMPORTEENCADENA(xTOTAL,xIMPORTE);

	--insertamos los cotitulares del recibo
	IF v_TIbi.COTITULARES='S' THEN
		INSERT INTO COTITULARES_RECIBO(NIF,PROGRAMA,AYTO,PADRON,YEAR,PERIODO,RECIBO)
		SELECT NIF,'IBI',xMUNICIPIO,xPADRON,xYEAR,xPERIODO,xRECIBO
		FROM COTITULARES
		WHERE ID_CONCEPTO=v_TIbi.ID AND PROGRAMA='IBI';
	END IF;
	
      INSERT INTO RECIBOS_IBI
		(RECIBO,NUM_FIJO,
		REF_CATASTRAL,NUMERO_SECUENCIAL,PRIMER_CARACTER_CONTROL,SEGUN_CARACTER_CONTROL,
		ABONADO,YEAR,PERIODO,MUNICIPIO,
		TIPO_GRAVAMEN,BONIFICACION,VALOR_CATASTRAL,IMPORTE,TOTAL,BASE_IMPONIBLE,
		DESDE,HASTA,F_CARGO,CONCEPTO,LINEA1,LINEA2,LINEA3,EMISOR,TRIBUTO,
		EJERCICIO,REMESA,REFERENCIA,DIGITO_CONTROL,BASE_LIQUIDABLE,
		DOMICILIADO,ESTADO_BANCO,ENTIDAD,SUCURSAL,DC,CUENTA,F_DOMICILIACION,TITULAR,
		NOMBRE_TITULAR,NIF,NOMBRE,DOMICILIO,DOMI_TRIBUTARIO,CODIGO_POSTAL,POBLACION,
		PROVINCIA,DISCRI_PERIODO,DIGITO_YEAR,F_JULIANA,DIGITO_C60_MODALIDAD2)
      VALUES    
		(xRECIBO, v_TIbi.NUM_FIJO, 
		v_TIbi.REF_CATASTRAL, v_TIbi.NUMERO_SECUENCIAL,
		v_TIbi.PRIMER_CARACTER_CONTROL,v_TIbi.SEGUN_CARACTER_CONTROL,v_TIbi.ID,
		xYEAR, xPERIODO, xMUNICIPIO, xGRAVAMEN, xBONIFICACION,
		v_TIbi.VALOR_CATASTRAL, xIMPORTE, xTOTAL, xBASE_IMPONIBLE,xDESDE, xHASTA, xCARGO,
		xCONCEPTO, xLINEA1, xLINEA2, xLINEA3, xEMISOR, xTRIBUTO, 
		SUBSTR(xYEAR,3,2), xPERIODO, xREFERENCIA, 
		xDIGITO_CONTROL, v_TIbi.BASE_LIQUIDABLE,

		v_TIbi.DOMICILIADO, DECODE(v_TIbi.DOMICILIADO,'S','EB',NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.ENTIDAD,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.SUCURSAL,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.DC,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.CUENTA,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.F_DOMICILIACION,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.DNI_FACTURA,NULL),xNOMBRE_TITULAR,

		v_TIbi.NIF,SUBSTR(v_TIbi.NOMBRE,1,40), xDOMICILIO, xDOMI_TRIBUTARIO,
		xCODPOSTAL,xPOBLACION,xPROVINCIA,

		'1',to_char(xHASTA,'y'), to_char(xHASTA,'ddd'),xDIG_C60_M2);
   END LOOP;

   -- Insertamos una tupla en LOGSPADRONES para controlar que esta acción ha sido ejecutada
   INSERT INTO LOGSPADRONES (MUNICIPIO,PROGRAMA,PYEAR,PERIODO,HECHO)
   VALUES (xMUNICIPIO,'IBI',xYEAR,xPERIODO,'Se Genera un Padrón');

END;
/


/*******************************************************************************
Acción: Emite los recibos de IBI.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE GENERA_RECIBOS_IBI (
       xYEAR 			IN CHAR,
       xDESDE 			IN DATE,
       xHASTA 			IN DATE,
	 xCARGO			IN DATE,
       xCONCEPTO 			IN CHAR,
       xLINEA1 			IN CHAR,
       xLINEA2 			IN CHAR,
       xLINEA3 			IN CHAR,
       xPERIODO 			IN CHAR)
AS  
   CURSOR CAYTOS IS 
      SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
BEGIN   
   FOR v_aytos IN CAYTOS 
   LOOP  
      GENERA_PADRON_IBI(v_aytos.MUNICIPIO,xYEAR,xDESDE,xHASTA,xCARGO,xCONCEPTO,
                       xLINEA1,xLINEA2,xLINEA3,xPERIODO);
   END LOOP;   
END;
/


/*******************************************************************************
Acción: Añade o quita domiciliaciones a los registros de ibi, tanto a un registro 
		individual como a un grupo activo.
*******************************************************************************/
CREATE OR REPLACE PROCEDURE DOMICILIA_IBI(
       xID 		      	 IN INTEGER,
       xENTIDAD 	     IN CHAR,
       xSUCURSAL 	     IN CHAR,
       xDC 		      	 IN CHAR,
       xCUENTA 	      	 IN CHAR,
	   xF_DOMICILIACION  IN DATE,
       xTITULAR 		 IN CHAR,
       xDOMICILIADO      IN CHAR,
       xMotivoCambioDomi IN  VARCHAR2,
       xGrupo			 IN INTEGER)
AS
    CURSOR CIBIDOMI IS SELECT ID FROM IBI WHERE CODIGO_OPERACION=xGRUPO;
BEGIN

	IF (xGRUPO=0 or xGRUPO is null) THEN
	   IBI_BANCOS(xID,xENTIDAD,xSUCURSAL,xDC,xCUENTA,xF_DOMICILIACION,xTITULAR,xDOMICILIADO,xMotivoCambioDomi);
	ELSE 
	   FOR vIBIDOMI IN cIBIDOMI LOOP
	       IBI_BANCOS(vIBIDOMI.ID,xENTIDAD,xSUCURSAL,xDC,xCUENTA,xF_DOMICILIACION,xTITULAR,xDOMICILIADO,xMotivoCambioDomi);
	   END LOOP;
	END IF;

END;
/

/*******************************************************************************
Acción: Añade o quita domiciliaciones a los registros de ibi.	  
MODIFICACIÓN: 18/06/2002 Antonio Pérez Caballero. Comprueba si hay recibo emitido 
              del padrón anual en curso y en tal caso modifica los datos de la 
              domiciliación para que entre en los soportes del cuaderno 19
MODIFICACION: 03/07/2002 M. Carmen Junco Gómez. Si no se encontraba el recibo en la 
		  tabla de valores estábamos asignándole a mVOL_EJE:=''; En mi máquina,
		  por ejemplo, funcionaba correctamente, pero en Salobreña estaba fallando
		  el procedimiento (no domiciliaba el recibo) debido a esta asignación.
		  Se ha cambiado por mVOL_EJE:=NULL;		  
MODIFICACION: 05/07/2002 M. Carmen Junco Gómez. El recibo de IBI sólo se podrá modificar
		  si aún no se ha emitido el Cuaderno19 para el padrón al que pertenece.
		  Además, cuando modificamos en recaudación, debemos tener en cuenta si el
		  cargo se ha aceptado o no. Si aún no se ha aceptado habrá que hacer la
		  modificación en la tabla PUNTEO y no en VALORES.
MODIFICACIÓN: 29/11/2002 M. Carmen Junco Gómez. Insertamos los campos MUNICIPIO y 
		  PERIODO en LOGSPADRONES.
Modificado: 02/06/2004. Agustín Léon Robles. 
			Puede darse el caso de que no tengamos el NIF del titular de la cuenta		  
MODIFICACIÓN: 01/02/2005 Lucas Fernandez Pérez. Se añade el parámetro xMotivoCambioDomi.
		  Se eliminan los campos USR_CHG__CUENTA y F_CHG__CUENTA.
		  La información se almacenará ahora en la tabla HISTO_DOMICILIACIONES.
MODIFICACIÓN: 10/03/2005 Lucas Fernández Pérez. Hasta ahora se comprobaban los recibos emitidos 
		  en el año en curso, de tal forma que no hacía la modificación del recibo si el padrón se
		  emitió el año anterior al actual. Lo que haremos será revisar los recibos emitidos desde
		  hace un año al día de hoy. 		  
MODIFICACIÓN: 18/07/2006 Lucas Fernández Pérez. En la búsqueda del recibo en valores y punteo
	no estaba en la condicion "TIPO_DE_OBJETO='R'" 
*******************************************************************************/

CREATE OR REPLACE PROCEDURE IBI_BANCOS(
       xID 		      	 IN INTEGER,
       xENTIDAD 	     IN CHAR,
       xSUCURSAL 	     IN CHAR,
       xDC 		      	 IN CHAR,
       xCUENTA 	      	 IN CHAR,
	   xF_DOMICILIACION  IN DATE,
       xTITULAR 		 IN CHAR,
       xDOMICILIADO      IN CHAR,
       xMotivoCambioDomi IN  VARCHAR2)
AS	
	mVOL_EJE 		Char(1);
	mVALOR   		Integer;
	mPUNTEO  		Integer;
	mPADRON 		CHAR(6);
	xNOMBRE_TITULAR CHAR(40);
	xCuantos 		Integer;
	xNombre			varchar2(40);

	-- cursor que recorre los distintos periodos de los distintos recibos que 
	-- se han podido emitir para este abonado, para comprobar para que padrón
	-- se ha emitido ya el Cuaderno19, y por lo tanto no modificar la domiciliación
	-- de ese recibo. Han de ser recibos emitidos en el año en curso.
	CURSOR CPERIODOS IS SELECT DISTINCT YEAR,PERIODO,ID,MUNICIPIO,RECIBO FROM RECIBOS_IBI
		WHERE ABONADO=xID AND YEAR BETWEEN (TO_CHAR(sysdate,'yyyy')-1) AND TO_CHAR(sysdate,'yyyy');
				  
				  
BEGIN

	-- Se rellena texto2 para ser recogidos en el triger before update de ibi
	UPDATE USUARIOSGT SET TEXTO2=xMotivoCambioDomi WHERE USUARIO=USER;

	-- Actualizar en la tabla de IBI
	UPDATE IBI SET ENTIDAD=xENTIDAD,
                   SUCURSAL=xSUCURSAL,
                   DC=xDC,
                   CUENTA=xCUENTA,
			       F_DOMICILIACION=xF_DOMICILIACION,
                   DNI_FACTURA=xTITULAR,
                   DOMICILIADO=xDOMICILIADO
	WHERE ID=xID RETURN substr(NOMBRE,1,40) INTO xNombre;	

	-- por cada periodo distinto de recibos sobre el abonado
	FOR vPERIODOS IN CPERIODOS 
	LOOP	 

         -- Comprobamos si se ha emitido ya el soporte del cuaderno 19 para este padrón
	   SELECT COUNT(*) INTO xCUANTOS FROM LOGSPADRONES 
	   WHERE MUNICIPIO=vPERIODOS.MUNICIPIO AND  
  		   PROGRAMA ='IBI' AND 
		   PYEAR=vPERIODOS.YEAR AND 
		   PERIODO=vPERIODOS.PERIODO AND
	         HECHO='Generación Cuaderno 19 (recibos domiciliados)';

	   IF xCUANTOS=0 THEN  -- aún no se ha emitido. Podemos modificar el recibo.

		-- Averiguar el código de padron de IBI
		SELECT CONCEPTO INTO mPADRON FROM PROGRAMAS WHERE PROGRAMA='IBI';

		-- Comprobar si ya se paso a recaudación    
		begin
	   		SELECT ID,VOL_EJE INTO mVALOR,mVOL_EJE FROM VALORES 
         		WHERE AYTO=vPERIODOS.MUNICIPIO
		   		AND PADRON=mPADRON 
		   		AND YEAR=vPERIODOS.YEAR
		   		AND PERIODO=vPERIODOS.PERIODO
		   		AND RECIBO=vPERIODOS.RECIBO
		   		AND TIPO_DE_OBJETO='R';
			Exception
	   			When no_data_found then				
	      			mVOL_EJE:=NULL;			
		end;

		-- Si no se encuentra el valor, comprobar si está en el punteo
		IF (mVOL_EJE IS NULL) THEN
		   begin
		      SELECT ID,VOL_EJE INTO mPUNTEO,mVOL_EJE FROM PUNTEO
			WHERE AYTO=vPERIODOS.MUNICIPIO
				AND PADRON=mPADRON
				AND YEAR=vPERIODOS.YEAR
				AND PERIODO=vPERIODOS.PERIODO
				AND RECIBO=vPERIODOS.RECIBO
				AND TIPO_DE_OBJETO='R';
			Exception
				When no_data_found then
					mVOL_EJE:=NULL;
		   end;
		END IF;

		-- si el recibo está en Voluntaria en RECA o todavia no se ha pasado a recaudación
		IF ((mVOL_EJE='V') or (mVOL_EJE IS NULL)) THEN
	   	   -- modificamos el recibo en gestión tributaria
	   	   IF xDOMICILIADO = 'N' THEN
	            UPDATE RECIBOS_IBI SET DOMICILIADO='N',
						     ENTIDAD=NULL,
					     	     SUCURSAL=NULL,
					    	     DC=NULL,
					     	     CUENTA=NULL,
					     	     F_DOMICILIACION=NULL,
					     	     TITULAR=NULL,
					     	     NOMBRE_TITULAR=NULL,
					     	     ESTADO_BANCO=NULL
			WHERE ID=vPERIODOS.ID;
	   	   ELSE
	   	   
	   	   		--Puede darse el caso de que no tengamos el NIF del titular de la cuenta
				if RTRIM(xTitular) is null then				
					xNOMBRE_TITULAR:=xNombre;
				else
					SELECT NOMBRE INTO xNOMBRE_TITULAR FROM CONTRIBUYENTES WHERE NIF=xTITULAR;
				end if;
				
				
	      		UPDATE RECIBOS_IBI SET DOMICILIADO='S',
						     ENTIDAD=xENTIDAD,
						     SUCURSAL=xSUCURSAL,
						     DC=xDC,
						     CUENTA=xCUENTA,
						     F_DOMICILIACION=xF_DOMICILIACION,
						     TITULAR=xTITULAR,
						     NOMBRE_TITULAR=xNOMBRE_TITULAR,
						     ESTADO_BANCO='EB'
	     		WHERE ID=vPERIODOS.ID;
		   END IF;

	   	   -- modificamos los datos del valor (o del punteo)
	   	   IF mVOL_EJE='V' THEN				
		      IF xDOMICILIADO = 'N' THEN
			   IF mVALOR IS NOT NULL THEN
  	         	      UPDATE VALORES SET 
					 ESTADO_BANCO=DECODE(ESTADO_BANCO, 'EB', NULL, ESTADO_BANCO)
	         		WHERE ID=mVALOR;
			   ELSE
				UPDATE PUNTEO SET
				       ESTADO_BANCO=DECODE(ESTADO_BANCO, 'EB', NULL, ESTADO_BANCO)
				WHERE ID=mPUNTEO;
			   END IF;
			ELSE		
			   IF mVALOR IS NOT NULL THEN
  	         	      UPDATE VALORES SET 
				       ESTADO_BANCO=DECODE(ESTADO_BANCO, NULL, 'EB',ESTADO_BANCO)
	         		WHERE ID=mVALOR;		
			   ELSE
			      UPDATE PUNTEO SET
				       ESTADO_BANCO=DECODE(ESTADO_BANCO, NULL, 'EB',ESTADO_BANCO)
	         		WHERE ID=mPUNTEO;			
			   END IF;
			END IF; 						
	   	   END IF; 

      	END IF; -- ((mVOL_EJE='V') or (mVOL_EJE IS NULL))	 
	
	   END IF;

	END LOOP;

END;
/


/*******************************************************************************
Acción: Modifica la bonificación de un registro de ibi identificado por ID=xID.
MODIFICADO: 30/03/2005. Gloria Maria Calle Hernandez. Anula la domiciliacion también.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE IBI_BONIFI(
       xID 			IN INTEGER,
	   xMESINI		IN CHAR,
       xMES 		IN CHAR,
	   xYEARINI   	IN CHAR,
       xYEAR 		IN CHAR,
       xBONI 		IN FLOAT,
       xARTICULO  	IN CHAR)
AS
BEGIN
   IF (xARTICULO IS NOT NULL) THEN
     UPDATE IBI SET YEAR_INI_BONI=xYEARINI,
				  MES_INI_BONI=xMESINI,
				  YEAR_BONI=xYEAR, 
                  MES_BONI=xMES,
                  BONIFICACION=xBONI, 
                  ARTICULO=xARTICULO
      WHERE ID=xID;

   ELSE
     UPDATE IBI SET BONIFICACION=0,
   				  YEAR_INI_BONI='0000',
   				  MES_INI_BONI='00',
   				  YEAR_BONI='0000',
   				  MES_BONI='00',
   				  ARTICULO=NULL
      WHERE ID=xID;
   END IF;
   
END;
/

-- **************************************************************************************
-- Autor: 03/06/2002 M. Carmen Junco Gómez.
-- Acción: Modifica recibo/s de IBI, tanto en GT como en RECA, cuando se modifican los
-- 	  datos de un abonado, y siempre que el recibo esté en voluntaria.
-- Parámetros: xABONADO: ID del abonado de la tabla de IBI que se está modificando.
-- MODIFICACION: 06/06/2002 Antonio Pérez Caballero
-- 	Se añade un nuevo parametro para saber si ha de anularse la domiciliación
-- 	esto salio de un comentario del Concejal de Hacienda de Torrejón de Ardoz
-- 	en la presentación del producto el martes día 3 de Junio del 2002
-- MODIFICACION: 18/06/2002 Antonio Pérez Caballero
-- 	Para municipios que emitan padrón más de una vez por año, en dos veces, tres, etc.
-- 	o para quién emitan padrones complementarios
-- MODIFICACION: 03/07/2002 M. Carmen Junco Gómez. Se cambia la asignación mVOL_EJE:=''
-- 		  por mVOL_EJE:=NULL.
-- MODIFICACIÓN: 19/07/2002 M. Carmen Junco Gómez. El domicilio tributario se compone con los
-- 		  mismos datos que cuando se genera el padrón. Antes sobraba un caracter de los
-- 		  50 de la variable y daba error de buffer demasiado pequeño.
-- MODIFICACIÓN: 29/11/2002 M. Carmen Junco Gómez. Se añaden los campos MUNICIPIO y 
-- 		  PERIODO en la tabla LOGSPADRONES.
-- 		  Además sólo se estaban modificando los valores del maximo(ID) del
-- 		  recibo que estaba asociado al abonado, lo que suponía un problema
-- 		  si el padrón tenía más de un periodo (sólo se actualizaban los datos
-- 		  del último padrón generado en el mismo año)	
-- MODIFICACIÓN: 30/05/2003. Se estaba poniendo el campo Domiciliado a nulo en vez de a 'N'.
-- MODIFICACIÓN: 08/08/2003 M. Carmen Junco Gómez. Se están dando problemas en Torrejón para
-- 		  poder cuadrar las domiciliaciones en valores, recibos_ibi y el soporte 19 debido
-- 		  a la opción de Anular la domiciliación. Ésta se anula, sin avisar, a pesar de
-- 		  estar el soporte generado. Además, se estaba insertando una incidencia en AVISOSGT 
-- 		  tanto si se debía anular la domiciliación como si no.
-- 		  Aparte, si el recibo estaba en el punteo, no se modificaba.
-- 		  También se corrige el hecho de que el usuario anulase una domiciliación 
-- 		  inexistente, no insertando el aviso en este caso.
-- MODIFICACIÓN: 01/10/2003 Lucas Fernández Pérez. 
--		  El objeto tributario mostraba el domicilio tributario, por lo que se tenia que
--		  recomponer por completo. Al desaparecier del objeto tributario el domicilio 
--		  tributario, ya no es necesario modificarlo, porque nada de lo que se modifica
--		  aparece ahora en el objeto tributario.
-- MODIFICACIÓN: 15/10/2004. Gloria Maria Calle Hernandez.
-- 		  Modificaba todo lo que estuviera en voluntaria sin restringuir o comprobar que
-- 		  estuviera pendiente, así modificaba erroneamnete incluso lo pagado. Corregido.
-- MODIFICACIÓN: 05/02/2007 Lucas Fernández Pérez. Ampliación del campo domicilio de la tabla RECIBOS_IBI
-- *****************************************************************************************
CREATE OR REPLACE PROCEDURE RECIBOS_IBI_MODIFI(
	xABONADO IN INTEGER, 
	xANULADOMI IN CHAR,
	xAVISO	 OUT INTEGER)
AS
	v_registro	 IBI%ROWTYPE;
	v_recibo	 RECIBOS_IBI%ROWTYPE;
	
	mPADRON	 	 CHAR(6);
	mVOL_EJE 	 CHAR(1);
	mPENDIENTE 	 CHAR(1);
	mVALOR	 	 INTEGER;
	mPUNTEO	 	 INTEGER;

	xDOMI_TRIBUTARIO VARCHAR2(50);
	xDOMICILIO		 VARCHAR2(60);
	xPOBLACION		 VARCHAR2(35);
	xPROVINCIA		 VARCHAR2(35);
	xCP			 	 CHAR(5);

	xYearNow		 Char(4);
	xCUANTOS 		 INTEGER;
	
	xDOMI_OLD		 CHAR(1);
	

	-- cursor que recorre los distintos periodos de los distintos recibos que 
	-- se han podido emitir para este abonado. Han de ser recibos emitidos en el
	-- año en curso.
	CURSOR CPERIODOS IS SELECT DISTINCT PERIODO,ID FROM RECIBOS_IBI
				  WHERE ABONADO=xABONADO AND YEAR=xYEARNOW;				  

BEGIN


	xAVISO:=0;  -- inicialmente sin incidencias.


	-- Averiguar el año actual
	xYearNow:=TO_CHAR(sysdate,'yyyy');

	-- Averiguar el código de padron de IBI
	SELECT CONCEPTO INTO mPADRON FROM PROGRAMAS WHERE PROGRAMA='IBI';

	-- Leer todos los datos de la ficha de un abonado
	SELECT * INTO v_registro FROM IBI WHERE ID=xABONADO;

	-- recorrer los distintos recibos que se han podido generar para este abonado
	FOR vPERIODOS IN CPERIODOS 
	LOOP
	
		-- Recogemos los datos del recibo 
	    SELECT * INTO v_recibo FROM RECIBOS_IBI WHERE ID=vPERIODOS.ID;
	    
	    xDOMI_OLD:=v_recibo.DOMICILIADO;
      
	    begin
	       SELECT ID,VOL_EJE,DECODE(F_INGRESO,NULL,DECODE(F_SUSPENSION,NULL,DECODE(FECHA_DE_BAJA,NULL,
				  			 DECODE(FECHA_PROPUESTA_BAJA,NULL,'S','N'),'N'),'N'),'N') INTO mVALOR,mVOL_EJE,mPENDIENTE 
	         FROM VALORES 
            WHERE AYTO=v_recibo.MUNICIPIO 
		      AND PADRON=mPADRON 
		      AND YEAR=v_recibo.YEAR 
		      AND PERIODO=v_recibo.PERIODO 
		      AND RECIBO=v_recibo.RECIBO;
	       Exception
	          When no_data_found then
	  	         mVOL_EJE:=NULL;
	    end;
	   
	    -- Si no se encuentra el valor, comprobar si está en el punteo
	    IF (mVOL_EJE IS NULL) THEN
	       begin
		      SELECT ID,VOL_EJE,'S' INTO mPUNTEO,mVOL_EJE,mPENDIENTE	FROM PUNTEO
			  WHERE AYTO=v_recibo.MUNICIPIO
			  	   AND PADRON=mPADRON
				   AND YEAR=v_recibo.YEAR
				   AND PERIODO=v_recibo.PERIODO
				   AND RECIBO=v_recibo.RECIBO;
			  Exception
			     When no_data_found then
			        mVOL_EJE:=NULL;
		   end;
	    END IF;


	    -- si el recibo está en Voluntaria en RECA aún PENDIENTE o todavia no se ha pasado a recaudación
	    IF ((mVOL_EJE='V' and mPENDIENTE='S') or (mVOL_EJE IS NULL)) THEN

	       --domicilio tributario
	       xDOMI_TRIBUTARIO:=LTRIM(RTRIM(v_registro.TIPO_VIA))||' '||
				      LTRIM(RTRIM(v_registro.NOMBRE_VIA))||' '||
	  			      LTRIM(RTRIM(v_registro.PRIMER_NUMERO))||' '||
				      LTRIM(RTRIM(v_registro.PRIMERA_LETRA))||' '||
				      LTRIM(RTRIM(v_registro.ESCALERA))||' '||
				      LTRIM(RTRIM(v_registro.PLANTA))||' '||
				      LTRIM(RTRIM(v_registro.PUERTA));
     
	       --domicilio fiscal en funcion de si tiene un representante o no.
	       --Dentro de la funcion "GetDomicilioFiscal" se comprueba si tiene a su vez 
	       --un domicilio alternativo.

	       IF v_registro.REPRESENTANTE IS NULL THEN		

	          IF v_registro.IDDOMIALTER IS NULL THEN

		         xDOMICILIO:=v_registro.TIPO_VIA_FISCAL||' '||v_registro.NOMBRE_VIA_FISCAL||
					' '||v_registro.PRIMER_NUMERO_FISCAL||' '||
				      v_registro.ESCALERA_FISCAL||' '||v_registro.PLANTA_FISCAL||' '||
				      v_registro.PUERTA_FISCAL;
		         xCP:=v_registro.COD_POSTAL_FISCAL;
		         xPOBLACION:=v_registro.MUNICIPIO_FISCAL;
		         xPROVINCIA:=v_registro.PROVINCIA;

	          ELSE

		         GetDomicilioFiscal(v_registro.NIF,v_REGISTRO.IDDOMIALTER,
			  	             xDomicilio,xPoblacion,xProvincia,xCP);

		      END IF;
	       ELSE

		      GetDomicilioFiscal(v_Registro.REPRESENTANTE,v_Registro.IDDOMIALTER,
		 	                xDomicilio,xPoblacion,xProvincia,xCP);

	       END IF;

	       -- modificamos el recibo en gestión tributaria y recaudación
	       xDOMI_OLD:=v_recibo.DOMICILIADO;
	       
	       IF xAnulaDOMI='S' THEN

	          UPDATE RECIBOS_IBI SET  NIF=v_registro.NIF,
	  				         NOMBRE=SUBSTR(v_registro.NOMBRE,1,40),
					         DOMICILIO=xDOMICILIO,
					         DOMI_TRIBUTARIO=xDOMI_TRIBUTARIO,
					         POBLACION=xPOBLACION,
					         PROVINCIA=xPROVINCIA,
					         CODIGO_POSTAL=xCP,
					         DOMICILIADO='N',
					         ENTIDAD=NULL,
					         SUCURSAL=NULL,
					         DC=NULL,
					         CUENTA=NULL,
					         F_DOMICILIACION=NULL,
					         TITULAR=NULL,
					         NOMBRE_TITULAR=NULL,
					         ESTADO_BANCO=NULL
		      WHERE ID=vPERIODOS.ID;
	       ELSE
	          UPDATE RECIBOS_IBI SET  NIF=v_registro.NIF,
	  				         NOMBRE=SUBSTR(v_registro.NOMBRE,1,40),
					         DOMICILIO=xDOMICILIO,
					         DOMI_TRIBUTARIO=xDOMI_TRIBUTARIO,
					         POBLACION=xPOBLACION,
					         PROVINCIA=xPROVINCIA,
					         CODIGO_POSTAL=xCP
	          WHERE ID=vPERIODOS.ID;
	       END IF;

	       -- si está pasado a Recaudación, modificamos los datos del valor (o del punteo)
	       IF mVOL_EJE='V' THEN

	          -- refrescamos los datos seleccionados del recibo
	          SELECT * INTO v_recibo FROM RECIBOS_IBI WHERE ID=vPERIODOS.ID;

        
	          IF mVALOR IS NOT NULL THEN

		         IF xAnulaDOMI='S' THEN
  	                UPDATE VALORES SET NIF=v_recibo.NIF,
               		                   NOMBRE=v_recibo.NOMBRE,
				                       DOM_TRIBUTARIO=xDOMI_TRIBUTARIO, 
					                   ESTADO_BANCO=DECODE(ESTADO_BANCO, 'EB', NULL, ESTADO_BANCO)
	                WHERE ID=mVALOR;
		         ELSE
  	                UPDATE VALORES SET NIF=v_recibo.NIF,
               		                   NOMBRE=v_recibo.NOMBRE,
				                       DOM_TRIBUTARIO=xDOMI_TRIBUTARIO
	                WHERE ID=mVALOR;
		         END IF; -- xAnulaDOMI = 'S'

		      ELSE --si mVALOR IS NULL y mVOL_EJE='V' es porque está en el punteo

		         IF xAnulaDOMI='S' THEN
  	                UPDATE PUNTEO SET NIF=v_recibo.NIF,
               		                  NOMBRE=v_recibo.NOMBRE,
				                      DOM_TRIBUTARIO=xDOMI_TRIBUTARIO, 
					                  ESTADO_BANCO=DECODE(ESTADO_BANCO, 'EB', NULL, ESTADO_BANCO)
	                WHERE ID=mPUNTEO;
		         ELSE
  	                UPDATE PUNTEO SET NIF=v_recibo.NIF,
               		                  NOMBRE=v_recibo.NOMBRE,
				                      DOM_TRIBUTARIO=xDOMI_TRIBUTARIO
	                WHERE ID=mPUNTEO;	
	             END IF; --xAnulaDOMI = 'S'

		      END IF; -- mVALOR IS NOT NULL
						
	       END IF; -- mVOL_EJE='V'

        END IF; -- ((mVOL_EJE='V' and mPENDIENTE='S') or (mVOL_EJE IS NULL))	 

        -- Si se ha emitido el soporte Cuaderno19
        -- y se ha de anular la domiciliación, se genera una incidencia.
        SELECT COUNT(*) INTO xCUANTOS FROM LOGSPADRONES 
	    WHERE MUNICIPIO=v_recibo.MUNICIPIO AND  
		      PROGRAMA ='IBI' AND
	          PYEAR=xYearNow AND
		      PERIODO=v_recibo.PERIODO AND
	          HECHO='Generación Cuaderno 19 (recibos domiciliados)';

        IF ((xCUANTOS > 0) AND (xAnulaDOMI='S') AND (xDOMI_OLD='S')) THEN
        -- Generar incidencia
	       INSERT INTO AVISOSGT (HECHO,PROGRAMA,PYEAR,REFERENCIA,RECIBO_PADRON)
		   VALUES ('Se cambia una domiciliación después de emitir el soporte magnético',
		   'IBI',xYearNow, vPERIODOS.ID,'R');
		   xAVISO:=1;
        END IF;
       
	 END LOOP;  

END;
/

/*******************************************************************************
Acción: Modifica los datos fiscales del titular de un recibo de ibi.
MODIFICACIÓN: Antonio Pérez Caballero. Permitimos cambiar algunos datos del fichero de
	        IBI por indicación del sujeto pasivo. Para evitar perder estos cambios en 
		  nuevas cargas lo indicamos en una tabla de referencia a través del campo
		  VARIACION='S'. Los procesos de carga consultarán este campo y dependiendo
		  de su valor recogerán ciertos datos de la cinta del año anterior (los datos
		  que se han corregido).
MODIFICACIÓN: 04/04/2002 M. del Carmen Junco Gómez. Actualización de la modificación anterior
		  para asemejarla a la que se hace en RUSTICA. No sólo se modifica el registro
		  que activa la modificación (ID=xID) sino que se corrigen los datos para todas
		  las tuplas del mismo municipio e igual referencia catastral, guardando los datos
		  que venían en disco en la tabla HIS_CARGOREAL_IBI.
MODIFICACIÓN: 17/05/2002 M. del Carmen Junco Gómez. Del select del cursor quitamos el 
		  municipio para dar rapidez al cursor. Se ha creado el índice
		  IBIREFERENCIA.
MODIFICACIÓN: A petición de Agustín: 20/05/2002. M. Carmen Junco Gómez. Sólamente se van 
	        a poder modificar los datos fiscales. Además se van a guardar todas las
		  variaciones (no sólo los datos que venían en disco) para poder tener un 
		  histórico.
MODIFICACIÓN: A petición de Javier Romeo: 21/05/2002 M. Carmen Junco Gómez. También se 
		  podrá modificar el domicilio tributario en IBI.
MODIFICACIÓN: A petición de Javier Romeo: 03/06/2002 M. Carmen Junco Gómez. Cuando se 
		  modifiquen los datos de un abonado de IBI, se modificarán simultáneamente los
		  datos del último recibo generado y de éste recibo en Ejecutiva. Si el recibo
		  está en ejecutiva sólo se permitirá cambiar los datos del abonado, pero no 
		  del recibo.
MODIFICACIÓN: 06/06/2002 Antonio Pérez Caballero Concejal de Hacienda de Torrejón de Ardoz
		  Se podrá anular la domiciliación de un IBI si se cambia la titularidad.
		  Se añade un nuevo parametro xAnulaDOMI que nos indica con un valor 'S' si hay que
		  anular la domiciliación.
		  los parametros del obeto tributario se pueden pasar con valores nulos y en tal 
              caso no los modifica.
		  xTipoCambio indica si modifica plusvalias P plusvalías, M motes
		  R desde el registro de entrada, I desde el IBI

MODIFICACIÓN: 30/10/2002 Agustín León Robles. En el update de IBI en el domicilio tributario
		  el DECODE que habia estaba incorrecto.
MODIFICACIÓN: 18/02/2003 Mª del Carmen Junco Gómez.
		  Le incluimos la fecha de alteración catastral.
MODIFICACIÓN: 04/04/2003 M. Carmen Junco Gómez. Se añade un nuevo parámetro para indicar
		  que tipo de motivo de movimiento se produce.
MODIFICACIÓN: 04/06/2003 M. Carmen Junco Gómez. Al haber cambiado en referencias bancos
		  VARIACION='S' donde VARIACION='I' (cambio de 15 de Mayo de 2003 de Agustín), 
		  también hay que controlar que QUIEN_VARIA='S' donde QUIEN_VARIA='I' (Al hacer
		  un cambio desde IBI se incluirá una S en quien_varia en vez de una I.
MODIFICACIÓN: 08/08/2003 M. Carmen Junco Gómez. Se incorpora un nuevo parámetro de 
		  salida: xAVISO, que avisará en delphi si se ha anulado una domiciliación
		  después de haber generado el Cuaderno 19.
MODIFICACIÓN: 31/01/2005. Gloria Maria Calle Hernandez.
 		  Cambia los recibos si el usuario lo considera necesario, a través del parámetro
		  xChangeRec obtenido desde un check en la ventana de la aplicación. Si es True realizará
		  los cambios en recibos_ibi y valores si es False no hará estos cambios.
MODIFICACIÓN: 01/02/2005. M. Carmen Junco Gómez.
		  Se añade el motivo del cambio.		  
MODIFICACIÓN: 24/10/2004. Gloria Maria Calle Hernandez. Comparamos con xID no con xCodigo_Operacion, 
		  pues desde Delphi a veces no se especidica el codigo_operacion. Por otro lado, permitimos 
		  la actualizacion a nulos de escalera, planta y piso (por lo menos), pues los ponen a nulos
		  cuando dejan de ser solares: SUELO...
MODIFICACIÓN: 17/04/2006. M. Carmen Junco Gómez. Cuando deseamos mantener la información tributaria,
		  indicaremos el valor 'NULO' en el parámetro de entrada; si no la solución que había era
		  incompatible con la modificación anterior a esta (24/10/2004) para el caso de la 
		  escalera, planta y piso.
*******************************************************************************/
CREATE OR REPLACE PROCEDURE IBI_MODIFICA(
   xID 		     	IN INTEGER,
   xNIF 		 		IN CHAR,
   xNOMBRE 		 	IN CHAR,
   xVIAF 		 	IN CHAR,
   xCALLEF 		 	IN VARCHAR2,
   xNUMEROF 	 	IN CHAR,
   xESCALERAF 	 	IN CHAR,
   xPLANTAF 	 	IN CHAR,
   xPISOF 		 	IN CHAR,
   xCPF 		 		IN CHAR,
   xPOBLACIONF 	IN VARCHAR2,
   xPROVINCIAF 	IN VARCHAR2,      
   xPAISF		 	IN VARCHAR2,
   xTIPO_VIA	 	IN CHAR,
   xNOMBRE_VIA	 	IN CHAR,
   xPRIMER_NUMERO IN CHAR,
   xBLOQUE		 	IN CHAR,
   xESCALERA	 	IN CHAR,
   xPLANTA	     	IN CHAR,
   xPUERTA		 	IN CHAR,
   xAnulaDOMI	 	IN Char,
   xTipoCambio   	IN Char, 
   xFecha_altera 	IN DATE,
   xCod_Motivo	 	IN CHAR,
   xCODIGO_OPERACION IN INTEGER,  --si se van a modificar más de un registro a la vez
   xCHANGEREC	 	IN BOOLEAN,
   xMOTIVO			IN	VARCHAR2,
   xAVISO		OUT INTEGER) 
AS
 
   v_registro		 IBI%ROWTYPE;   

   -- cursor que recorre todos los registros con código de operacion=xCodigo_Operacion
   -- de forma que se puedan actualizar los datos fiscales a la vez para más de un 
   -- registro de la tabla de IBI
   -- Guardaremos los datos actuales en la tabla HIS_CARGOREAL_IBI para mantener un histórico.
   
   CURSOR CIBI IS SELECT * FROM IBI WHERE CODIGO_OPERACION=xCODIGO_OPERACION
			FOR UPDATE OF NIF,NOMBRE,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
					  PRIMER_NUMERO_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,
					  PUERTA_FISCAL,COD_POSTAL_FISCAL,MUNICIPIO_FISCAL,
					  PROVINCIA,PAIS,TIPO_VIA,NOMBRE_VIA,PRIMER_NUMERO,
					  BLOQUE,ESCALERA,PLANTA,PUERTA;

BEGIN



   -- Hay un trigger sobre IBI llamado T_UPDBEFORE_IBI que se activa cuando modificamos
   -- el atributo Domiciliado

   -- Si trabajamos sólo sobre un registro
   IF (xID<>0) and (xID is not null) THEN 

		-- recogemos los datos actuales que para este ID hay en la tabla IBI.
      SELECT * INTO v_registro FROM IBI WHERE ID=xID;

      INSERT INTO HIS_CARGOREAL_IBI
         (IDIBI,AYTO,TIPO_VARIACION,NIF,NOMBRE,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
         PRIMER_NUMERO_FISCAL, ESCALERA_FISCAL,PLANTA_FISCAL, PUERTA_FISCAL,
         COD_POSTAL_FISCAL,MUNICIPIO_FISCAL,PROVINCIA,PAIS,TIPO_VIA,NOMBRE_VIA,
	    	PRIMER_NUMERO,BLOQUE,ESCALERA,PLANTA,PUERTA, QUIEN_VARIA, FECHA_ALTERACION,
	    	COD_MOTIVO,MOTIVO)
		VALUES 	
	   	(xID,v_registro.MUNICIPIO,'M',v_registro.NIF,v_registro.NOMBRE,
	    	v_registro.TIPO_VIA_FISCAL,v_registro.NOMBRE_VIA_FISCAL,
	    	v_registro.PRIMER_NUMERO_FISCAL,v_registro.ESCALERA_FISCAL,
	    	v_registro.PLANTA_FISCAL,v_registro.PUERTA_FISCAL,
         v_registro.COD_POSTAL_FISCAL,v_registro.MUNICIPIO_FISCAL,
	   	v_registro.PROVINCIA,v_registro.PAIS,v_registro.TIPO_VIA,
	    	v_registro.NOMBRE_VIA,v_registro.PRIMER_NUMERO,v_registro.BLOQUE,
	    	v_registro.ESCALERA,v_registro.PLANTA,v_registro.PUERTA, xTipoCambio, 
	    	TRUNC(xFecha_altera,'dd'),xCod_Motivo,xMOTIVO);

		-- modificamos los datos en la tabla de IBI

		UPDATE IBI SET NIF=xNIF,
      					NOMBRE=xNOMBRE,
               		TIPO_VIA_FISCAL=xVIAF,
               		NOMBRE_VIA_FISCAL=xCALLEF,
               		PRIMER_NUMERO_FISCAL=xNUMEROF,
               		ESCALERA_FISCAL=xESCALERAF,
               		PLANTA_FISCAL=xPLANTAF,
               		PUERTA_FISCAL=xPISOF,
               		COD_POSTAL_FISCAL=xCPF,
               		MUNICIPIO_FISCAL=xPOBLACIONF,
               		PROVINCIA=xPROVINCIAF,                
			   			PAIS=xPAISF,
			   			-- En el caso de que las variables vengan a 'NULO' dejamos mismos valores
			   			TIPO_VIA=DECODE(RTRIM(xTIPO_VIA), 'NULO', TIPO_VIA, xTIPO_VIA),							
			   			NOMBRE_VIA=DECODE(RTRIM(xNOMBRE_VIA), 'NULO', NOMBRE_VIA, xNOMBRE_VIA),
			   			PRIMER_NUMERO=DECODE(RTRIM(xPRIMER_NUMERO), 'NULO', PRIMER_NUMERO, xPRIMER_NUMERO),
			   			BLOQUE=DECODE(RTRIM(xBLOQUE), 'NULO', BLOQUE, xBLOQUE),
			   			ESCALERA=DECODE(RTRIM(xBLOQUE), 'NULO', ESCALERA, xESCALERA),
			   			PLANTA=DECODE(RTRIM(xBLOQUE), 'NULO', PLANTA, xPLANTA),
			   			PUERTA=DECODE(RTRIM(xBLOQUE), 'NULO', PUERTA, xPUERTA),
               		QUIEN_MODIFICA=USER,
			   			DOMICILIADO=DECODE(xAnulaDOMI, 'S', 'N', DOMICILIADO)
		WHERE ID=xID;

      -- Anotamos el cambio en la tabla de referencias para que en la siguiente carga
      -- se recojan estos datos y no los que vengan en cinta.

      UPDATE REFERENCIAS_BANCOS SET VARIACION=xTipoCambio,NIF=xNIF
      WHERE MUNICIPIO=v_registro.MUNICIPIO AND
            REF_CATASTRAL=v_registro.REF_CATASTRAL||v_registro.NUMERO_SECUENCIAL||
				v_registro.PRIMER_CARACTER_CONTROL||v_registro.SEGUN_CARACTER_CONTROL;

		-- se modifica (si se puede) el último recibo, tanto en GT como en RECA
	  	IF (xCHANGEREC) THEN
         RECIBOS_IBI_MODIFI(xID, xAnulaDOMI, xAVISO);
      END IF;

   -- si se van a modificar más de un registro a la vez
   ELSE

      FOR vIBI IN CIBI
      LOOP	

	   	-- Insertamos en el historico la información que hasta ahora poseíamos
	   	-- para el registro en la tabla de IBI.

         INSERT INTO HIS_CARGOREAL_IBI
         	(IDIBI,AYTO,TIPO_VARIACION,NIF,NOMBRE,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
            PRIMER_NUMERO_FISCAL, ESCALERA_FISCAL,PLANTA_FISCAL, PUERTA_FISCAL,
            COD_POSTAL_FISCAL,MUNICIPIO_FISCAL,PROVINCIA,PAIS,TIPO_VIA,NOMBRE_VIA,
	    		PRIMER_NUMERO,BLOQUE,ESCALERA,PLANTA,PUERTA, QUIEN_VARIA, FECHA_ALTERACION,
	    		COD_MOTIVO,MOTIVO)
	   	VALUES 	
	      	(vIBI.ID,vIBI.MUNICIPIO,'M',vIBI.NIF,vIBI.NOMBRE,
	       	vIBI.TIPO_VIA_FISCAL,vIBI.NOMBRE_VIA_FISCAL,
	       	vIBI.PRIMER_NUMERO_FISCAL,vIBI.ESCALERA_FISCAL,
	       	vIBI.PLANTA_FISCAL,vIBI.PUERTA_FISCAL,
            vIBI.COD_POSTAL_FISCAL,vIBI.MUNICIPIO_FISCAL,
	       	vIBI.PROVINCIA,vIBI.PAIS,vIBI.TIPO_VIA,vIBI.NOMBRE_VIA,vIBI.PRIMER_NUMERO,
		 		vIBI.BLOQUE,vIBI.ESCALERA,vIBI.PLANTA,vIBI.PUERTA, 'S', TRUNC(xFECHA_ALTERA,'dd'),
		 		xCOD_MOTIVO,xMOTIVO);         

	   	-- modificamos los datos en la tabla de IBI (sólo datos fiscales)
	   	UPDATE IBI SET NIF=xNIF,
                        NOMBRE=xNOMBRE,
                        TIPO_VIA_FISCAL=xVIAF,
                        NOMBRE_VIA_FISCAL=xCALLEF,
                        PRIMER_NUMERO_FISCAL=xNUMEROF,
                        ESCALERA_FISCAL=xESCALERAF,
                        PLANTA_FISCAL=xPLANTAF,
                        PUERTA_FISCAL=xPISOF,
                        COD_POSTAL_FISCAL=xCPF,
                        MUNICIPIO_FISCAL=xPOBLACIONF,
                        PROVINCIA=xPROVINCIAF,                
			      			PAIS=xPAISF,                     
                        QUIEN_MODIFICA=USER
	   	WHERE CURRENT OF CIBI;

         -- Anotamos el cambio en la tabla de referencias para que en la siguiente carga
         -- se recojan estos datos y no los que vengan en cinta.

         UPDATE REFERENCIAS_BANCOS SET VARIACION='S',NIF=xNIF
         WHERE MUNICIPIO=vIBI.MUNICIPIO AND
               REF_CATASTRAL=vIBI.REF_CATASTRAL||vIBI.NUMERO_SECUENCIAL||
				     vIBI.PRIMER_CARACTER_CONTROL||vIBI.SEGUN_CARACTER_CONTROL;

	   	-- se modifica (si se puede) el último recibo, tanto en GT como en RECA
	  		IF (xCHANGEREC) THEN
         	RECIBOS_IBI_MODIFI(vIBI.ID, 'N',xAVISO);
      	END IF;

      END LOOP;

   END IF; 

END;
/

/*******************************************************************************
Autor: 22/05/2002 M.Carmen Junco Gómez.
Acción: Modifica la calle tributaria de todos los abonados de un municipio y año,
	  restringiendo o no por número de calle
MODIFICACIÓN: 18/02/2003 M. Carmen Junco Gómez. Se añade la fecha de alteración
      catastral.
MODIFICACIÓN: 04/04/2003 M. Carmen Junco Gómez. Incluimos en la tabla his_cargoreal_ibi
	  el código de motivo de modificación. En este caso 'CV02'.      
MODIFICACIÓN: 04/06/2003 M. Carmen Junco Gómez. Al haber cambiado en referencias bancos
		  VARIACION='S' donde VARIACION='I' (cambio de 15 de Mayo de 2003 de Agustín), 
		  también hay que controlar que QUIEN_VARIA='S' donde QUIEN_VARIA='I' (Al hacer
		  un cambio desde IBI se incluirá una S en quien_varia en vez de una I.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE IBI_MODIFICA_CALLE(
   xAYTO		IN	CHAR,
   xYEAR		IN	CHAR,
   xNEW 		IN 	CHAR,
   xOLD 		IN 	CHAR,
   xNUMERO1		IN 	INTEGER,
   xNUMERO2		IN 	INTEGER,
   xFECHA_ALTERA IN DATE)
AS   
   xNUM2 INTEGER;

   -- cursor que recorre todos los abonados para el ayuntamiento y año 
   -- pasados como parámetro y que posean como calle tributaria xOLD y el numero de la
   -- calle se ecuentra entre xNumero1 y xNumero2
   CURSOR CIBI IS SELECT * FROM IBI WHERE MUNICIPIO=xAYTO AND YEAR=xYEAR AND
			 NOMBRE_VIA=xOLD AND PRIMER_NUMERO BETWEEN xNUMERO1 AND xNUM2
			 FOR UPDATE OF NOMBRE_VIA;

BEGIN

   xNUM2:=xNUMERO2;  

   IF (xNUMERO1=0 AND xNUMERO2=0) THEN	
	xNUM2:=9999;
   END IF;

   FOR vIBI IN CIBI
   LOOP	   

	   -- Insertamos en la tabla de variaciones los datos anteriores

	   INSERT INTO HIS_CARGOREAL_IBI
            (IDIBI,AYTO,TIPO_VARIACION,QUIEN_VARIA,FECHA_ALTERACION,NIF,NOMBRE,
             TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
             PRIMER_NUMERO_FISCAL, ESCALERA_FISCAL,PLANTA_FISCAL, PUERTA_FISCAL,
             COD_POSTAL_FISCAL,MUNICIPIO_FISCAL,PROVINCIA,PAIS,TIPO_VIA,NOMBRE_VIA,
	       PRIMER_NUMERO,BLOQUE,ESCALERA,PLANTA,PUERTA,COD_MOTIVO)
	   VALUES 	
	      (vIBI.ID,vIBI.MUNICIPIO,'M','S',xFECHA_ALTERA,vIBI.NIF,vIBI.NOMBRE,
	       vIBI.TIPO_VIA_FISCAL,vIBI.NOMBRE_VIA_FISCAL,
	       vIBI.PRIMER_NUMERO_FISCAL,vIBI.ESCALERA_FISCAL,
	       vIBI.PLANTA_FISCAL,vIBI.PUERTA_FISCAL,
             vIBI.COD_POSTAL_FISCAL,vIBI.MUNICIPIO_FISCAL,
	       vIBI.PROVINCIA,vIBI.PAIS,vIBI.TIPO_VIA,
	       vIBI.NOMBRE_VIA,vIBI.PRIMER_NUMERO,vIBI.BLOQUE,
	       vIBI.ESCALERA,vIBI.PLANTA,vIBI.PUERTA,'CV02');

	   -- modificamos la calle en la tabla de IBI

	   UPDATE IBI SET NOMBRE_VIA=xNEW,			   
                        QUIEN_MODIFICA=USER
 	   WHERE CURRENT OF CIBI;

       -- Anotamos el cambio en la tabla de referencias para que en la siguiente carga
       -- se recojan estos datos y no los que vengan en cinta.

       UPDATE REFERENCIAS_BANCOS SET VARIACION='S'
       WHERE MUNICIPIO=vIBI.MUNICIPIO AND
             REF_CATASTRAL=vIBI.REF_CATASTRAL||
	  		               vIBI.NUMERO_SECUENCIAL||
				           vIBI.PRIMER_CARACTER_CONTROL||
				           vIBI.SEGUN_CARACTER_CONTROL;

   END LOOP;   

END;
/

-- *************************************************************************************
-- Acción: Paso a Recaudación de los recibos de un municipio, año y periodo determinados.
-- MODIFICACIÓN: 21/08/2001 Agustin Leon Robles.
-- MODIFICACIÓN: 27/05/2002 Agustin Leon Robles. Los recibos con importe 0 si se tienen que pasar
-- 	a recaudacion aunque no se pueden providenciar de apremio, porque sino se aprueba en 
-- 	comision de gobierno el padron por un numero de recibos y luego el cargo en recaudacion
-- 	seria por un numero de recibos inferior.
-- MODIFICACIÓN: 27/05/2002 M. Carmen Junco Gómez. Incluir o no los exentos dependiendo
-- 		  del nuevo parámetro de entrada xEXENTOS.
-- MODIFICACIÓN: 1/07/2002 M. Carmen Junco Gómez. Insertar una tupla en LogsPadrones
-- 		  para controlar que se ha pasado un padrón a Recaudación.
-- MODIFICACIÓN: 29/11/2002 M. Carmen Junco Gómez. Se añaden los campos MUNICIPIO y
-- 		  PERIODO en la tabla LOGSPADRONES.
-- MODIFICACIÓN: 01/10/2003 Lucas Fernández Pérez. 
--		  Se elimina del objeto tributario el domicilio tributario.
-- MODIFICACION: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato de la clave de Gravamen
--			de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
-- MODIFICACIÓN: 09/06/2004 Gloria Mª Calle Hernández. Se guarda en el campo Clave_recibo el ID 
--			 	 de la la tabla de recibos.
-- *************************************************************************************

CREATE OR REPLACE PROCEDURE IBI_PASE_RECA(
       xMUNICIPIO   	IN CHAR,
       xYEAR 	  		IN CHAR,
       xPERIODO 	  	IN CHAR,
       xFECHA 	  		IN DATE,
       xN_CARGO 	  	IN CHAR,
	   xYEARCONTRAIDO	IN CHAR,
	   xEXENTOS			IN CHAR)
AS

	xPADRON           		 CHAR(6);
	DNI_DEUDOR        		 CHAR(10);
	NOMBRE            		 CHAR(40);
	ESTADO_BANCO      		 CHAR(2);
	INICIO_PERIODO_VOLUN     DATE;
	FIN_PERIODO_VOLUNTARIO   DATE;
	PRINCIPAL         		 FLOAT;
	DOMICILIO_TRIBUTARIO     VARCHAR(60);
	OBJETO_TRIBUTARIO 		 VARCHAR(1024);
	REF_CATASTRAL            CHAR(20);
	NUM_FIJO                 CHAR(8);
	BONIFICACION             FLOAT;
	VALOR_CATASTRAL          FLOAT;
	VALOR_SUELO              FLOAT;
	xBASE_LIQUIDABLE		 FLOAT;
	xBASE_IMPONIBLE			 FLOAT;
	xTIPO_GRAVAMEN			 FLOAT;
	RECIBO                   INTEGER;
	xSALTO                   CHAR(2);
	xNUM_RECIBO              INTEGER;
	xTIPO_TRIBUTO			 CHAR(2);
	xID						 INTEGER;

	CURSOR CRECIBO IS
		SELECT ID, RECIBO, ABONADO, NIF, NOMBRE, DOMI_TRIBUTARIO, DESDE, HASTA, 
			TOTAL, ESTADO_BANCO, REF_CATASTRAL||NUMERO_SECUENCIAL||
					    PRIMER_CARACTER_CONTROL||SEGUN_CARACTER_CONTROL,
			NUM_FIJO, BONIFICACION, VALOR_CATASTRAL, BASE_IMPONIBLE, TIPO_GRAVAMEN
		FROM RECIBOS_IBI 
		WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR AND PERIODO=xPERIODO;

BEGIN

	SELECT CONCEPTO INTO xPADRON FROM PROGRAMAS WHERE PROGRAMA='IBI';

	SELECT TIPO_TRIBUTO INTO xTIPO_TRIBUTO
 	FROM CONTADOR_CONCEPTOS
	WHERE MUNICIPIO=xMUNICIPIO AND CONCEPTO=xPADRON;

	SELECT min(SALTO) INTO xSALTO FROM SALTO;

	OPEN CRECIBO;
	LOOP
         FETCH CRECIBO INTO xID, xNUM_RECIBO, RECIBO, DNI_DEUDOR, NOMBRE, DOMICILIO_TRIBUTARIO,
			INICIO_PERIODO_VOLUN, FIN_PERIODO_VOLUNTARIO, PRINCIPAL,
			ESTADO_BANCO, REF_CATASTRAL, NUM_FIJO, BONIFICACION,
			VALOR_CATASTRAL, xBASE_IMPONIBLE, xTIPO_GRAVAMEN;
         EXIT WHEN CRECIBO%NOTFOUND;

         SELECT VALOR_SUELO, BASE_LIQUIDABLE
         INTO VALOR_SUELO, xBASE_LIQUIDABLE
         FROM IBI WHERE ID=RECIBO;
   
         OBJETO_TRIBUTARIO:='';
         OBJETO_TRIBUTARIO:='ABONADO Nº: '||TO_CHAR(RECIBO)||xSALTO;
   
         IF REF_CATASTRAL IS NOT NULL THEN
      		OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'REF. CATASTRAL: '
                               ||REF_CATASTRAL||xSALTO;
         END IF;

         IF NUM_FIJO IS NOT NULL THEN
            OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'Nº FIJO: '
                               ||NUM_FIJO||xSALTO;
         END IF;

	   IF xBASE_LIQUIDABLE IS NOT NULL THEN
		OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'BASE LIQUIDABLE: '
					 ||TO_CHAR(xBASE_LIQUIDABLE)||xSALTO;
	   END IF;   
 
         IF VALOR_CATASTRAL IS NOT NULL THEN
   	      OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'VALOR CATASTRAL: '
                               ||TO_CHAR(VALOR_CATASTRAL)||xSALTO;
         END IF;

         IF VALOR_SUELO IS NOT NULL THEN
	       OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'VALOR SUELO: '
                                ||TO_CHAR(VALOR_SUELO)||xSALTO;
         END IF;

	   IF xBASE_IMPONIBLE IS NOT NULL THEN
		 OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'BASE IMPONIBLE: '
					  ||TO_CHAR(xBASE_IMPONIBLE)||xSALTO;
	   END IF;

         IF BONIFICACION IS NOT NULL THEN
	       OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'BONIFICACION: '
                                ||TO_CHAR(BONIFICACION, '900')||XSALTO;
         END IF;

	   IF xTIPO_GRAVAMEN IS NOT NULL THEN
		 OBJETO_TRIBUTARIO:=OBJETO_TRIBUTARIO||'TIPO GRAVAMEN: '
					  ||TO_CHAR(xTIPO_GRAVAMEN,'0D999')||xSALTO;
	   END IF;

	   IF NOT (xEXENTOS='N' AND PRINCIPAL<=0) THEN
            INSERT INTO PUNTEO
              (AYTO, PADRON, YEAR, PERIODO, RECIBO, NIF,
               NOMBRE, VOL_EJE, F_CARGO, N_CARGO, PRINCIPAL,
               CUOTA_INICIAL, FIN_PE_VOL, INI_PE_VOL,
               TIPO_DE_TRIBUTO, DOM_TRIBUTARIO, OBJETO_TRIBUTARIO,
               TIPO_DE_OBJETO, ESTADO_BANCO, CLAVE_CONCEPTO,
		       YEAR_CONTRAIDO, CLAVE_RECIBO)
            VALUES
              (xMUNICIPIO, xPADRON, xYEAR, xPERIODO,
               xNUM_RECIBO, DNI_DEUDOR, NOMBRE, 'V',
               xFECHA, xN_CARGO, PRINCIPAL,
               PRINCIPAL, FIN_PERIODO_VOLUNTARIO,
               INICIO_PERIODO_VOLUN, xTIPO_TRIBUTO, DOMICILIO_TRIBUTARIO,
               OBJETO_TRIBUTARIO,'R', ESTADO_BANCO, REF_CATASTRAL,
		       xYEARCONTRAIDO, xID);
         END IF;

     END LOOP;
     CLOSE CRECIBO;

     -- Insertamos una tupla en LOGSPADRONES para controlar que esta acción ha sido ejecutada
     INSERT INTO LOGSPADRONES (MUNICIPIO,PROGRAMA,PYEAR,PERIODO,HECHO)
     VALUES (xMUNICIPIO,'IBI',xYEAR,xPERIODO,'Se Pasa un padrón a Recaudación');

END;
/


/*******************************************************************************
Acción: Modifica el gravamen para un municipio, año y módulo (IBI o RUSTICA) dados.
MODIFICADO: 17/05/04. Gloria Maria Calle Hernandez. Cambiado MAX_VALOR_CATASTRAL por MAX_CUOTA
			y añadido campo Clave (para los bienes de caracteristicas especiales).
MODIFICADO: 21/02/05. Gloria Maria Calle Hernandez. Añadido MAX_VCATASTRAL para indicar
			el max. valor catastral a partir del cual se aplica el correspondiente gravamen
			de la clave de uso a la que pertenezca. Para aquelos de menor valor catastral
			se aplicará el tipo general (clave_uso nula para dicho año).
MODIFICADO: 07/04/05. Gloria Maria Calle Hernandez. Actualizacion sobre el campo Usuario añadido a la tabla.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE MOD_GRAVAMEN (
       xMODULO 		 IN CHAR,
       xMUNICIPIO 	 IN CHAR,
       xYEAR 		 IN CHAR,
       xGRAVAMEN 	 IN FLOAT,
       xMAXCUOTA	 IN FLOAT,
       xINCREMENTO 	 IN FLOAT,
       xMAXVCATASTRAL IN FLOAT,
       xCLAVE		 IN CHAR
)
AS

BEGIN
   IF (xMODULO='IBI') THEN
     --Siempre tendrá clave
     UPDATE GRAVAMEN_IBI_RUS
        SET GRAVAMEN=xGRAVAMEN,
            MAX_CUOTA=xMAXCUOTA,
            INCREMENTO_VC=xINCREMENTO,
            MAX_VCATASTRAL=DECODE(xCLAVE,null,0,xMAXVCATASTRAL),
            USUARIO=USER
     WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR AND MODULO=xMODULO AND CLAVE=xCLAVE; 
   ELSE
     --Nunca tendrá valor en el campo clave de uso ni MaxVCatastral
     UPDATE GRAVAMEN_IBI_RUS
        SET GRAVAMEN=xGRAVAMEN,
            MAX_CUOTA=xMAXCUOTA,
            INCREMENTO_VC=xINCREMENTO,
            USUARIO=USER
     WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR AND MODULO=xMODULO; 
   END IF;
END;
/

/*******************************************************************************
Acción: Indicamos el número de periodos que se van a dar en el municipio 
        pasado como parámetro.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE IBI_MOD_NUM_PERIODOS(
       xMUNICIPIO 	IN CHAR,
       xNUM 		IN INTEGER
)
AS

BEGIN
   UPDATE DATOSPER SET IBI_NUM_PERIODOS=xNUM
   WHERE MUNICIPIO=xMUNICIPIO;
END;
/

/*******************************************************************************
Acción: Modifica los datos de una bonificación o exención de la lista de bonificaciones.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE MODIF_BONI_CONFIG(
       xID 		IN INTEGER,
       xTIPO 	IN CHAR,
       xBONI 	IN FLOAT,
       xARTICULO  IN CHAR,
       xDESC 	IN CHAR
)
AS

BEGIN
   UPDATE BONI_EXEN SET TIPO=xTIPO, 
				BONIFICACION=xBONI,
                        ARTICULO=xARTICULO,
                        DESCRIPCION=xDESC
   WHERE ID=xID;
END;
/

/*******************************************************************************
Acción: PARA RECIBOS DOMICILIADOS Y NO DOMICILIADOS DE LA CAIXA.
MODIFICACIÓN: 10/09/2001 M. Carmen Junco Gómez. Adaptación al euro.
MODIFICACIÓN: 20/09/2001 M. Carmen Junco Gómez. Se recogían campos de la tabla 
		  de IBI que ya están en la de Recibos.
MODIFICACION: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato del tipo de Gravamen
		  de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
MODIFICACION: 14/06/2005. Gloria Maria Calle Hernandez. Mandar como campo opcional la referencia 
		  catastral completa del bien urbano, es decir, los 20 dígitos. Petición por Juan Albuñol
		  para evitar problemas con la declaración del IRPF, incidencia 1554. 

*******************************************************************************/

CREATE OR REPLACE PROCEDURE Proc_Caixa_IBI 
		(xMunicipio   IN CHAR,
		 xYear 	  IN char, 
		 xPeri 	  IN char)
AS
	xNombre 			char(40);	
	xAbonado 			Integer;
	x2 				char(40);
	x3 				char(40);
	x4 				char(40);
	x5 				char(40);
	x6 				char(40);
	x7 				char(40);
	x8 				char(40);
	x9 				char(40);
	x10 				char(40);
	x11 				char(40);
	x12				char(40);
	x13				char(40);
	xNIF	 			CHAR(10);
	i 				integer;
	xRegis 			integer;

	xBASE_LIQUIDABLE		float;
	xNOMBRE_VIA			CHAR(25);
	xESCALERA			CHAR(2);
	xPLANTA			CHAR(3);
	xPUERTA			CHAR(3);
	xPRIMER_Numero 		char(6);

	CURSOR CRECIBI IS SELECT *
		FROM RECIBOS_IBI
		WHERE MUNICIPIO=xMUNICIPIO and YEAR=xYear and PERIODO=xPeri
			AND TOTAL>0;
BEGIN
  
	DELETE FROM RECIBOS_CAIXA WHERE USUARIO=USER;
	xRegis:=0;

	select count(*) into xRegis FROM recibos_Ibi 
	WHERE municipio=xMunicipio and year=xYear and periodo=xPeri AND TOTAL>0;

	FOR v_TIBI IN CRECIBI LOOP

		SELECT NIF,SUBSTR(NOMBRE,1,40),
			NOMBRE_VIA,ESCALERA,PLANTA,PUERTA,PRIMER_NUMERO,
			BASE_LIQUIDABLE

		INTO xNIF,xNOMBRE,
			xNOMBRE_VIA,xEscalera,xPlanta,xPuerta,xPRIMER_NUMERO,
			xBASE_LIQUIDABLE

		FROM IBI WHERE ID=v_TIBI.ABONADO;   	

		i:=12;
		/* EN ESTOS CAMPOS SE GUARDA EL DOMICILIO TRIBUTARIO*/
		x2:='CALLE: '||xNOMBRE_VIA;
		x3:='ESCALERA: '||xEscalera;
		x4:='PLANTA: '||xPlanta;
		x5:='PUERTA: '||xPuerta;
		x6:='NUMERO: '||xPRIMER_Numero;

		x7:= 'REF. CATASTRAL: '||v_TIBI.REF_CATASTRAL||v_TIBI.NUMERO_SECUENCIAL||
			  v_TIBI.PRIMER_CARACTER_CONTROL||v_TIBI.SEGUN_CARACTER_CONTROL;
		x8:='BASE LIQUIDABLE: '||xBASE_LIQUIDABLE;
		x9:='VALOR CATASTRAL: '||v_TIBI.VALOR_CATASTRAL;
		x10:='BASE IMPONIBLE: '||v_TIBI.BASE_IMPONIBLE;
		x11:='% BONIFICACION: '||v_TIBI.BONIFICACION;
		x12:='NUMERO FIJO: '||v_TIBI.NUM_FIJO;
		x13:='TIPO GRAVAMEN: '||TO_CHAR(v_TIBI.TIPO_GRAVAMEN,'0D999');

		INSERT INTO RECIBOS_CAIXA
			(ABONADO,NIF,NOMBRE,DOMICILIO,CODPOSTAL,MUNICIPIO,
			ENTIDAD,SUCURSAL,DC,CUENTA,
			TOTAL, Campo2, Campo3, Campo4, Campo5, Campo6, Campo7, 
			Campo8, Campo9, Campo10, Campo11, Campo12, Campo13,
			CAMPOS_OPCIONALES, CUANTOS_REGISTROS)
		VALUES
			(v_TIBI.RECIBO, xNif, xNombre, substr(v_TIBI.Domicilio,1,40), 
			v_TIBI.Codigo_Postal, v_TIBI.Poblacion, 
			v_TIBI.Entidad, v_TIBI.Sucursal, v_TIBI.DC, v_TIBI.Cuenta, 
			v_TIBI.TOTAL*100, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,x13,
			i, xRegis);

	END LOOP;

END;
/


-- ******************************************************************************
-- Autor: M. Carmen Junco Gómez. 07/05/2002
-- Acción: PARA RECIBOS DOMICILIADOS Y NO DOMICILIADOS DE CAJA MADRID.
-- MODIFICACIÓN: 24/05/2002 Mª Carmen Junco Gómez. Al campo1 se le añade el tipo
--	        de via además del nombre de la calle.
-- Modificación: 19/05/2003 Lucas Fernández Pérez. Al campo5 se le añade numero_secuencial,
-- 	primer_caracter_control y segun_caracter_control para formar la ref.catastral completa.
-- Modificacion: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato de la clave de Gravamen
--			de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
-- *******************************************************************************

CREATE OR REPLACE PROCEDURE Proc_CajaMadrid_IBI 
		(xMunicipio   IN CHAR,
		 xYear 	  IN char, 
		 xPeri 	  IN char)

AS
	xNombre 		char(40);	
	xAbonado 		Integer;
	x1 			char(40);
	x2 			char(40);
	x3 			char(40);
	x4 			char(40);
	x5 			char(40);
	x6 			char(40);
	x7 			char(40);
	x8 			char(40);	
	x9 			char(40);
	x10 		      char(40);
	x11			char(40);
	x12			char(40);
	x13			char(40);
	x14			char(40);
	x15			char(40);
	x16			char(40);			 
	xNIF	 		CHAR(10);
	i 			integer;
	xRegis 			integer;

	xBASE_LIQUIDABLE	float;
	xVALOR_SUELO	FLOAT;
	xVALOR_CONSTRUCCION FLOAT;
	xPAIS			CHAR(35);

	CURSOR CRECIBI IS SELECT *
		FROM RECIBOS_IBI
		WHERE MUNICIPIO=xMUNICIPIO and YEAR=xYear and PERIODO=xPeri;
BEGIN
  
	DELETE FROM RECIBOS_CAJAMADRID WHERE USUARIO=USER;
	xRegis:=0;

	select count(*) into xRegis FROM recibos_Ibi 
	WHERE municipio=xMunicipio and year=xYear and periodo=xPeri;

	FOR v_TIBI IN CRECIBI LOOP

		SELECT NIF,SUBSTR(NOMBRE,1,40),PAIS,
			BASE_LIQUIDABLE,VALOR_SUELO,VALOR_CONSTRUCCION

		INTO xNIF,xNOMBRE,xPAIS,
			xBASE_LIQUIDABLE,xVALOR_SUELO,xVALOR_CONSTRUCCION

		FROM IBI WHERE ID=v_TIBI.ABONADO;   	

		x1:='';
		x2:='';
		x3:='';
		x4:='';
		x5:='';
		x6:='';
		x7:='';
		x8:='';
		x9:='';
		x10:='';
		x11:='';
		x12:='';
		x13:='';
		x14:='';
		x15:='';
		x16:='';

		i:=16;

		-- en estos campos se guarda el domicilio tributario
		x1:='DOM. TRIBUTARIO: '||LTRIM(RTRIM(SUBSTR(v_TIBI.DOMI_TRIBUTARIO,1,23)));
		x2:=LTRIM(RTRIM(SUBSTR(v_TIBI.DOMI_TRIBUTARIO,24,27)));

		x3:='Nº RECIBO: '||v_TIBI.RECIBO;
		x4:='VALOR SUELO:        '||TO_CHAR(xVALOR_SUELO,'999G999D99');
		x5:='REF. CATASTRAL: '||v_TIBI.REF_CATASTRAL||v_TIBI.NUMERO_SECUENCIAL||v_TIBI.PRIMER_CARACTER_CONTROL||v_TIBI.SEGUN_CARACTER_CONTROL;
		x6:='VALOR CONSTRUCCION: '||TO_CHAR(xVALOR_CONSTRUCCION,'999G999D99');
		x7:='NUMERO FIJO: '||v_TIBI.NUM_FIJO;
		x8:='BASE IMPONIBLE:     '||TO_CHAR(v_TIBI.VALOR_CATASTRAL,'999G999D99');
		x9:='TIPO GRAVAMEN: '||TO_CHAR(v_TIBI.TIPO_GRAVAMEN,'0D999')||'%';		
		x10:='BASE LIQUIDABLE:    '||TO_CHAR(xBASE_LIQUIDABLE,'999G999D99');
		x11:=' ';
		x12:='CUOTA:              '||TO_CHAR(v_TIBI.BASE_IMPONIBLE,'999G999D99');
		x13:=' ';
		x14:='% BONIFICACION:     '||TO_CHAR(v_TIBI.BONIFICACION,'999G000D00');		
		x15:='Municipio revisado por Catastro con efec';
		x16:='tos 1 de Enero de 2002';

		INSERT INTO RECIBOS_CAJAMADRID
			(ABONADO,NIF,NOMBRE,DOMICILIO,CODPOSTAL,POBLACION,PROVINCIA,PAIS,
			REFERENCIA,DOMICILIADO,ENTIDAD,SUCURSAL,DC,CUENTA,
			TOTAL, Campo1, Campo2, Campo3, Campo4, Campo5, Campo6, 
			Campo7, Campo8, Campo9, Campo10, Campo11, Campo12, Campo13, Campo14,
			Campo15,Campo16, CAMPOS_OPCIONALES, CUANTOS_REGISTROS)
		VALUES
			(v_TIBI.RECIBO, xNif, xNombre, substr(v_TIBI.Domicilio,1,40), 
			v_TIBI.Codigo_Postal, v_TIBI.Poblacion,v_TIBI.Provincia,xPAIS,
			DECODE(v_TIBI.DOMICILIADO,'S',v_TIBI.REFERENCIA||v_TIBI.DIGITO_CONTROL,
			       v_TIBI.REFERENCIA),	
			DECODE(v_TIBI.DOMICILIADO,'S','D',' '),
			v_TIBI.Entidad, v_TIBI.Sucursal, v_TIBI.DC, v_TIBI.Cuenta, 
			v_TIBI.TOTAL*100, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12,
			x13, x14, x15, x16,	i, xRegis);

	END LOOP;

END;
/

/*******************************************************************************
Acción: Insertar en una tabla temporal recibos de ibi para su impresión.
Autor: Agustin Leon Robles.
Fecha: 21/08/2001
MODIFICACIÓN: 13/09/2001 M. Carmen Junco Gómez. Adaptación al euro.
MODIFICACIÓN: 01/08/2002 M. Carmen Junco Gómez. 
		  Incluimos el numero secuencial, pcc, scc para que la referencia catastral 
		  sea de 20 caracteres y no solo los 14.
		  En el campo xAbonado de la tabla imp_recibos_ibi hay que meter el número de
		  registro (recogido de la tabla referencias_bancos) y no el abonado de la tabla
		  de recibos (que es el ID de la tabla de IBI).
		  Incluimos también los campos xMuni, xDMunicipio, xCodConcepto y xPlazo para 
		  indicar el código del múnicipio, descripción de éste, código del concepto
		  y un texto indicando el número de plazo que se imprime.
MODIFICACIÓN: 18/08/2003 M. Carmen Junco Gómez. Al formar los códigos de barra se estaba
		  tomando el campo IMPORTE de la tabla de recibos, con lo que al hacer la
		  operación LPAD(v_RegistroIBI.IMPORTE*100,8,'0') daba un error de número
		  inválido. (Ejm: LPAD('000015.69,00'*100,8,'0'). Error en Armilla.
MODIFICACION: 31/05/2004 Gloria Maria Calle Hernandez. Añadido campo AYTO a la tabla 
			  Datos_Ordenante para generar ficheros por ayuntamientos (xej. Catoure).
			  Sólo cuando se trata de una diputación se almacena el campo Ayto vacio (en principio).
*******************************************************************************/

CREATE OR REPLACE PROCEDURE WriteTempIBI(
		v_RegistroIBI 	IN Recibos_IBI%ROWTYPE,
		xMUNICIPIO		IN CHAR,
		xYEAR			IN CHAR,
		xPERI			IN CHAR)
AS		
	xNOMBRE_ENTIDAD 		 CHAR(50);
	xHASTA1         		 DATE;
	xBASE_LIQUIDABLE		 float default 0.00;
	xVALOR_SUELO		 	 float default 0.00;
	xVALOR_CONSTRUCCION 	 float default 0.00;
	xCodPostalTribu		 	 char(5);
	xDistrito			 	 char(2);
	xCodEntidadMenor		 char(2);
    xNOMBREORD 		     	 VARCHAR2(40);
	xNIFORD    			 	 CHAR(10);
	xNUMERO_SECUENCIAL	 	 char(4);
	xPRIMER_CARACTER_CONTROL char(1);
	xSEGUN_CARACTER_CONTROL	 char(1);
	xDMUNI			  	 	 VARCHAR2(50);
	xCODCONCEP			 	 CHAR(6);
	xPLAZO_PER			 	 CHAR(15);
	xTIPOENT			 	 CHAR(1);
BEGIN

	-- recogemos la descripción del municipio
	SELECT POBLACION INTO xDMUNI FROM DATOSPER WHERE MUNICIPIO=xMUNICIPIO;

	-- recogemos el código del concepto
	SELECT CONCEPTO INTO xCODCONCEP FROM PROGRAMAS WHERE PROGRAMA='IBI';

	-- dependiendo del periodo ponemos un texto u otro en xPlazo
	IF xPERI='00' THEN
         xPLAZO_PER:='PLAZO UNICO';
	ELSIF xPERI<'10' THEN
	   xPLAZO_PER:='PLAZO '||SUBSTR(xPERI,2,1);
	ELSE
	   xPLAZO_PER:='PLAZO '||xPERI;
	END IF;

	-- recogemos los datos del ordenante (nombre y nif)
        begin
           SELECT TIPO_ENTIDAD INTO xTipoEnt FROM CONFIGURACION C, MUNICIPIOS M 
            WHERE C.ZONA=M.ZONA AND AYTO=xMUNICIPIO;
           IF xTIPOENT='S' THEN
              SELECT NIF,NOMBRE INTO xNIFORD,xNOMBREORD FROM DATOS_ORDENANTE WHERE AYTO IS NULL;
           ELSE 
              SELECT NIF,NOMBRE INTO xNIFORD,xNOMBREORD FROM DATOS_ORDENANTE WHERE AYTO=xMUNICIPIO;
           END IF;
        Exception
	      When no_data_found then
	         xNIFORD:=NULL;
                 xNOMBREORD:=NULL;
        end;


	SELECT BASE_LIQUIDABLE,COD_PROVI_INE||COD_MUNI_INE,DISTRITO_MUNI,COD_ENTIDAD_MENOR,
		 VALOR_SUELO,VALOR_CONSTRUCCION,NUMERO_SECUENCIAL, PRIMER_CARACTER_CONTROL,
		 SEGUN_CARACTER_CONTROL
	INTO xBASE_LIQUIDABLE,xCodPostalTribu,xDistrito,xCodEntidadMenor,
	     xVALOR_SUELO,xVALOR_CONSTRUCCION,xNUMERO_SECUENCIAL,xPRIMER_CARACTER_CONTROL,
	     xSEGUN_CARACTER_CONTROL
	FROM IBI WHERE ID=v_RegistroIBI.ABONADO;	
	
	/* En caso de estar domiciliado, nombre de la Entidad */          
	xNOMBRE_ENTIDAD:='';
	begin
		SELECT NOMBRE INTO xNOMBRE_ENTIDAD FROM ENTIDADES 
			WHERE CODIGO=v_RegistroIBI.ENTIDAD;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
	end;

	xHASTA1:=v_RegistroIBI.HASTA+1; /* fecha del hasta mas un día */          

	INSERT INTO IMP_RECIBOS_IBI 
       (xMuni,xDMunicipio,xCodConcepto,xAnio,xPeriodo,xPlazo,xAbonado,xNif,xNombre,
	 xDomiFiscal,xCodPostal,xPoblacion,
	 xProvincia,xDomiTribu,xTotal,xREF_CATASTRAL,NUMERO_SECUENCIAL, 
	 PRIMER_CARACTER_CONTROL,SEGUN_CARACTER_CONTROL,xNUM_FIJO,xTIPO_GRAVAMEN,
	 xBONIFICACION,xVALOR_CATASTRAL,xBASE_IMPONIBLE,xBASE_LIQUIDABLE,
	 xRefe,xDC,xTRIBUTO,xEJERCICIO,xREMESA,xIMPO,xEMISOR,xDesde,xHasta,xCargo,
	 xHasta1,xENTIDAD,xSUCURSAL,xDCCUENTA,xCUENTA,xTITULAR,xNOMBRE_ENTIDAD,
	 xNOMBRE_TITULAR,xCONCEPTO,VALOR_SUELO,VALOR_CONSTRUCCION,
	 CodPostalTribu,Distrito,CodEntidadMenor,
	 DISCRI_PERIODO,DIGITO_YEAR,F_JULIANA,DIGITO_C60_MODALIDAD2,
	 COD_BARRAS_MOD1,COD_BARRAS_MOD2,xNOMBREORDENANTE,xNIFORDENANTE)

	VALUES
 	(xMunicipio,xDmuni,xCodConcep,xYear,xPeri,xPlazo_Per,v_RegistroIBI.RECIBO,
	v_RegistroIBI.NIF,v_RegistroIBI.NOMBRE,
	v_RegistroIBI.DOMICILIO,v_RegistroIBI.CODIGO_POSTAL,v_RegistroIBI.Poblacion,
	v_RegistroIBI.Provincia,v_RegistroIBI.DOMI_TRIBUTARIO,

	v_RegistroIBI.Total,v_RegistroIBI.REF_CATASTRAL,xNUMERO_SECUENCIAL, 
	xPRIMER_CARACTER_CONTROL, xSEGUN_CARACTER_CONTROL,
	v_RegistroIBI.NUM_FIJO,v_RegistroIBI.TIPO_GRAVAMEN,
	v_RegistroIBI.BONIFICACION,v_RegistroIBI.VALOR_CATASTRAL,v_RegistroIBI.BASE_IMPONIBLE,
	xBASE_LIQUIDABLE,

	v_RegistroIBI.REFERENCIA,v_RegistroIBI.DIGITO_CONTROL,v_RegistroIBI.TRIBUTO,
	v_RegistroIBI.EJERCICIO,v_RegistroIBI.REMESA,v_RegistroIBI.IMPORTE,
	v_RegistroIBI.EMISOR,v_RegistroIBI.Desde,v_RegistroIBI.Hasta,v_RegistroIBI.F_CARGO,
	xHasta1,v_RegistroIBI.ENTIDAD,v_RegistroIBI.SUCURSAL,v_RegistroIBI.DC,
	v_RegistroIBI.CUENTA,v_RegistroIBI.TITULAR,xNOMBRE_ENTIDAD,
	v_RegistroIBI.NOMBRE_TITULAR,v_RegistroIBI.CONCEPTO,xVALOR_SUELO,xVALOR_CONSTRUCCION,
	xCodPostalTribu,xDistrito,xCodEntidadMenor,
	v_RegistroIBI.DISCRI_PERIODO,v_RegistroIBI.DIGITO_YEAR,v_RegistroIBI.F_JULIANA,
	v_RegistroIBI.DIGITO_C60_MODALIDAD2,

	'90502'||v_RegistroIBI.EMISOR||v_RegistroIBI.REFERENCIA||v_RegistroIBI.DIGITO_CONTROL||
	v_RegistroIBI.TRIBUTO||v_RegistroIBI.EJERCICIO||v_RegistroIBI.REMESA||
	LPAD(v_RegistroIBI.TOTAL*100,8,'0'),

	'90521'||v_RegistroIBI.EMISOR||v_RegistroIBI.REFERENCIA||
	v_RegistroIBI.DIGITO_C60_MODALIDAD2||v_RegistroIBI.DISCRI_PERIODO||
	v_RegistroIBI.TRIBUTO||v_RegistroIBI.EJERCICIO||v_RegistroIBI.DIGITO_YEAR||
	v_RegistroIBI.F_JULIANA|| LPAD(v_RegistroIBI.TOTAL*100,8,'0') ||'0',
	xNOMBREORD,xNIFORD);

END;
/

/*******************************************************************************
Acción: Inserción en una tabla temporal de los recibos de ibi que se van a imprimir.
MODIFICACIÓN: 21/08/2001 Agustin Leon Robles.
MODIFICACIÓN: 01/08/2002 Mª Carmen Junco Gómez. Se añade el parámetro del municipio
		  para la llamada al procedimiento WriteTempIbi.
MODIFICACIÓN: 05/09/2005 Gloria Mª Calle Hernandez. Añadido impresión ordenada por
		  codigo postal y domicilio fiscal.
*******************************************************************************/

CREATE OR REPLACE PROCEDURE Imprime_Recibos_Ibi(
		xMUNICIPIO 	IN CHAR,
		xID        	IN INTEGER,
		xYear      	IN CHAR, 
		xPeri      	IN CHAR, 
		xDomi      	IN CHAR,
		xReciDesde 	IN INTEGER,
		xReciHasta 	IN INTEGER,
		xOrden	IN CHAR)
AS

	I INTEGER;		

	--orden alfabetico
	CURSOR CReciboIBIAlfabetico IS
		SELECT *
		FROM RECIBOS_IBI 
			WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri	and 
			domiciliado=xDomi
		order by nombre,recibo;

	--orden domicilio fiscal
	CURSOR CReciboIBIFiscal IS
		SELECT *
		FROM RECIBOS_IBI 
			WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri	and 
			domiciliado=xDomi
		order by domicilio,recibo;

	--orden domicilio tributario
	CURSOR CReciboIBITributario IS
		SELECT *
		FROM RECIBOS_IBI 
			WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri	and 
			domiciliado=xDomi
		order by domi_tributario,recibo;

	CURSOR CReciboIBICodPostal IS
		SELECT *
		FROM RECIBOS_IBI 
			WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri	and 
			domiciliado=xDomi
		order by codigo_postal,domicilio;

	v_RegistroIBI      Recibos_IBI%ROWTYPE;

BEGIN

   I:=0;

   DELETE FROM IMP_RECIBOS_IBI WHERE USUARIO=UID;

   IF (xID<>0 ) then 

		SELECT * INTO v_RegistroIBI FROM RECIBOS_IBI WHERE ID=xID;
		WriteTempIBI(v_RegistroIBI,xMUNICIPIO,xYear,xPeri);

   ELSE  /*DEL IF (xID<>0 ) */ 

	--orden alfabetico
	if xOrden='A' then

		OPEN CReciboIBIAlfabetico;
		LOOP 
		   FETCH CReciboIBIAlfabetico INTO v_RegistroIBI;
		   EXIT WHEN CReciboIBIAlfabetico%NOTFOUND;
	
	  	   I:=I+1;				

		   IF (I >= xReciDesde and I <= xReciHasta) then
				IF v_RegistroIBI.TOTAL>0 THEN
					WriteTempIBI(v_RegistroIBI,xMUNICIPIO,xYear,xPeri);
				END IF;
	   	   ELSE
	      	IF (I > xRECIHASTA) THEN
      	   		EXIT;
		      END IF;
  	   	   END IF;	

		END LOOP;
		CLOSE CReciboIBIAlfabetico;

    elsif xOrden='C' then

		OPEN CReciboIBICodPostal;
		LOOP 
		   FETCH CReciboIBICodPostal INTO v_RegistroIBI;
		   EXIT WHEN CReciboIBICodPostal%NOTFOUND;
	
	  	   I:=I+1;				

		   IF (I >= xReciDesde and I <= xReciHasta) then
				IF v_RegistroIBI.TOTAL>0 THEN
					WriteTempIBI(v_RegistroIBI,xMUNICIPIO,xYear,xPeri);
				END IF;
	   	   ELSE
	      	IF (I > xRECIHASTA) THEN
      	   		EXIT;
		      END IF;
  	   	   END IF;	

		END LOOP;
		CLOSE CReciboIBICodPostal;

	--orden fiscal o tributario
	else
		if xOrden='F' then
			OPEN CReciboIBIFiscal;
			LOOP 
			   FETCH CReciboIBIFiscal INTO v_RegistroIBI;	
			   EXIT WHEN CReciboIBIFiscal%NOTFOUND;
	
		  	   I:=I+1;				
	
			   IF (I >= xReciDesde and I <= xReciHasta) then
				IF v_RegistroIBI.TOTAL>0 THEN
					WriteTempIBI(v_RegistroIBI,xMUNICIPIO,xYear,xPeri);
				END IF;
		   	   ELSE
		      	IF (I > xRECIHASTA) THEN
      		   		EXIT;
		      	END IF;
	  	   	   END IF;	
	
			END LOOP;
			CLOSE CReciboIBIFiscal;
		--orden tributario
		else
			OPEN CReciboIBITributario;
			LOOP 
			   FETCH CReciboIBITributario INTO v_RegistroIBI;	
			   EXIT WHEN CReciboIBITributario%NOTFOUND;
	
		  	   I:=I+1;				
	
			   IF (I >= xReciDesde and I <= xReciHasta) then
				IF v_RegistroIBI.TOTAL>0 THEN
					WriteTempIBI(v_RegistroIBI,xMUNICIPIO,xYear,xPeri);
				END IF;
		   	   ELSE
		      	IF (I > xRECIHASTA) THEN
      		   		EXIT;
		      	END IF;
	  	   	   END IF;	
	
			END LOOP;
			CLOSE CReciboIBITributario;
		end if;
	end if;
	
END IF; /*DEL IF (xID<>0 ) */

END;
/

/******************************************************************************************
Autor: 15/03/2002 Antonio Pérez Caballero
Acción: Realizar el cambio de titularidad después de una transmisión en una plusvalía.
        Modificamos en IBI para que el próximo recibo de IBI salga a nombre de quién
        acaba de adquirie el bien inmueble.
        xTipo 'P' de plusvalías 'M' de motes.
	  Este cambio de titularidad lo realizaremos sólo sobre el registro del mayor año,
	  que será del que en el año siguiente se lean los datos.
MODIFICACIÓN: 04/04/2002 M. Carmen Junco Gómez. Modificamos los datos para la tupla con el
	  año más actual, ya que será de este del que se recojan en la próxima carga de datos
	  desde cinta.
MODIFICACIÓN: A petición de Agustín. 20/05/2002 M. Carmen Junco Gómez. Al modificar un 
        registro de IBI sólo se podrán modificar sus datos fiscales (no tributarios)
MODIFICACIÓN: A petición de Agustín. 06/06/2002 M. Carmen Junco Gómez. Al modificar los 
	  datos de titularidad, si estaba domiciliado, desactivamos la domiciliación.
MODIFICACIÓN: 06/06/2002 Antonio Pérez Caballero se utiliza la misma rutina de IBI_MODIFICA
	para tener el código mas centralizado y atomizado.
	En el caso de esta llamada como no modifica los valores del domicilio tributario
	se los pasamos como valores nulos y el procedimiento controla esta situación.
MODIFICACIÓN: 25/06/2002 M. Carmen Junco Gómez. Se ha restringido la longitud de la calle,
	numero,poblacion,provincia y pais, ya que las longitudes en contribuyentes son 
	mayores que en la tabla de IBI.	
MODIFICACIÓN: 18/02/2003 M. Carmen Junco Gómez. Se añade el parámetro xFecha_Altera, 
    como la fecha de alteración catastral.
MODIFICACIÓN: 12/08/2003 M. Carmen Junco Gómez. Se añade el parámetro xAVISO de salida
	en la llamada a IBI_MODIFICA.	
MODIFICACIÓN: 17/04/2006 M. Carmen Junco Gómez. Cuando se llama a IBI_MODIFICA se está 
	suponiendo que siempre se hace desde Plusvalías. Si se llama desde la creación de un 
	mote es incorrecta la referencia al cambio por Plusvalía.	
MODIFICACIÓN: 17/04/2006 M. Carmen Junco Gómez. En el procedimiento IBI_MODIFICA hay una modificación
	que especifica que "permitimos la actualizacion a nulos de escalera, planta y piso (por lo menos), 
	pues los ponen a nulos cuando dejan de ser solares: SUELO...". Esto es incompatible con pasar desde
	aquí NULL cuando no queremos que cambie la información tributaria. El deseo de mantener la misma
	información tributaria lo expresaremos indicando 'NULO' en el parámetro de entrada al procedimiento
	IBI_MODIFICA.
MODIFICACIÓN: 12/06/2006 Lucas Fernández Pérez. Al cambiar el titular por ser un mote anulaba la 
	domiciliación, y eso no es correcto. Se cambia para que solo indique a IBI_MODIFICA que anule 
	la domiciliación si el cambio viene de plusvalias.

*******************************************************************************************/

CREATE OR REPLACE PROCEDURE IBICambioTitularidad(
	xNUEVO  IN CHAR,
	xIDIBI  IN INTEGER,
	xTipo   IN Char,
	xFecha_Altera IN DATE) 
AS

	xNombre	char(60);
	xVIAF		CHAR(5);
	xCALLEF	CHAR(25);
	xNUMEROF	CHAR(4);
	xESCALERAF	CHAR(2);
	xPLANTAF	CHAR(3);
	xPISOF	CHAR(2);
	xCPF		CHAR(5);
	xPOBLACIONF	CHAR(25);
	xPROVINCIAF	CHAR(25);
	xPAISF	CHAR(25);
	xAVISO INTEGER;
	xMOTIVO VARCHAR2(512);
	xAnulaDomiciliacion char(1);

BEGIN

  	-- Buscar los datos fiscales del nuevo sujeto pasivo
   BEGIN
     	SELECT NOMBRE,VIA,SUBSTR(CALLE,1,25),
	  	DECODE(SUBSTR(NUMERO,1,1),'0',SUBSTR(NUMERO,2,4),SUBSTR(NUMERO,1,4)),
		ESCALERA,PLANTA,PISO,CODIGO_POSTAL,SUBSTR(POBLACION,1,25),SUBSTR(PROVINCIA,1,25),
		SUBSTR(PAIS,1,25)
		INTO xNOMBRE,xVIAF,xCALLEF,xNUMEROF,xESCALERAF,xPLANTAF,xPISOF,xCPF,
	     	  xPOBLACIONF,xPROVINCIAF,xPAISF
		FROM CONTRIBUYENTES WHERE NIF=xNUEVO;

		EXCEPTION
 	   	when no_data_found then
				NULL;
   END;


	-- Los últimos parametros indican que se anule la domiciliación si la hubiese
	-- xTipo el tipo de cambio y 0 para una única actualización.
	
	if xTipo='M' then --Motes
		xMOTIVO:='Cambio de titularidad por creación de Mote';
		xAnulaDomiciliacion:='N'; -- un cambio por mote no debe cambiar la domiciliación
	elsif xTipo='P' then --Plusvalías
		xMOTIVO:='Cambio de titularidad desde plusvalías';
		xAnulaDomiciliacion:='S'; -- un cambio por plusvalía si debe cambiar la domiciliación
	end if;

	IBI_MODIFICA(xIDIBI,xNUEVO,xNOMBRE,xVIAF,xCALLEF,xNUMEROF,xESCALERAF,xPLANTAF,
				 xPISOF,xCPF,xPOBLACIONF,xPROVINCIAF,xPAISF,'NULO','NULO','NULO','NULO','NULO',
				 'NULO','NULO',xAnulaDomiciliacion,xTipo,xFECHA_ALTERA,'CV01',0,false,xMOTIVO,xAVISO);

END;
/

--
-- Acción: Genera un padrón complementario de IBI
-- 12/06/2002 Antonio Pérez Caballero
-- MODIFICADO: 17/05/04. Gloria Maria Calle Hernandez. Cambiado MAX_VALOR_CATASTRAL por MAX_CUOTA
--			   y añadido campo CLAVE (para los bienes de caracteristicas especiales).
--
-- Modificación: 02/06/2004. Agustín León Robles. Si no tiene NIF del titular de la cuenta, el Nombre del titular 
--				es el nombre de la tabla de IBI			
-- MODIFICACIÓN: 05/02/2007 Lucas Fernández Pérez. Ampliación del campo domicilio de la tabla RECIBOS_IBI
CREATE OR REPLACE PROCEDURE IBIPadAdicional(
       xMUNICIPIO 		IN CHAR,
       xYEAR 			IN CHAR,
       xDESDE 			IN DATE,
       xHASTA 			IN DATE,
	   xCARGO			IN DATE,
       xCONCEPTO 		IN CHAR,
       xLINEA1 			IN CHAR,
       xLINEA2 			IN CHAR,
       xLINEA3 			IN CHAR,
       xPERIODO 		IN CHAR,
	   xCodOpe			IN INTEGER)
AS
   xIMPORTE             CHAR(12);
   xTOTAL               FLOAT;
   xREFERENCIA          CHAR(10);
   xDIGITO_CONTROL      CHAR(2);
   xDIG_C60_M2	        CHAR(2);
   xNUM_PER             INTEGER;
   xRECIBO              INTEGER;
   xBASE_IMPONIBLE      FLOAT;

   --domicilio fiscal
   xDOMICILIO           VARCHAR2(60);
   --domicilio tributario
   xDOMI_TRIBUTARIO		VARCHAR2(50);

   xGRAVAMEN 			FLOAT;
   xMAX_CUOTA 			FLOAT;

   xPADRON		    	CHAR(6);
   xEMISOR 	    		CHAR(6);
   xTRIBUTO 	    	CHAR(3);

   xNOMBRE_TITULAR   	VARCHAR2(40);
   xCODPOSTAL 	    	CHAR(5);
   xPoblacion 	    	VARCHAR2(35);
   xPROVINCIA	    	VARCHAR2(35);

   CURSOR CIBI IS 
       SELECT * FROM IBI WHERE CODIGO_OPERACION=xCodOpe
		AND MUNICIPIO=xMUNICIPIO 
		AND YEAR=xYEAR;

BEGIN

	SELECT IBI_NUM_PERIODOS INTO xNUM_PER FROM DATOSPER WHERE MUNICIPIO=xMUNICIPIO;

	--Averiguar que concepto es el padron de IBI
	SELECT CONCEPTO INTO xPADRON FROM PROGRAMAS WHERE PROGRAMA='IBI';

	--recoger los datos para el cuaderno 60
	BEGIN
		select EMISORA,CONCEPTO_BANCO into xEMISOR,xTRIBUTO from RELA_APLI_BANCOS
				where AYTO=xMUNICIPIO and CONCEPTO=xPADRON;
	EXCEPTION
		when no_data_found then
			BEGIN
			xEMISOR:='000000';
			xTRIBUTO:='000';
			END;
	END;

   FOR v_TIbi IN CIBI 
   LOOP

      --recoger el gravamen para cada Clave de bien inmueble	
      BEGIN
         SELECT GRAVAMEN,MAX_CUOTA INTO xGRAVAMEN,xMAX_CUOTA
		   FROM GRAVAMEN_IBI_RUS
          WHERE MODULO='IBI' AND MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR 
		    AND CLAVE=v_TIbi.CLAVE_USO AND v_TIbi.VALOR_CATASTRAL>MAX_VCATASTRAL;
	  --Si estamos en un año anterior al 2005 o si para dicha clave de uso no supera el valor catastral minimo
	  --la consulta no devolverá gravamen alguno y se buscará el gravamen general para clave nula. 
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
		    BEGIN 
              SELECT GRAVAMEN,MAX_CUOTA INTO xGRAVAMEN,xMAX_CUOTA
		        FROM GRAVAMEN_IBI_RUS
               WHERE MODULO='IBI' AND MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR 
			     AND TRIM(CLAVE) IS NULL;
			EXCEPTION
			   WHEN NO_DATA_FOUND THEN	 
                    xGRAVAMEN:=0;
                    xMAX_CUOTA:=0;
			END;
      END;


      IF (v_TIbi.DOMICILIADO='N') THEN
          xNOMBRE_TITULAR:=NULL;
      ELSE
      
      		if RTRIM(v_TIbi.DNI_FACTURA) IS NULL then
				xNOMBRE_TITULAR:=SUBSTR(v_TIbi.NOMBRE,1,40);
			else
				--nombre del titular de la cuenta, para el cuaderno 19
				SELECT NOMBRE INTO xNOMBRE_TITULAR FROM CONTRIBUYENTES WHERE NIF=v_TIbi.DNI_FACTURA;
			end if;
			
      END IF;

	--domicilio tributario
	xDOMI_TRIBUTARIO:=v_TIbi.TIPO_VIA||' '|| v_TIbi.NOMBRE_VIA ||' '||
   	  	      v_TIbi.PRIMER_NUMERO||' '||v_TIbi.PRIMERA_LETRA||' '||
                  v_TIbi.ESCALERA||' '||v_TIbi.PLANTA||' '||v_TIbi.PUERTA;
		
	--domicilio fiscal
	xDOMICILIO:=v_TIbi.TIPO_VIA_FISCAL||' '|| v_TIbi.NOMBRE_VIA_FISCAL
			||' '|| v_TIbi.PRIMER_NUMERO_FISCAL||' '|| v_TIbi.PRIMERA_LETRA_FISCAL
			||' '|| v_TIbi.ESCALERA_FISCAL||' '|| v_TIbi.PLANTA_FISCAL
			||' '|| v_TIbi.PUERTA_FISCAL;

	--domicilio fiscal en funcion de si tiene un representante o no.
	--Dentro de la funcion "GetDomicilioFiscal" se comprueba si tiene a su vez 
	--un domicilio alternativo.
	IF v_TIbi.REPRESENTANTE IS NULL THEN		

		--En el IBI hay una variante ya que si no tiene representante y tampoco 
		--domicilios alternativos entonces se tienen que coger los datos de la propia 
		--tabla de IBI y no de contribuyentes.
		IF v_TIbi.IDDOMIALTER IS NULL THEN
			--xDomicilio ya estaria con datos 
			xPoblacion:=v_TIbi.MUNICIPIO_FISCAL;
			xProvincia:=v_TIbi.PROVINCIA;
			xCodPostal:=v_TIbi.COD_POSTAL_FISCAL;
		ELSE
			GetDomicilioFiscal(v_TIbi.NIF,v_TIbi.IDDOMIALTER,
					xDomicilio,xPoblacion,xProvincia,xCodPostal);
		END IF;
	ELSE
		GetDomicilioFiscal(v_TIbi.REPRESENTANTE,v_TIbi.IDDOMIALTER,
				xDomicilio,xPoblacion,xProvincia,xCodPostal);
	END IF;



      -- EL NUMERO DE RECIBO VA A SER EL ID DE LA TABLA DE REFERENCIAS_BANCOS

      SELECT ID INTO xRECIBO FROM REFERENCIAS_BANCOS WHERE MUNICIPIO=xMUNICIPIO
			AND REF_CATASTRAL=v_TIbi.REF_CATASTRAL||v_TIbi.NUMERO_SECUENCIAL||
			v_TIbi.PRIMER_CARACTER_CONTROL||v_TIbi.SEGUN_CARACTER_CONTROL;


      --SI ES EL MISMO IMPORTE SE CALCULA SOBRE EL VALOR CATASTRAL, SINO SOBRE BASE LIQUIDABLE

      IF v_TIbi.VALOR_CATASTRAL=v_TIbi.BASE_LIQUIDABLE THEN
   	   xBASE_IMPONIBLE:=Round((v_TIbi.VALOR_CATASTRAL * xGRAVAMEN)/100,2);
      ELSE
         xBASE_IMPONIBLE:=Round((v_TIbi.BASE_LIQUIDABLE * xGRAVAMEN)/100,2);
      END IF;


      -- SI AÑO ES MAYOR NO SE APLICA BONIFICACION
      IF (xYEAR > v_TIbi.YEAR_BONI or v_TIbi.YEAR_BONI is null) THEN
         xTOTAL:=ROUND(xBASE_IMPONIBLE/xNUM_PER,2);

      ELSE --APLICAR BONIF A TODOS LOS MESES
         IF(xYEAR < v_TIbi.YEAR_BONI) THEN
 	      xTOTAL:=ROUND((xBASE_IMPONIBLE*(1-(v_TIbi.BONIFICACION/100)))/xNUM_PER,2);

         ELSE -- APLICAR BONIF A LOS MESES QUE CORRESPONDAN
		  -- MESES BONIF
	      xTOTAL:=ROUND(((xBASE_IMPONIBLE/12)* TO_NUMBER(v_TIbi.MES_BONI)*
                     (1-(v_TIbi.BONIFICACION/100)))+((xBASE_IMPONIBLE/12)*
 	               (12- TO_NUMBER(v_TIbi.MES_BONI))),2);

	      -- MESES SIN BONIF
            xTOTAL:=ROUND(xTOTAL/xNUM_PER,2);
         END IF;

      END IF;

      IF (xTOTAL<xMAX_CUOTA) THEN
	      xTOTAL:=0;
      END IF;

	  xTOTAL:=ROUND(xTOTAL,2);

	--calcular los digitos de control del cuaderno 60 modalidad 1
      CALCULA_DC_60(xTOTAL, xRECIBO, xTRIBUTO, SUBSTR(xYEAR,3,2), xPERIODO, xEMISOR, 
					xDIGITO_CONTROL);

	--calcular los digitos de control del cuaderno 60 modalidad 2

	  CALCULA_DC_MODALIDAD2_60(xTOTAL, xRECIBO, xTRIBUTO, SUBSTR(xYEAR,3,2), '1',
			to_char(xHASTA,'y'), to_char(xHASTA,'ddd'), xEMISOR, xDIG_C60_M2);

      --CONVIERTE NºABONADO EN CARACTER Y RELLENO DE CEROS

      GETREFERENCIA(xRECIBO, xREFERENCIA); 

      --CONVIERTE EL IMPORTE RELLENO DE CEROS

      IMPORTEENCADENA(xTOTAL,xIMPORTE);

	--insertamos los cotitulares del recibo

	IF v_TIbi.COTITULARES='S' THEN
		INSERT INTO COTITULARES_RECIBO(NIF,PROGRAMA,AYTO,PADRON,YEAR,PERIODO,RECIBO)
		SELECT NIF,'IBI',xMUNICIPIO,xPADRON,xYEAR,xPERIODO,xRECIBO
		FROM COTITULARES
		WHERE ID_CONCEPTO=v_TIbi.ID AND PROGRAMA='IBI';
	END IF;
	
      INSERT INTO RECIBOS_IBI
		(RECIBO,NUM_FIJO,
		REF_CATASTRAL,NUMERO_SECUENCIAL,PRIMER_CARACTER_CONTROL,SEGUN_CARACTER_CONTROL,
		ABONADO,YEAR,PERIODO,MUNICIPIO,
		TIPO_GRAVAMEN,BONIFICACION,VALOR_CATASTRAL,IMPORTE,TOTAL,BASE_IMPONIBLE,
		DESDE,HASTA,F_CARGO,CONCEPTO,LINEA1,LINEA2,LINEA3,EMISOR,TRIBUTO,
		EJERCICIO,REMESA,REFERENCIA,DIGITO_CONTROL,BASE_LIQUIDABLE,
		DOMICILIADO,ESTADO_BANCO,ENTIDAD,SUCURSAL,DC,CUENTA,F_DOMICILIACION,TITULAR,
		NOMBRE_TITULAR,NIF,NOMBRE,DOMICILIO,DOMI_TRIBUTARIO,CODIGO_POSTAL,POBLACION,
		PROVINCIA,DISCRI_PERIODO,DIGITO_YEAR,F_JULIANA,DIGITO_C60_MODALIDAD2)
      VALUES    
		(xRECIBO, v_TIbi.NUM_FIJO, 
		v_TIbi.REF_CATASTRAL, v_TIbi.NUMERO_SECUENCIAL,
		v_TIbi.PRIMER_CARACTER_CONTROL,v_TIbi.SEGUN_CARACTER_CONTROL,v_TIbi.ID,
		xYEAR, xPERIODO, xMUNICIPIO, xGRAVAMEN, v_TIbi.BONIFICACION,
		v_TIbi.VALOR_CATASTRAL, xIMPORTE, xTOTAL, xBASE_IMPONIBLE,xDESDE, xHASTA, xCARGO,
		xCONCEPTO, xLINEA1, xLINEA2, xLINEA3, xEMISOR, xTRIBUTO, 
		SUBSTR(xYEAR,3,2), xPERIODO, xREFERENCIA, 
		xDIGITO_CONTROL, v_TIbi.BASE_LIQUIDABLE,

		v_TIbi.DOMICILIADO, DECODE(v_TIbi.DOMICILIADO,'S','EB',NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.ENTIDAD,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.SUCURSAL,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.DC,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.CUENTA,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.F_DOMICILIACION,NULL),
		DECODE(v_TIbi.DOMICILIADO,'S',v_TIbi.DNI_FACTURA,NULL),xNOMBRE_TITULAR,

		v_TIbi.NIF,SUBSTR(v_TIbi.NOMBRE,1,40), xDOMICILIO, xDOMI_TRIBUTARIO,
		xCODPOSTAL,xPOBLACION,xPROVINCIA,

		'1',to_char(xHASTA,'y'), to_char(xHASTA,'ddd'),xDIG_C60_M2);
   END LOOP;

END;
/


--
-- Acción: Genera un padrón complementario de IBI
-- 12/06/2002 Antonio Pérez Caballero
--
CREATE OR REPLACE PROCEDURE IBI_GrupoPadronAdd(
	xFecha	IN Date,
	xYear		IN Char,
      xCodOpe     OUT INTEGER)
AS

BEGIN


   ADD_COD_OPERACION(xCodOpe);

   UPDATE IBI SET CODIGO_OPERACION=xCodOpe 
		WHERE YEAR=xYear
		AND FECHA_CARGA=TRUNC(xFecha,'DD');

END;
/

/********************************************************************/

-- Autor: 05/05/2003. Agustín León Robles.
--
-- Buscar las altas nuevas en el padron del IBI para hacer liquidaciones.
-- La busqueda se hace por número fijo
--
CREATE OR REPLACE PROCEDURE LookIBIAltasNuevas(				
				xYear    in char, 
				xCuantos out integer)
as
	xID	  INTEGER;
	xMUNI CHAR(3);
	
	CURSOR CAYTOS IS SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
	
	CURSOR cIBI IS SELECT * FROM IBI 
				   WHERE MUNICIPIO=xMUNI AND 
						 YEAR=xYEAR 
				   for update of AltaNueva;
begin

	xCuantos:=0;
	
	FOR vAYTOS IN  CAYTOS
	LOOP
		xMUNI:=vAYTOS.MUNICIPIO;

		for vIBI in cIBI 
		loop
			begin
		      	SELECT ID INTO xID
				FROM IBI WHERE MUNICIPIO=vIBI.MUNICIPIO AND YEAR=xYEAR-1 AND 
							   NUM_FIJO=vIBI.NUM_FIJO;
			exception
				WHEN NO_DATA_FOUND THEN
				begin
					UPDATE IBI SET ALTANUEVA='S' WHERE CURRENT OF cIBI;
					xCuantos:=xCuantos+1;
				end;
			end;

		end loop;
		
	END LOOP;

end;
/


/******************************************************************************************************/
-- Autor: 05/05/2003. Agustín León Robles.
--
-- Hacer las liquidaciones del IBI de las altas nuevas o sea aquellas en las que el 
-- numero fijo no esten en el padron del año anterior
--
-- xInserta: L-queremos generar las liquidaciones
--		     R-queremos imprimir, entonces rellenamos la tabla temporal imp_recibos_ibi
--
-- MODIFICACIÓN: 01/10/2003 Lucas Fernández Pérez. 
--		  Se elimina del objeto tributario el domicilio tributario.
-- Modificación: 06/11/2003. Agustín León Robles.
--		Se modifica el procedimiento para que llame al procedimiento ADD_Liqui y a la hora de imprimir
--		cree un grupo para todas las liquidaciones
-- Modificacion: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato del tipo de Gravamen
--			de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
-- Modificacion: 17/05/04. Gloria Maria Calle Hernandez. Cambiado MAX_VALOR_CATASTRAL por MAX_CUOTA
--			     y añadido campo CLAVE (para los bienes de caracteristicas especiales).
-- Modificación: 15/05/2006. M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
/*****************************************************************************************************/
CREATE OR REPLACE PROCEDURE MakeIBILiquidaciones(
			xYear 		in 	char, 
			xPeriodo 	in 	char,
			xInserta 	in 	char,
			xGRUPO		out	integer)
AS

	xMUNI				CHAR(3);

	xOBJETO_TRIBUTARIO 	VARCHAR(1024);
	xDOMI_TRIBUTARIO	VARCHAR2(50);

	xSALTO				CHAR(2);
	xCONCEPTO			char(6);
	xIDLiqui			INTEGER;
	xFinPeVol			date;
	xRefCatastral		char(20);
	xGRAVAMEN 			FLOAT;
	xMAX_CUOTA FLOAT;
	xNUM_PER          	INTEGER;
	xRECIBO          	char(7);
	xBASE_IMPONIBLE  	FLOAT;
	xBONIFICACION		FLOAT;
	xTOTAL          	FLOAT;

	CURSOR CAYTOS IS SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
	
	CURSOR cLiquiIBI IS SELECT * FROM IBI WHERE MUNICIPIO=xMUNI AND 
											    YEAR=xYEAR AND ALTANUEVA='S'; 	

											    
	Cursor cImprimeLiqui is select * from Liquidaciones 
			where Municipio=xMuni and Concepto=xConcepto and Year=xYear
					  and Periodo='00' and Ref_Catastral=xRefCatastral;
											    
begin

	SELECT SALTO INTO xSALTO FROM SALTO;

	SELECT LIQUIDACION INTO xCONCEPTO FROM PROGRAMAS WHERE PROGRAMA='IBI';	
	
	if xInserta='R' then
		ADD_COD_OPERACION(xGRUPO);
	end if;
	
	
	FOR vAYTOS IN CAYTOS LOOP
	
	   	xMUNI:=vAYTOS.MUNICIPIO;

		for vLiquiIBI in cLiquiIBI loop

			xRefCatastral:=vLiquiIBI.REF_CATASTRAL||
						   vLiquiIBI.NUMERO_SECUENCIAL||
					       vLiquiIBI.PRIMER_CARACTER_CONTROL||
					       vLiquiIBI.SEGUN_CARACTER_CONTROL;


			--me devuelve el final del periodo voluntario en funcion del numero de dias 
			--de la configuracion de la tabla de datosper
			xFinPeVol:=GetFinPeVol(vLiquiIBI.Municipio);

            --recoger el gravamen para cada Clave de bien inmueble	
      		BEGIN
         	   SELECT GRAVAMEN,MAX_CUOTA INTO xGRAVAMEN,xMAX_CUOTA
		   		 FROM GRAVAMEN_IBI_RUS
          		WHERE MODULO='IBI' AND MUNICIPIO=xMUNI AND YEAR=xYEAR 
		     	  AND CLAVE=vLiquiIBI.CLAVE_USO AND vLiquiIBI.VALOR_CATASTRAL>MAX_VCATASTRAL;
	  			--Si estamos en un año anterior al 2005 o si para dicha clave de uso no supera el valor catastral minimo
	  			--la consulta no devolverá gravamen alguno y se buscará el gravamen general para clave nula. 
      		EXCEPTION
         		WHEN NO_DATA_FOUND THEN
		    		BEGIN 
              		   SELECT GRAVAMEN,MAX_CUOTA INTO xGRAVAMEN,xMAX_CUOTA
		        	 	 FROM GRAVAMEN_IBI_RUS
               			WHERE MODULO='IBI' AND MUNICIPIO=xMUNI AND YEAR=xYEAR 
			     		  AND TRIM(CLAVE) IS NULL;
					EXCEPTION
			   			WHEN NO_DATA_FOUND THEN	 
                    		xGRAVAMEN:=0;
                    		xMAX_CUOTA:=0;
	   	  	      	END;
            END;


			SELECT IBI_NUM_PERIODOS INTO xNUM_PER FROM DATOSPER WHERE MUNICIPIO=vLiquiIBI.Municipio;
			
			IF vLiquiIBI.VALOR_CATASTRAL=vLiquiIBI.BASE_LIQUIDABLE THEN
				xBASE_IMPONIBLE:=Round((vLiquiIBI.VALOR_CATASTRAL * xGRAVAMEN)/100,2);
			ELSE
				xBASE_IMPONIBLE:=Round((vLiquiIBI.BASE_LIQUIDABLE * xGRAVAMEN)/100,2);
			END IF;


			-- SI AÑO ES MAYOR NO SE APLICA BONIFICACION
			IF (xYEAR > vLiquiIBI.YEAR_BONI or vLiquiIBI.YEAR_BONI is null) THEN	
				xTOTAL:=ROUND(xBASE_IMPONIBLE/xNUM_PER,2);
				xBONIFICACION:=0;

			ELSE --APLICAR BONIF A TODOS LOS MESES
				xBONIFICACION:=vLiquiIBI.BONIFICACION;

				IF (xYEAR < vLiquiIBI.YEAR_BONI) THEN
					xTOTAL:=ROUND((xBASE_IMPONIBLE*(1-(vLiquiIBI.BONIFICACION/100)))/
								   xNUM_PER,2);

				ELSE --APLICAR BONIF A LOS MESES QUE CORRESPONDAN
				
					xTOTAL:=ROUND(((xBASE_IMPONIBLE/12)* TO_NUMBER(vLiquiIBI.MES_BONI)*
							(1-(vLiquiIBI.BONIFICACION/100)))+((xBASE_IMPONIBLE/12)*
							(12- TO_NUMBER(vLiquiIBI.MES_BONI))),2);

					--MESES SIN BONIF
					xTOTAL:=ROUND(xTOTAL/xNUM_PER,2);
				END IF;

			END IF;

			IF (xTOTAL<xMAX_CUOTA) THEN
				xTOTAL:=0;
			END IF;

			xTOTAL:=ROUND(xTOTAL,2);

			--domicilio tributario
			xDOMI_TRIBUTARIO:=vLiquiIBI.TIPO_VIA||' '|| vLiquiIBI.NOMBRE_VIA ||' '||
   	  	      			vLiquiIBI.PRIMER_NUMERO||' '||vLiquiIBI.PRIMERA_LETRA||' '||
                  		vLiquiIBI.ESCALERA||' '||vLiquiIBI.PLANTA||' '||vLiquiIBI.PUERTA;

			--este procedimiento se utiliza para generar las liquidaciones y 
			--posteriormente imprimirlas
			if xInserta='L' then

				xOBJETO_TRIBUTARIO:='';		
				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'REF. CATASTRAL: '||xRefCatastral||
									xSALTO;

	            xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'Nº FIJO: '||vLiquiIBI.NUM_FIJO||
	            					xSALTO;
				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'BASE LIQUIDABLE: '||
									TO_CHAR(vLiquiIBI.BASE_LIQUIDABLE)||xSALTO;
      			xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'VALOR CATASTRAL: '||
      								TO_CHAR(vLiquiIBI.VALOR_CATASTRAL)||xSALTO;
				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'VALOR SUELO: '||
									TO_CHAR(vLiquiIBI.VALOR_SUELO)||xSALTO;

				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'BASE IMPONIBLE: '||
									TO_CHAR(xBASE_IMPONIBLE)||xSALTO;
				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'BONIFICACION: '||
									TO_CHAR(xBONIFICACION, '900')||XSALTO;
				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'TIPO GRAVAMEN: '||
									TO_CHAR(xGRAVAMEN,'0D999')||xSALTO;

									
				ADD_LIQUI(vLiquiIBI.Municipio,xConcepto,xYear,'00',xYear,vLiquiIBI.NIF,NULL,
						  xDOMI_TRIBUTARIO,sysdate,xFinPeVol,
						  xTOTAL,xOBJETO_TRIBUTARIO,
						  xRefCatastral,
						  vLiquiIBI.NUM_FIJO,NULL,NULL,0,xRecibo,xIDLiqui);
				
			else				
			
				for vImprimeLiqui in cImprimeLiqui loop
				
					UPDATE LIQUIDACIONES SET GRUPO=xGRUPO WHERE ID=vImprimeLiqui.ID;
					
				end loop;			
				
			end if;
			
		end loop;
		
	END LOOP;

end;
/

/*******************************************************************************/

-- Procedimiento que comprueba si la lectura para un municipio y años ya ha sido realizada
CREATE OR REPLACE PROCEDURE CHECK_EXIT_LECTURAIBI(
		xMUNICIPIO  IN CHAR,
      xYEAR 	 	IN CHAR,       
      xCUANTOS  	OUT INTEGER)
AS
BEGIN
   SELECT COUNT(*) INTO xCUANTOS
   FROM TMP_PADRONES_IBI WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR and CLASE_IBI IN ('UR','BI');
END;
/

/*******************************************************************************
Autor:  06/05/2003 M. Carmen Junco Gómez.
Acción: Antes de generar liquidaciones, hay que comprobar que no se hayan
	    generado con anterioridad
Modificacion: 06/11/2003. Agustín León Robles. Se actualiza todo el procedimiento
		porque tiene que comprobar solo las liquidaciones producidas por altas nuevas,
		ya que en el mismo año puede haber generado liquidaciones del DOC-DGC y esas no hay
		que borrarlas
*******************************************************************************/

CREATE OR REPLACE PROCEDURE CHECK_EXIT_LIQUIIBI
		(xYEAR		IN CHAR,
       xPERIODO		IN CHAR,
       xCUANTOS		OUT INTEGER)
AS

	xCONCEPTO	CHAR(6);
	xMuni		char(3);
		
	CURSOR cAytos IS SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
		
	CURSOR cLiquiIBI IS 
		SELECT REF_CATASTRAL||NUMERO_SECUENCIAL||PRIMER_CARACTER_CONTROL||SEGUN_CARACTER_CONTROL AS RefCatastral
		FROM IBI WHERE MUNICIPIO=xMUNI AND YEAR=xYEAR AND ALTANUEVA='S';
										    	
BEGIN

	SELECT LIQUIDACION INTO xCONCEPTO FROM PROGRAMAS WHERE PROGRAMA='IBI';

	for vAytos in cAytos loop
	
		xMuni:=vAytos.Municipio;
		
		for vLiquiIBI in cLiquiIBI loop
	
			SELECT COUNT(*) INTO xCUANTOS FROM LIQUIDACIONES
			WHERE CONCEPTO=xCONCEPTO AND YEAR=xYEAR AND PERIODO=xPERIODO 
					AND MUNICIPIO=xMuni And Ref_Catastral=vLiquiIBI.RefCatastral;
					
			if xCuantos > 0 then
				return;
			end if;
                    
		end loop;
		
    end loop;
END;
/

/******************************************************************************
Autor:  06/05/2003 M. Carmen Junco Gómez. Se borran las liquidaciones generadas 
					para un municipio, año y periodo.
					
Modificacion: 06/11/2003. Agustín León Robles. Se actualiza todo el procedimiento
		porque tiene que borrar solo las liquidaciones producidas por altas nuevas,
		ya que en el mismo año puede haber generado liquidaciones del DOC-DGC y esas no hay
		que borrarlas
******************************************************************************/

CREATE OR REPLACE PROCEDURE DEL_LIQUIDACIONES_IBI(
		xYEAR 	  IN CHAR,
       	xPERIODO  IN CHAR)
       	
AS       	

  xCONCEPTO CHAR(6);
  xCONTADOR INTEGER;
  xYEARWORK CHAR(4);  
  xMuni		char(3);
  
  CURSOR CAYTOS IS SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
    
  CURSOR cLiquiIBI IS 
		SELECT REF_CATASTRAL||NUMERO_SECUENCIAL||PRIMER_CARACTER_CONTROL||SEGUN_CARACTER_CONTROL AS RefCatastral
		FROM IBI WHERE MUNICIPIO=xMUNI AND YEAR=xYEAR AND ALTANUEVA='S';
		
BEGIN

   	SELECT LIQUIDACION INTO xCONCEPTO FROM PROGRAMAS WHERE PROGRAMA='IBI';   	
   		 
   	FOR vAYTOS IN CAYTOS LOOP   		 
   	
		xMuni:=vAytos.Municipio;
		
		for vLiquiIBI in cLiquiIBI loop   	
   	
   			delete FROM LIQUIDACIONES
			WHERE CONCEPTO=xCONCEPTO AND YEAR=xYEAR AND PERIODO=xPERIODO 
					AND MUNICIPIO=xMuni And Ref_Catastral=vLiquiIBI.RefCatastral;
					
		end loop;
   	
   		-- se actualiza el contador de liquidaciones
   		
   		SELECT YEARWORK INTO xYEARWORK FROM DATOSPER WHERE MUNICIPIO=vAYTOS.MUNICIPIO;   
   		
   		IF xYEAR=xYEARWORK THEN
   		
   			SELECT TO_NUMBER(MAX(NUMERO)) INTO xCONTADOR FROM LIQUIDACIONES 
   			WHERE MUNICIPIO=vAYTOS.MUNICIPIO AND CONCEPTO=xCONCEPTO AND YEAR=xYEAR;
   		
   			IF xCONTADOR IS NULL THEN
   			   xCONTADOR:=0;
   			END IF;
   			
   			UPDATE CONTADOR_CONCEPTOS SET CONTADOR=xCONTADOR 
   			WHERE CONCEPTO=xCONCEPTO AND MUNICIPIO=vAYTOS.MUNICIPIO;
   		END IF;
   		
   	END LOOP;   

END;
/



-- *******************************************************************************************
-- Acción: Copiar los gravámenes para cada clave de un año a otro
-- *******************************************************************************************

CREATE OR REPLACE PROCEDURE COPIAR_GRAVAMENES(
	xAyto			 IN CHAR,
	xYearOrigen      IN CHAR,
	xYearDestino	 IN CHAR)
AS
   -- cursor que recorre todos los gravamenes para cada clave del año de origen
   CURSOR cGrava IS SELECT * FROM GRAVAMEN_IBI_RUS 
    WHERE MODULO='IBI' AND MUNICIPIO=xAyto AND YEAR=xYearOrigen;
BEGIN

   FOR vGrava IN cGrava LOOP	

     INSERT INTO GRAVAMEN_IBI_RUS 
     (MODULO, MUNICIPIO, GRAVAMEN, MAX_CUOTA, INCREMENTO_VC, YEAR, CLAVE, MAX_VCATASTRAL)
     VALUES
     ('IBI',xAyto,vGrava.GRAVAMEN,vGrava.MAX_CUOTA,vGrava.INCREMENTO_VC,xYEARDestino,
      vGrava.CLAVE,vGrava.MAX_VCATASTRAL);

   END LOOP;

END;
/

/*******************************************************************************
Autor: 05/04/2005 M. Carmen Junco Gómez.
Acción: Reestablecer la información que se modificó para el IBI desde la tabla His_CargoReal_Ibi.
Parámetros:	xID: Id de la tabla His_CargoReal_Ibi
				xAnulaDomi: 'S' o 'N' para saber si anular o no la domiciliación
				xChangeRec: 'S' o 'N' para saber si se ha de modificar el último recibo generado.
*******************************************************************************/
CREATE OR REPLACE PROCEDURE IBI_REESTABLECE_INFO(
   	xID 		     	IN INTEGER,   
   	xAnulaDOMI	 	IN Char,   
   	xCHANGEREC	 	IN Char)    
AS
	mNIF							CHAR(10);
	mNOMBRE	 					CHAR(60);
	mTIPO_VIA_FISCAL			CHAR(5);
	mNOMBRE_VIA_FISCAL		CHAR(25);
	mPRIMER_NUMERO_FISCAL	CHAR(4);
	mESCALERA_FISCAL			CHAR(2);
	mPLANTA_FISCAL				CHAR(3);
	mPUERTA_FISCAL				CHAR(3);
	mCOD_POSTAL_FISCAL		CHAR(5);
	mMUNICIPIO_FISCAL			CHAR(25);
	mPROVINCIA					CHAR(25);
	mPAIS							CHAR(25);
	mTIPO_VIA					CHAR(5);
	mNOMBRE_VIA					CHAR(25);
	mPRIMER_NUMERO				CHAR(4);
	mBLOQUE						CHAR(4);
   mESCALERA					CHAR(2);
	mPLANTA						CHAR(3);
	mPUERTA						CHAR(3);
   
	xIDIBI						INTEGER;
	xMUNICIPIO	  				  CHAR (3);
	xREF_CATASTRAL            CHAR (14); 
	xNUMERO_SECUENCIAL        CHAR (4); 
	xPRIMER_CARACTER_CONTROL  CHAR (1); 
	xSEGUN_CARACTER_CONTROL   CHAR (1);
   xAVISO						INTEGER;
   
BEGIN


	-- recogemos los datos anteriores (los que se van a reestablecer) desde la tabla HIS_CARGOREAL_IBI
	SELECT IDIBI,NIF,NOMBRE,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,
			 COD_POSTAL_FISCAL,MUNICIPIO_FISCAL,PROVINCIA,PAIS,TIPO_VIA,NOMBRE_VIA,PRIMER_NUMERO,BLOQUE,ESCALERA,PLANTA,PUERTA 
	INTO xIDIBI,mNIF,mNOMBRE,mTIPO_VIA_FISCAL,mNOMBRE_VIA_FISCAL,mPRIMER_NUMERO_FISCAL,mESCALERA_FISCAL,mPLANTA_FISCAL,mPUERTA_FISCAL,
		  mCOD_POSTAL_FISCAL,mMUNICIPIO_FISCAL,mPROVINCIA,mPAIS,mTIPO_VIA,mNOMBRE_VIA,mPRIMER_NUMERO,mBLOQUE,mESCALERA,mPLANTA,mPUERTA				
	FROM HIS_CARGOREAL_IBI
	WHERE ID=xID;
		
	-- modificamos la tabla IBI con la información anterior (se perderá la actual, ya que no se almacenará en el histórico como información 
	-- existente antes de este cambio; se supone que estamos retrocediendo una actuación)
	
	UPDATE IBI SET NIF=mNIF,
                  NOMBRE=mNOMBRE,
                  TIPO_VIA_FISCAL=mTIPO_VIA_FISCAL,
                  NOMBRE_VIA_FISCAL=mNOMBRE_VIA_FISCAL,
                  PRIMER_NUMERO_FISCAL=mPRIMER_NUMERO_FISCAL,
                  ESCALERA_FISCAL=mESCALERA_FISCAL,
                  PLANTA_FISCAL=mPLANTA_FISCAL,
                  PUERTA_FISCAL=mPUERTA_FISCAL,
                  COD_POSTAL_FISCAL=mCOD_POSTAL_FISCAL,
                  MUNICIPIO_FISCAL=mMUNICIPIO_FISCAL,
                  PROVINCIA=mPROVINCIA,                
			   		PAIS=mPAIS,
			   		TIPO_VIA=mTIPO_VIA,						
			   		NOMBRE_VIA=mNOMBRE_VIA,
			   		PRIMER_NUMERO=mPRIMER_NUMERO,
			   		BLOQUE=mBLOQUE,
			   		ESCALERA=mESCALERA,
			 	  		PLANTA=mPLANTA,
			   		PUERTA=mPUERTA,
                  QUIEN_MODIFICA=USER,
			   		DOMICILIADO=DECODE(xAnulaDOMI, 'S', 'N', DOMICILIADO)
	WHERE ID=xIDIBI;


	-- borramos de la tabla HIS_CARGOREAL_IBI
	DELETE FROM HIS_CARGOREAL_IBI WHERE ID=xID;
	
	-- recogemos la referencia catastral de la tabla de IBI para localizar en la tabla REFERENCIAS_BANCOS	
	SELECT MUNICIPIO,REF_CATASTRAL,NUMERO_SECUENCIAL,PRIMER_CARACTER_CONTROL,SEGUN_CARACTER_CONTROL
	INTO xMUNICIPIO,xREF_CATASTRAL,xNUMERO_SECUENCIAL,xPRIMER_CARACTER_CONTROL,xSEGUN_CARACTER_CONTROL	
	FROM IBI WHERE ID=xIDIBI;
	
	
	-- modificamos el NIF en la tabla REFERENCIAS_BANCOS
   UPDATE REFERENCIAS_BANCOS SET NIF=mNIF
   WHERE MUNICIPIO=xMUNICIPIO AND REF_CATASTRAL=xREF_CATASTRAL||xNUMERO_SECUENCIAL||xPRIMER_CARACTER_CONTROL||xSEGUN_CARACTER_CONTROL;

	-- se modifica (si se puede) el último recibo, tanto en GT como en RECA
	IF (xCHANGEREC='S') THEN
   	RECIBOS_IBI_MODIFI(xIDIBI,xAnulaDOMI,xAVISO);
   END IF;   

END;
/

/********************************************************************/
COMMIT;
/********************************************************************/
