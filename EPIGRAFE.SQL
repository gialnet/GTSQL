/* se va a insertar el ID en la tabla EPIGRAFE y se van a actualizar los procedimientos
   que insertan epigrafe y seccion en las tablas EXACCIONES,AGUA,IAE,RECIBOS_IAE 
   para que inserten el ID correspondiente, pero no se va a modificar el funcionamiento actual,
   es decir, siguen estos dos campos (epigrafe y seccion) aparte del id en las tablas
   anteriores, las vistas seleccionan id_epigrafe,epigrafe y seccion...
   Se deja una mayor actualización para más adelante. 
*/   

CREATE SEQUENCE GEN_EPIGRAFE INCREMENT BY 1 START WITH 1;
CREATE PUBLIC SYNONYM GEN_EPIGRAFE FOR GIALNET.GEN_EPIGRAFE;

CREATE TABLE EPIGRAFE2 (
	ID		INTEGER NOT NULL,
	EPIGRAFE	CHAR(4) NOT NULL,
      /*E:Empresarial  P:Profesional A: Artistica*/
      TIPO_ACTIVIDAD CHAR(1) DEFAULT 'E' not null,
	SECCION	CHAR(1) DEFAULT '1' not null,
	NOMBRE	VARCHAR(50),
	PRIMARY KEY	(ID)

) TABLESPACE TABLASCONFIG;

CREATE OR REPLACE TRIGGER T_ADD_EPIGRAFE
BEFORE INSERT ON EPIGRAFE2
FOR EACH ROW

BEGIN
   SELECT GEN_EPIGRAFE.NEXTVAL INTO :NEW.ID FROM DUAL;
END T_ADD_EPIGRAFE;
/

INSERT INTO EPIGRAFE2 (EPIGRAFE,TIPO_ACTIVIDAD,SECCION,NOMBRE) 
SELECT * FROM EPIGRAFE;

UPDATE EPIGRAFE SET EPIGRAFE='0'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=3;
UPDATE EPIGRAFE SET EPIGRAFE='00'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=2;
UPDATE EPIGRAFE SET EPIGRAFE='000'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=1;

CREATE TABLE EPI (
	ID INTEGER,
	EPIGRAFE CHAR(4),
	SECCION CHAR(1));
INSERT INTO EPI(EPIGRAFE,SECCION) SELECT DISTINCT EPIGRAFE,SECCION FROM EPIGRAFE2;

CREATE PROCEDURE INSERTA_EPI AS
   xID INTEGER;
   CURSOR C1 IS SELECT EPIGRAFE,SECCION FROM EPI;
BEGIN

   FOR v1 IN C1 LOOP
      SELECT MIN(ID) INTO xID FROM EPIGRAFE2 WHERE EPIGRAFE=v1.EPIGRAFE AND SECCION=v1.SECCION;
      UPDATE EPI SET ID=xID WHERE EPIGRAFE=v1.EPIGRAFE AND SECCION=v1.SECCION;
   END LOOP;   
END;
/

EXECUTE INSERTA_EPI;
DROP PROCEDURE INSERTA_EPI;

DROP TABLE EPIGRAFE desde el Shema Manager;

CREATE TABLE EPIGRAFE (
	ID		INTEGER NOT NULL,
	EPIGRAFE	CHAR(4) NOT NULL,
      /*E:Empresarial  P:Profesional A: Artistica*/
      TIPO_ACTIVIDAD CHAR(1) DEFAULT 'E' not null,
	SECCION	CHAR(1) DEFAULT '1' not null,
	NOMBRE	VARCHAR(50),

      CONSTRAINT CV_EPI UNIQUE (EPIGRAFE,SECCION),
	PRIMARY KEY	(ID)

) TABLESPACE TABLASCONFIG;

DROP TRIGGER T_ADD_EPIGRAFE;
DROP SEQUENCE GEN_EPIGRAFE;
CREATE SEQUENCE GEN_EPIGRAFE INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER T_ADD_EPIGRAFE
BEFORE INSERT ON EPIGRAFE
FOR EACH ROW

BEGIN
   SELECT GEN_EPIGRAFE.NEXTVAL INTO :NEW.ID FROM DUAL;
END T_ADD_EPIGRAFE;
/

INSERT INTO EPIGRAFE(EPIGRAFE,SECCION,TIPO_ACTIVIDAD,NOMBRE) 
   SELECT EPIGRAFE,SECCION,TIPO_ACTIVIDAD,NOMBRE FROM EPIGRAFE2 
   WHERE ID IN (SELECT ID FROM EPI);

DROP TABLE EPI;
DROP TABLE EPIGRAFE2;


UPDATE EXACCIONES SET EPIGRAFE='0'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=3;
UPDATE EXACCIONES SET EPIGRAFE='00'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=2;
UPDATE EXACCIONES SET EPIGRAFE='000'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=1;

ALTER TABLE EXACCIONES ADD ID_EPIGRAFE INTEGER;
ALTER TABLE EXACCIONES DROP CONSTRAINT EXACEPIGRAFE; /* si existe */
ALTER TABLE EXACCIONES ADD CONSTRAINT EXACEPIGRAFE 
FOREIGN KEY (ID_EPIGRAFE) REFERENCES EPIGRAFE(ID);

CREATE TABLE NADA(
	NADA INTEGER);
INSERT INTO NADA VALUES(1);

CREATE OR REPLACE TRIGGER T_NADA
BEFORE UPDATE ON NADA
FOR EACH ROW

DECLARE 
   xID INTEGER;
   CURSOR C1 IS SELECT ABONADO,EPIGRAFE,SECCION FROM EXACCIONES;
BEGIN
   FOR v1 IN C1
   LOOP
      begin
         SELECT ID INTO xID FROM EPIGRAFE WHERE EPIGRAFE=v1.EPIGRAFE AND SECCION=v1.SECCION;         
      Exception
         When no_data_found then
            xID:=NULL;
      end;	
      UPDATE EXACCIONES SET ID_EPIGRAFE=xID WHERE ABONADO=v1.ABONADO;
   END LOOP;
END T_NADA;
/

UPDATE NADA SET NADA=0;
DROP TRIGGER T_NADA;

UPDATE AGUA SET EPIGRAFE='0'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=3;
UPDATE AGUA SET EPIGRAFE='00'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=2;
UPDATE AGUA SET EPIGRAFE='000'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=1;

ALTER TABLE AGUA ADD ID_EPIGRAFE INTEGER;
ALTER TABLE AGUA DROP CONSTRAINT AGUAEPIGRAFE; /* si existe */
ALTER TABLE AGUA ADD CONSTRAINT AGUAEPIGRAFE 
FOREIGN KEY (ID_EPIGRAFE) REFERENCES EPIGRAFE(ID);

CREATE OR REPLACE TRIGGER T_NADA
BEFORE UPDATE ON NADA
FOR EACH ROW

DECLARE 
   xID INTEGER;
   CURSOR C1 IS SELECT ID,EPIGRAFE,SECCION FROM AGUA;
BEGIN
   FOR v1 IN C1
   LOOP
      begin
         SELECT ID INTO xID FROM EPIGRAFE WHERE EPIGRAFE=v1.EPIGRAFE AND SECCION=v1.SECCION;         
      Exception
         When no_data_found then
            xID:=NULL;
      end;	
      UPDATE AGUA SET ID_EPIGRAFE=xID WHERE ID=v1.ID;
   END LOOP;
END T_NADA;
/

UPDATE NADA SET NADA=1;
DROP TRIGGER T_NADA;

UPDATE IAE SET SECCION='1' WHERE SECCION='E';
UPDATE IAE SET SECCION='2' WHERE SECCION='P';
UPDATE IAE SET SECCION='3' WHERE SECCION='A';
UPDATE IAE SET EPIGRAFE='0'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=3;
UPDATE IAE SET EPIGRAFE='00'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=2;
UPDATE IAE SET EPIGRAFE='000'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=1;


ALTER TABLE IAE ADD ID_EPIGRAFE INTEGER;
ALTER TABLE IAE ADD CONSTRAINT IAEEPIGRAFE 
FOREIGN KEY (ID_EPIGRAFE) REFERENCES EPIGRAFE(ID);

CREATE OR REPLACE TRIGGER T_NADA
BEFORE UPDATE ON NADA
FOR EACH ROW

DECLARE 
   xID INTEGER;
   CURSOR C1 IS SELECT ID,EPIGRAFE,SECCION FROM IAE;
BEGIN
   FOR v1 IN C1
   LOOP
      begin
         SELECT ID INTO xID FROM EPIGRAFE WHERE EPIGRAFE=v1.EPIGRAFE AND SECCION=v1.SECCION;         
      Exception
         When no_data_found then
            xID:=NULL;
      end;	
      UPDATE IAE SET ID_EPIGRAFE=xID WHERE ID=v1.ID;
   END LOOP;
END T_NADA;
/

UPDATE NADA SET NADA=0;
DROP TRIGGER T_NADA;

UPDATE IAE SET EPIGRAFE='0'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=3;
UPDATE IAE SET EPIGRAFE='00'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=2;
UPDATE IAE SET EPIGRAFE='000'||RTRIM(EPIGRAFE) WHERE LENGTH(RTRIM(EPIGRAFE))=1;

ALTER TABLE RECIBOS_IAE ADD ID_EPIGRAFE INTEGER;
ALTER TABLE RECIBOS_IAE ADD CONSTRAINT IAERECIEPIGRAFE
	FOREIGN KEY (ID_EPIGRAFE)
	REFERENCES EPIGRAFE(ID);

CREATE OR REPLACE TRIGGER T_NADA
BEFORE UPDATE ON NADA
FOR EACH ROW

DECLARE 
   xID INTEGER;
   CURSOR C1 IS SELECT ID,EPIGRAFE,SECCION FROM RECIBOS_IAE;
BEGIN
   FOR v1 IN C1
   LOOP
      begin
         SELECT ID INTO xID FROM EPIGRAFE WHERE EPIGRAFE=v1.EPIGRAFE AND SECCION=v1.SECCION;         
      Exception
         When no_data_found then
            xID:=NULL;
      end;	
      UPDATE RECIBOS_IAE SET ID_EPIGRAFE=xID WHERE ID=v1.ID; 
   END LOOP;
END T_NADA;
/

UPDATE NADA SET NADA=0;
DROP TRIGGER T_NADA;
DROP TABLE NADA;
