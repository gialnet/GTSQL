/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006.
Acción:Comprobar cuantos registros hay en la tabla de lectura del padrón para un ayto y año.
********************************************************************************/

CREATE OR REPLACE PROCEDURE CHECK_EXIT_LECTURARUS(
		xMUNICIPIO  IN CHAR,
      xYEAR 	 	IN CHAR,       
      xCUANTOS  	OUT INTEGER)
AS
BEGIN
   SELECT COUNT(*) INTO xCUANTOS
   FROM TMP_PADRONES_IBI WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR and CLASE_IBI='RU';
END;
/


/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: Procedimiento de selección de información para la impresión de consultas
Parámetros:	xMUNICIPIO: código del municipio cuya información se está consultando.
				xTIPO_LISTADO: tipo de información que se quiere obtener
				Valores para xTIPO_LISTADO: 
					1: Altas nuevas con respecto al padrón del año anterior 		
					2:	Comparación con la información del año anterior
					Si los tipos de variación son CONT o EV01 tendremos que comparar sólo con 
					los registros que tuvieron variación (tupla en HIS_CARGOREAL_RUS)
********************************************************************************/
CREATE OR REPLACE PROCEDURE IMPRIME_LISTADOS_RUS(
				xMUNICIPIO 			IN	CHAR,
				xYEAR					IN CHAR,
				xTIPO_LISTADO 		IN INTEGER,
				xCLASE_ALTERACION	IN	CHAR)				
AS
	TYPE tCURSOR IS REF CURSOR;  -- define REF CURSOR type 
   vCURSOR    	 	tCURSOR;     -- declare cursor variable 
   vSentencia		VARCHAR2(2000);
   vRUS				tmp_padrones_ibi%ROWTYPE;
   vCOMP				tmp_listados_ibi_comp%ROWTYPE;
   XID 				INTEGER;
   xCONTADOR		INTEGER;
   xVARIACION 		CHAR(1);
   xCONTINUAR		BOOLEAN DEFAULT TRUE;
BEGIN

	DELETE FROM TMP_LISTADOS_IBI WHERE USUARIO=USER;
	DELETE FROM TMP_LISTADOS_IBI_COMP WHERE USUARIO=USER;

	--Asignamos valor a vSentencia teniendo en cuenta el tipo de listado que se quiere obtener
	IF (xTIPO_LISTADO=1)  THEN   --altas nuevas con respecto al padrón del año anterior
		vSentencia:='SELECT * FROM TMP_PADRONES_IBI WHERE COD_MUNICIPIO=:xMUNICIPIO AND CLASE_IBI=''RU''';
	
		--Asignar consulta a cursor, abrirlo y recorrerlo 
    	OPEN vCURSOR FOR vSENTENCIA USING xMUNICIPIO;
    	LOOP
			FETCH vCURSOR INTO vRUS;
   	   		EXIT WHEN vCURSOR%NOTFOUND;
   	   		
   	   		BEGIN
   	   			SELECT ID INTO XID 
   	   			FROM RUS_PARCELAS 
   	   			WHERE MUNICIPIO=vRUS.COD_MUNICIPIO AND YEAR=vRUS.YEAR_PADRON-1 AND
   	   				  RC_NUM_PARCELA=vRUS.RC_NUM_PARCELA AND
   	   				  RC_NUM_SECUENCIAL=vRUS.RC_NUM_SECUENCIAL;
   	   			EXCEPTION
   	   				WHEN NO_DATA_FOUND THEN

						INSERT INTO TMP_Listados_IBI (COD_DELEGACION,COD_MUNICIPIO,CLASE_IBI,RC_NUM_PARCELA,
								RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,RC_SEGUNDO_CONTROL,RC_NUM_FIJO,IDENTIFICACION_IBI,
								COD_PROVINCIA,NOMBRE_PROVINCIA,COD_MUNICIPIO_DGC,COD_MUNICIPIO_INE,NOMBRE_MUNICIPIO,
								NOMBRE_ENTIDAD_MENOR,COD_VIA_PUBLICA,TIPO_VIA,NOMBRE_VIA,PRIMER_NUMERO,PRIMERA_LETRA,
								SEGUNDO_NUMERO,SEGUNDA_LETRA,KILOMETRO,BLOQUE,ESCALERA,PLANTA,PUERTA,TEXTO_DIRECCION,
								CODIGO_POSTAL,DISTRITO_MUNICIPAL,COD_MUNICIPIO_AGRAGACION,COD_ZONA,COD_POLIGONO,COD_PARCELA,
								NOMBRE_PARAJE,YEAR_PADRON,VALOR_CATASTRAL,VC_SUELO,VC_CONSTRUCCION,BASE_LIQUIDABLE,CLAVE_USO,
								VC_BONIFICADO,CLAVE_BONIFICACION,SUPERFICIE_CONSTRUIDA,SUPERFICIE_SUELO,
								COEFICIENTE_PROPIEDAD,VALOR_BASE,COD_VALOR_BASE,YEAR_EFECTOS_VC,VC_EFECTOS_IBI,YEAR_REVISION,
								YEAR_REVISION_PARCIAL,PERIODO_VIGENCIA,COD_DERECHO,NUMERO_TITULARES,TIPO_TITULARES,
								COMPLEMENTO_TITULARIDAD,NIF,NOMBRE,CLAVE_IDENTIFICACION,COD_PROVINCIA_FISCAL,
								NOMBRE_PROVINCIA_FISCAL,COD_MUNICIPIO_DGC_FISCAL,COD_MUNICIPIO_INE_FISCAL,
								NOMBRE_MUNICIPIO_FISCAL,NOMBRE_ENTIDAD_MENOR_FISCAL,COD_VIA_PUBLICA_FISCAL,TIPO_VIA_FISCAL,
								NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,PRIMERA_LETRA_FISCAL,SEGUNDO_NUMERO_FISCAL,
								SEGUNDA_LETRA_FISCAL,KILOMETRO_FISCAL,BLOQUE_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,
								PUERTA_FISCAL,TEXTO_DIRECCION_FISCAL,CODIGO_POSTAL_FISCAL,APARTADO_CORREOS_FISCAL,     
								NIF_CONYUGE,NOMBRE_CONYUGE,CLASE_ALTERACION,TIPO_EXPEDIENTE,FECHA_ALTERACION,
								YEAR_EXPEDIENTE,REFERENCIA_EXPEDIENTE,YEAR_EXPEDIENTE_EC,REFERENCIA_EXPEDIENTE_EC,
								COD_ENTIDAD_COLABORADORA,CARGADO,F_GRABACION)    
     					VALUES (vRUS.COD_DELEGACION,vRUS.COD_MUNICIPIO,vRUS.CLASE_IBI,vRUS.RC_NUM_PARCELA,
     							vRUS.RC_NUM_SECUENCIAL,vRUS.RC_PRIMER_CONTROL,vRUS.RC_SEGUNDO_CONTROL,vRUS.RC_NUM_FIJO,
     							vRUS.IDENTIFICACION_IBI,vRUS.COD_PROVINCIA,vRUS.NOMBRE_PROVINCIA,vRUS.COD_MUNICIPIO_DGC,
     							vRUS.COD_MUNICIPIO_INE,vRUS.NOMBRE_MUNICIPIO,vRUS.NOMBRE_ENTIDAD_MENOR,vRUS.COD_VIA_PUBLICA,
     							vRUS.TIPO_VIA,vRUS.NOMBRE_VIA,vRUS.PRIMER_NUMERO,vRUS.PRIMERA_LETRA,vRUS.SEGUNDO_NUMERO,
     							vRUS.SEGUNDA_LETRA,vRUS.KILOMETRO,vRUS.BLOQUE,vRUS.ESCALERA,vRUS.PLANTA,vRUS.PUERTA,
     							vRUS.TEXTO_DIRECCION,vRUS.CODIGO_POSTAL,vRUS.DISTRITO_MUNICIPAL,
     							vRUS.COD_MUNICIPIO_AGRAGACION,vRUS.COD_ZONA,vRUS.COD_POLIGONO,vRUS.COD_PARCELA,
     							vRUS.NOMBRE_PARAJE,vRUS.YEAR_PADRON,vRUS.VALOR_CATASTRAL,vRUS.VC_SUELO,vRUS.VC_CONSTRUCCION,
     							vRUS.BASE_LIQUIDABLE,vRUS.CLAVE_USO,vRUS.VC_BONIFICADO,vRUS.CLAVE_BONIFICACION,
     							vRUS.SUPERFICIE_CONSTRUIDA,vRUS.SUPERFICIE_SUELO,vRUS.COEFICIENTE_PROPIEDAD,vRUS.VALOR_BASE,
     							vRUS.COD_VALOR_BASE,vRUS.YEAR_EFECTOS_VC,vRUS.VC_EFECTOS_IBI,vRUS.YEAR_REVISION,
     							vRUS.YEAR_REVISION_PARCIAL,vRUS.PERIODO_VIGENCIA,vRUS.COD_DERECHO,vRUS.NUMERO_TITULARES,
     							vRUS.TIPO_TITULARES,vRUS.COMPLEMENTO_TITULARIDAD,vRUS.NIF,vRUS.NOMBRE,
     							vRUS.CLAVE_IDENTIFICACION,vRUS.COD_PROVINCIA_FISCAL,vRUS.NOMBRE_PROVINCIA_FISCAL,
     							vRUS.COD_MUNICIPIO_DGC_FISCAL,vRUS.COD_MUNICIPIO_INE_FISCAL,vRUS.NOMBRE_MUNICIPIO_FISCAL,
     							vRUS.NOMBRE_ENTIDAD_MENOR_FISCAL,vRUS.COD_VIA_PUBLICA_FISCAL,vRUS.TIPO_VIA_FISCAL,
     							vRUS.NOMBRE_VIA_FISCAL,vRUS.PRIMER_NUMERO_FISCAL,vRUS.PRIMERA_LETRA_FISCAL,
     							vRUS.SEGUNDO_NUMERO_FISCAL,vRUS.SEGUNDA_LETRA_FISCAL,vRUS.KILOMETRO_FISCAL,
     							vRUS.BLOQUE_FISCAL,vRUS.ESCALERA_FISCAL,vRUS.PLANTA_FISCAL,vRUS.PUERTA_FISCAL,
     							vRUS.TEXTO_DIRECCION_FISCAL,vRUS.CODIGO_POSTAL_FISCAL,vRUS.APARTADO_CORREOS_FISCAL,
     							vRUS.NIF_CONYUGE,vRUS.NOMBRE_CONYUGE,vRUS.CLASE_ALTERACION,vRUS.TIPO_EXPEDIENTE,
     							vRUS.FECHA_ALTERACION,vRUS.YEAR_EXPEDIENTE,vRUS.REFERENCIA_EXPEDIENTE,
     							vRUS.YEAR_EXPEDIENTE_EC,vRUS.REFERENCIA_EXPEDIENTE_EC,vRUS.COD_ENTIDAD_COLABORADORA,
     							vRUS.CARGADO,vRUS.F_GRABACION);   		
     		END;
    	END LOOP;
		CLOSE vCURSOR;
	
	ELSIF (xTIPO_LISTADO=2) THEN
		vSentencia:='SELECT USER,p.rc_num_parcela,p.rc_num_secuencial,p.rc_primer_control,p.rc_segundo_control,p.nif,p.nombre,'||
			'trim(trim(p.tipo_via_fiscal)||'' ''||trim(p.nombre_via_fiscal)||'' ''||trim(p.primer_numero_fiscal)||'' ''||'||
			'trim(p.escalera_fiscal)||'' ''||trim(p.planta_fiscal)||'' ''||trim(p.puerta_fiscal)) AS DIRECCION_FISCAL,'||
			'p.valor_catastral,p.base_liquidable,r.nif AS BD_NIF,r.nombre AS BD_NOMBRE,'||
			'trim(trim(r.tipo_via_fiscal)||'' ''||trim(r.nombre_via_fiscal)||'' ''||'||
			'trim(r.primer_numero_fiscal)||'' ''||trim(r.escalera_fiscal)||'' ''||trim(r.planta_fiscal)||'' ''||'||
			'trim(r.puerta_fiscal)) AS BD_DIRECCION_FISCAL,NULL AS BD_VALOR_CATASTRAL,'||
			'NULL AS BD_BASE_LIQUIDABLE '||
			'FROM tmp_padrones_ibi p, rus_titulares r, rus_parcelas a '||
			'WHERE p.cod_municipio=r.municipio AND r.id=a.abonado and p.cod_municipio=:xMUNICIPIO '|| 
			'AND p.year_padron=:xYEAR AND r.YEAR=p.year_padron-1 AND p.rc_num_parcela=a.rc_num_parcela AND '||
			'p.rc_num_secuencial=a.rc_num_secuencial AND p.CLASE_ALTERACION=:xCLASE_ALTERACION AND p.CLASE_IBI=''RU'' ';
		IF (xCLASE_ALTERACION='CONT') THEN
			vSentencia:=vSentencia||			
			'AND (r.nif<>p.nif OR r.nombre<>p.nombre OR trim(trim(p.tipo_via_fiscal)||'' ''||trim(p.nombre_via_fiscal)'||
			'||'' ''||trim(p.primer_numero_fiscal)||'' ''||trim(p.escalera_fiscal)||'' ''||trim(p.planta_fiscal)'||
			'||'' ''||trim(p.puerta_fiscal))<>trim(trim(r.tipo_via_fiscal)||'' ''||trim(r.nombre_via_fiscal)'||
			'||'' ''||trim(r.primer_numero_fiscal)||'' ''||trim(r.escalera_fiscal)||'' ''||trim(r.planta_fiscal)'||
			'||'' ''||trim(r.puerta_fiscal))) ';
		END IF;
		
		--Asignar consulta a cursor, abrirlo y recorrerlo 
    	OPEN vCURSOR FOR vSENTENCIA USING xMUNICIPIO,xYEAR,xCLASE_ALTERACION;
    	LOOP
			FETCH vCURSOR INTO vCOMP;
   	   EXIT WHEN vCURSOR%NOTFOUND;   	   
   	   		
   	   -- para los tipos de variación CONT y EV01
   	   -- sólo nos interesan las referencias con alguna variación.
   	   -- para ello consultaremos la tabla REFERENCIAS_BANCOS.
   	   IF ((xCLASE_ALTERACION='CONT') OR (xCLASE_ALTERACION='EV01')) THEN
   	   	xCONTINUAR:=FALSE;   	   	
   	   	SELECT COUNT(*) INTO xCONTADOR FROM HIS_CARGOREAL_RUS
   	   	WHERE IDRUSTIT IN 
   	   		(SELECT R.ID FROM RUS_TITULARES R JOIN RUS_PARCELAS P ON R.ID=P.ABONADO
					AND P.RC_NUM_PARCELA||P.RC_NUM_SECUENCIAL||P.RC_PRIMER_CONTROL||P.RC_SEGUNDO_CONTROL=
					vCOMP.RC_NUM_PARCELA||vCOMP.RC_NUM_SECUENCIAL||vCOMP.RC_PRIMER_CONTROL||
   	   		vCOMP.RC_SEGUNDO_CONTROL AND R.MUNICIPIO=xMUNICIPIO);   	   		
   	   	IF (xCONTADOR>0) THEN
   	   		xVARIACION:='S';
   	   	ELSE
   	   		xVARIACION:='N';
   	   	END IF;
   	   END IF;
   	   		
   	   IF ((xVARIACION='S') OR (xCONTINUAR=TRUE)) THEN
   	   	INSERT INTO TMP_LISTADOS_IBI_COMP(
					RC_NUM_PARCELA,RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,RC_SEGUNDO_CONTROL,NIF,
					NOMBRE,DIRECCION_FISCAL,BD_NIF,BD_NOMBRE,BD_DIRECCION_FISCAL,VALOR_CATASTRAL,
					BASE_LIQUIDABLE,BD_VALOR_CATASTRAL,BD_BASE_LIQUIDABLE) 
				VALUES(
					vCOMP.RC_NUM_PARCELA,vCOMP.RC_NUM_SECUENCIAL,vCOMP.RC_PRIMER_CONTROL,vCOMP.RC_SEGUNDO_CONTROL,
					vCOMP.NIF,vCOMP.NOMBRE,vCOMP.DIRECCION_FISCAL,vCOMP.BD_NIF,vCOMP.BD_NOMBRE,
					vCOMP.BD_DIRECCION_FISCAL,vCOMP.VALOR_CATASTRAL,vCOMP.BASE_LIQUIDABLE,vCOMP.BD_VALOR_CATASTRAL,
					vCOMP.BD_BASE_LIQUIDABLE);
   	   END IF;   	   		
   	   		
   	END LOOP;
   	CLOSE vCURSOR;
	END IF;	

END;
/

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: Procedimiento de carga individual de información de titularidad
		  Parámetro adicional a la información de disco: xTIPO_CARGA: Indicará si se ha de considerar la
		  información del parámetro xCLASE_ALTERACION para la carga de la información de titularidad o no
		  Si xTIPO_CARGA=0, no considerar xCLASE_ALTERACION; si xTIPO_CARGA=1, considerar el parámetro.

MODIFICACION: 05/02/2007. Lucas Fernández Pérez. Nuevos parametros bloque-portal en la llamada a InsertaModiContribuyente.

********************************************************************************/
CREATE OR REPLACE PROCEDURE INSERTA_REGISTRO_RUSTIT	
	(xMUNICIPIO 					IN CHAR, 
   xYEAR								IN CHAR, 
   xTIPO_CARGA						IN INTEGER,      
   xCLASE_ALTERACION				IN	CHAR,
	xNIF								IN CHAR,
	xNOMBRE							IN VARCHAR2,
	xCLAVE_IDENTIFICACION		IN CHAR,
	xCOD_PROVINCIA_FISCAL		IN CHAR,
	xNOMBRE_PROVINCIA_FISCAL	IN VARCHAR2,
	xCOD_MUNICIPIO_DGC_FISCAL	IN CHAR,
	xCOD_MUNICIPIO_INE_FISCAL	IN CHAR,
	xNOMBRE_MUNICIPIO_FISCAL	IN VARCHAR2,
	xNOMBRE_ENTIDAD_MENOR_FISCAL	IN VARCHAR2,
	xCOD_VIA_PUBLICA_FISCAL		IN CHAR,
	xTIPO_VIA_FISCAL				IN CHAR,
	xNOMBRE_VIA_FISCAL			IN VARCHAR2,
	xPRIMER_NUMERO_FISCAL		IN CHAR,
	xPRIMERA_LETRA_FISCAL		IN CHAR,
	xSEGUNDO_NUMERO_FISCAL		IN CHAR,
	xSEGUNDA_LETRA_FISCAL		IN CHAR,
	xKILOMETRO_FISCAL				IN CHAR,
	xBLOQUE_FISCAL					IN CHAR,
	xESCALERA_FISCAL				IN CHAR,
	xPLANTA_FISCAL					IN CHAR,
	xPUERTA_FISCAL					IN CHAR,
	xTEXTO_DIRECCION_FISCAL		IN VARCHAR2,
	xCOD_POSTAL_FISCAL			IN CHAR,
	xAPARTADO_CORREOS_FISCAL	IN CHAR,
	xNIF_CONYUGE					IN CHAR,
	xNOMBRE_CONYUGE				IN VARCHAR2,
	xID								OUT INTEGER)
AS
	xNIF_old 						char(9);
	xNOMBRE_old 					VARCHAR2(60);
	xTIPO_VIA_FISCAL_old			CHAR(5);
	xNOMBRE_VIA_FISCAL_old		VARCHAR2(25);
	xPRIMER_NUMERO_FISCAL_old	CHAR(4);	
	xESCALERA_FISCAL_old			CHAR(2);
	xPLANTA_FISCAL_old			CHAR(3);
	xPUERTA_FISCAL_old			CHAR(3);
	xCOD_POSTAL_FISCAL_old		CHAR(5);
	xNOMBRE_MUNICIPIO_FISCAL_old	VARCHAR2(40);
	xNOMBRE_PROVINCIA_FISCAL_old	VARCHAR2(25);
	xPAIS_OLD						VARCHAR2(25);
	
	mNIF								CHAR(10);
	mNOMBRE							VARCHAR2(60);
	mTIPO_VIA_FISCAL				CHAR(5);
	mNOMBRE_VIA_FISCAL			VARCHAR2(25);			
	mPRIMER_NUMERO_FISCAL		CHAR(4);	
	mESCALERA_FISCAL				CHAR(2);
	mPLANTA_FISCAL					CHAR(3);
	mPUERTA_FISCAL					CHAR(3);
	mCOD_POSTAL_FISCAL			CHAR(5);
	mNOMBRE_MUNICIPIO_FISCAL	VARCHAR2(40);
	mNOMBRE_PROVINCIA_FISCAL	VARCHAR2(25);
	mPAIS								VARCHAR2(25);
	
	xDOMICILIADO               CHAR(1);
	xENTIDAD                   CHAR(4);
	xSUCURSAL                  CHAR(4);
	xDC                        CHAR(2);
	xCUENTA                    CHAR(10);
	xF_DOMICILIACION				DATE;
	xDNI_TITULAR               CHAR(10);

	xREPRESENTANTE					CHAR(10);
	xIDDOMIALTER					INTEGER;
	xCOTITULARES					CHAR(1);
	
	xIDRUS_TIT						INTEGER;	
	xVARIACION						CHAR(1) DEFAULT 'N';
	xCORREGIDOS						CHAR(1);	
BEGIN

	--inicializamos la información de titularidad a cargar con la información de cinta
	mNIF:=xNIF;
	mNOMBRE:=xNOMBRE;	
	mTIPO_VIA_FISCAL:=xTIPO_VIA_FISCAL;
   mNOMBRE_VIA_FISCAL:=xNOMBRE_VIA_FISCAL;
	mPRIMER_NUMERO_FISCAL:=xPRIMER_NUMERO_FISCAL;
	mESCALERA_FISCAL:=xESCALERA_FISCAL;
	mPLANTA_FISCAL:=xPLANTA_FISCAL;
	mPUERTA_FISCAL:=xPUERTA_FISCAL;
	mCOD_POSTAL_FISCAL:=xCOD_POSTAL_FISCAL;
	mNOMBRE_MUNICIPIO_FISCAL:=xNOMBRE_MUNICIPIO_FISCAL;
	mNOMBRE_PROVINCIA_FISCAL:=xNOMBRE_PROVINCIA_FISCAL;
	mPAIS:='ESPAÑA'; --por defecto, ya que esta información no viene en cinta.
				
	-- Tendremos que averiguar si ha habido alguna variación del registro que
   -- queremos insertar en años anteriores. Para ello hacemos uso de la tabla
   -- HIS_CARGOREAL_RUS.
	SELECT MAX(IDRUSTIT) INTO xIDRUS_TIT
	FROM HIS_CARGOREAL_RUS
	WHERE AYTO=xMUNICIPIO AND ((NIF_OLD=xNIF) OR (CLAVE_IDENTIFICACION=xCLAVE_IDENTIFICACION)) AND TIPO_VARIACION='M'
			AND ULTIMA_VARIACION='N';

	IF xIDRUS_TIT IS NULL THEN	
		xVARIACION:='N';
	ELSE
		xVARIACION:='S';
	END IF;        

	IF xVARIACION='S' THEN
		SELECT NIF_NEW INTO mNIF FROM HIS_CARGOREAL_RUS WHERE IDRUSTIT=xIDRUS_TIT AND 
		FECHA=(SELECT MAX(FECHA) FROM HIS_CARGOREAL_RUS WHERE IDRUSTIT=xIDRUS_TIT);	
	END IF;									
	
	--recogemos información de la cinta del año anterior   
   SELECT MAX(ID) INTO xIDRUS_TIT FROM RUS_TITULARES
	WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR-1 AND 
			(
			((NIF=mNIF) AND (CLAVE_IDENTIFICACION='00000000')) --identificación por nif 
			OR 
			((NIF IS NULL) AND (CLAVE_IDENTIFICACION=xCLAVE_IDENTIFICACION)) --nif sigue a null
			OR
			((NIF=mNIF) AND (CLAVE_IDENTIFICACION=xCLAVE_IDENTIFICACION)) --nif anterior a null
			);	
   
	IF (xIDRUS_TIT IS NOT NULL) THEN   			
		SELECT DOMICILIADO,ENTIDAD,SUCURSAL,DC,CUENTA,F_DOMICILIACION,DNI_TITULAR,
			 	REPRESENTANTE,IDDOMIALTER,COTITULARES,NIF,NOMBRE,TIPO_VIA_FISCAL,
			 	NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,
			 	PUERTA_FISCAL,CODIGO_POSTAL_FISCAL,NOMBRE_MUNICIPIO_FISCAL,
			 	NOMBRE_PROVINCIA_FISCAL,PAIS
	  	INTO xDOMICILIADO,xENTIDAD,xSUCURSAL,xDC,xCUENTA,xF_DOMICILIACION,xDNI_TITULAR,
			 	xREPRESENTANTE,xIDDOMIALTER,xCOTITULARES,xNIF_old,xNOMBRE_old,xTIPO_VIA_FISCAL_old,
			 	xNOMBRE_VIA_FISCAL_old,xPRIMER_NUMERO_FISCAL_old,xESCALERA_FISCAL_old,xPLANTA_FISCAL_old,
			 	xPUERTA_FISCAL_old,xCOD_POSTAL_FISCAL_old,xNOMBRE_MUNICIPIO_FISCAL_old,xNOMBRE_PROVINCIA_FISCAL_old,
			 	xPAIS_OLD
		FROM RUS_TITULARES
		WHERE ID=xIDRUS_TIT;
	ELSE		
		xDOMICILIADO:=NULL;
		xENTIDAD:=NULL;
		xSUCURSAL:=NULL;
		xDC:=NULL;
		xCUENTA:=NULL;
		xF_DOMICILIACION:=NULL;
		xDNI_TITULAR:=NULL;
		xREPRESENTANTE:=NULL;
		xIDDOMIALTER:=NULL;
		xCOTITULARES:='N';
		xNIF_old:=NULL;
		xNOMBRE_old:=NULL;
		xTIPO_VIA_FISCAL_old:=NULL;
		xNOMBRE_VIA_FISCAL_old:=NULL;
		xPRIMER_NUMERO_FISCAL_old:=NULL;				
		xESCALERA_FISCAL_old:=NULL;
		xPLANTA_FISCAL_old:=NULL;
		xPUERTA_FISCAL_old:=NULL;
		xCOD_POSTAL_FISCAL_old:=NULL;
		xNOMBRE_MUNICIPIO_FISCAL_old:=NULL;
		xNOMBRE_PROVINCIA_FISCAL_old:=NULL;
		xPAIS_old:=NULL;			      	
	END IF;								
   			
   IF ( (xTIPO_CARGA=0) OR ((xTIPO_CARGA=1) AND ((xCLASE_ALTERACION='CONT') OR (xCLASE_ALTERACION='EV01'))) ) THEN
   
   	IF (xVARIACION='S') THEN   	
   		-- antes de hacer el cambio comprobaremos si los datos que vienen en la Cinta de
 	  		-- Hacienda este año vienen ya corregidos o no.
			IF (xNIF=xNIF_old AND xNOMBRE=xNOMBRE_old AND xTIPO_VIA_FISCAL=xTIPO_VIA_FISCAL_old AND
	   		xNOMBRE_VIA_FISCAL=xNOMBRE_VIA_FISCAL_old AND xPRIMER_NUMERO_FISCAL=xPRIMER_NUMERO_FISCAL_old AND	   			    		 			
	   		xESCALERA_FISCAL=xESCALERA_FISCAL_old AND xPLANTA_FISCAL=xPLANTA_FISCAL_old AND
      		xPUERTA_FISCAL=xPUERTA_FISCAL_old AND xCOD_POSTAL_FISCAL=xCOD_POSTAL_FISCAL_old AND
	   		xNOMBRE_MUNICIPIO_FISCAL=xNOMBRE_MUNICIPIO_FISCAL_old AND 
	   		xNOMBRE_PROVINCIA_FISCAL=xNOMBRE_PROVINCIA_FISCAL_old) THEN

      		-- Si los datos están corregidos lo indicamos en la tabla HIS_CARGOREAL_RUS
	   		-- modificando el valor de ULTIMA_VARIACION='S' para que el año siguiente no tenga que
	   		-- hacer comprobaciones innecesarias.
	   		xCORREGIDOS:='S';
	   		UPDATE HIS_CARGOREAL_RUS SET ULTIMA_VARIACION='S' WHERE IDRUSTIT=xIDRUS_TIT;
    		ELSE
	   		xCORREGIDOS:='N';
	   		mNIF:=xNIF_old;
	   		mNOMBRE:=xNOMBRE_old;
	   		mTIPO_VIA_FISCAL:=xTIPO_VIA_FISCAL_old;
	   		mNOMBRE_VIA_FISCAL:=xNOMBRE_VIA_FISCAL_old;
	   		mPRIMER_NUMERO_FISCAL:=xPRIMER_NUMERO_FISCAL_old;	   			   		
	   		mESCALERA_FISCAL:=xESCALERA_FISCAL_old;
	   		mPLANTA_FISCAL:=xPLANTA_FISCAL_old;
	   		mPUERTA_FISCAL:=xPUERTA_FISCAL_old;
	   		mCOD_POSTAL_FISCAL:=xCOD_POSTAL_FISCAL_old;
	   		mNOMBRE_MUNICIPIO_FISCAL:=xNOMBRE_MUNICIPIO_FISCAL_old;
	   		mNOMBRE_PROVINCIA_FISCAL:=xNOMBRE_PROVINCIA_FISCAL_old;	   					
	   		mPAIS:=xPAIS_old;	   			   		
   		END IF;
   	END IF;				
   			
   -- en este caso hay que cargar lo que viene de Catastro
   ELSIF ( (xTIPO_CARGA=1) AND ((xCLASE_ALTERACION='EV03') OR (xCLASE_ALTERACION='EN01')) ) THEN
		
   	--Anular la domiciliación si verdaderamente cambia el NIF con respecto al año anterior, ya
   	--que el cambio de titularidad se puede deber a la incorporación de un titular, por ejemplo.
   	
   	IF (mNIF<>xNIF_OLD) THEN
			xDOMICILIADO:=NULL;   		
   	END IF;
   
	   xCORREGIDOS:= 'N'; --indicamos que 'N' para que realice un apunte en el histórico de cambios de RUSTICA. 
	   						 --De esta manera indicamos la rectificación que ha realizado catastro 
	   						 --con respecto a la información del año anterior					
	END IF;
	
	InsertaModiContribuyente(mNIF,substr(mNOMBRE,1,40),substr(mTIPO_VIA_FISCAL,1,2),mNOMBRE_VIA_FISCAL,
			mPRIMER_NUMERO_FISCAL,'','',mESCALERA_FISCAL,mPLANTA_FISCAL,substr(mPUERTA_FISCAL,1,2),
			SUBSTR(mNOMBRE_MUNICIPIO_FISCAL,1,25),mNOMBRE_PROVINCIA_FISCAL,mCOD_POSTAL_FISCAL,mPAIS);		

	IF (xDOMICILIADO IS NULL) THEN
   	xDOMICILIADO:='N';
		xSUCURSAL:=NULL;
		xDC:=NULL;
		xCUENTA:=NULL;
		xF_DOMICILIACION:=NULL;
		xDNI_TITULAR:=NULL;
	END IF;		
	
	INSERT INTO RUS_TITULARES
		(MUNICIPIO,YEAR,NIF,NOMBRE,CLAVE_IDENTIFICACION,COD_PROVINCIA_FISCAL,NOMBRE_PROVINCIA_FISCAL,
		COD_MUNICIPIO_DGC_FISCAL,COD_MUNICIPIO_INE_FISCAL,NOMBRE_MUNICIPIO_FISCAL,NOMBRE_ENTIDAD_MENOR_FISCAL,
		COD_VIA_PUBLICA_FISCAL,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,PRIMERA_LETRA_FISCAL,
		SEGUNDO_NUMERO_FISCAL,SEGUNDA_LETRA_FISCAL,KILOMETRO_FISCAL,BLOQUE_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,
		PUERTA_FISCAL,TEXTO_DIRECCION_FISCAL,CODIGO_POSTAL_FISCAL,APARTADO_CORREOS_FISCAL,PAIS,
		--Datos del cónyuge
		NIF_CONYUGE,NOMBRE_CONYUGE,
		--Datos para la domiciliación
		DOMICILIADO,ENTIDAD,SUCURSAL,DC,CUENTA,F_DOMICILIACION,DNI_TITULAR,
		--Otros
		COTITULARES,IDDOMIALTER,REPRESENTANTE)
	VALUES
		(xMUNICIPIO,xYEAR,mNIF,mNOMBRE,xCLAVE_IDENTIFICACION,xCOD_PROVINCIA_FISCAL,mNOMBRE_PROVINCIA_FISCAL,
		xCOD_MUNICIPIO_DGC_FISCAL,xCOD_MUNICIPIO_INE_FISCAL,mNOMBRE_MUNICIPIO_FISCAL,xNOMBRE_ENTIDAD_MENOR_FISCAL,
		xCOD_VIA_PUBLICA_FISCAL,mTIPO_VIA_FISCAL,mNOMBRE_VIA_FISCAL,mPRIMER_NUMERO_FISCAL,xPRIMERA_LETRA_FISCAL,
		xSEGUNDO_NUMERO_FISCAL,xSEGUNDA_LETRA_FISCAL,xKILOMETRO_FISCAL,xBLOQUE_FISCAL,mESCALERA_FISCAL,mPLANTA_FISCAL,
		mPUERTA_FISCAL,xTEXTO_DIRECCION_FISCAL,mCOD_POSTAL_FISCAL,xAPARTADO_CORREOS_FISCAL,mPAIS,
		--Datos del cónyuge
		xNIF_CONYUGE,xNOMBRE_CONYUGE,
		--Datos para la domiciliación
		xDOMICILIADO,xENTIDAD,xSUCURSAL,xDC,xCUENTA,xF_DOMICILIACION,xDNI_TITULAR,
		--Otros
		xCOTITULARES,xIDDOMIALTER,xREPRESENTANTE)
	RETURNING ID INTO xID;	
	
	IF (xCORREGIDOS='N') THEN
	  	-- si NO vienen los datos corregidos en la cinta de este año, insertamos una nueva tupla
	   -- de variaciones, indicando que la ha generado el programa automáticamente.
	   INSERT INTO HIS_CARGOREAL_RUS
			(IDRUSTIT,AYTO,TIPO_VARIACION,NIF_NEW,NIF_OLD,CLAVE_IDENTIFICACION,NOMBRE,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,
			PRIMER_NUMERO_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,COD_POSTAL_FISCAL,MUNICIPIO_FISCAL,
			PROVINCIA,PAIS,MOTIVO)
	   VALUES
			(xID,xMUNICIPIO,'A',mNIF,xNIF,xCLAVE_IDENTIFICACION,xNOMBRE,xTIPO_VIA_FISCAL,xNOMBRE_VIA_FISCAL,
		   xPRIMER_NUMERO_FISCAL,xESCALERA_FISCAL,xPLANTA_FISCAL,xPUERTA_FISCAL,
	      xCOD_POSTAL_FISCAL,xNOMBRE_MUNICIPIO_FISCAL,xNOMBRE_PROVINCIA_FISCAL,'',
	      'INFORMACIÓN DE CATASTRO NO ACTUALIZADA');
	END IF;

END;
/	

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: Procedimiento de carga individual de las parcelas asociadas a un contribuyente
********************************************************************************/
create or replace procedure INSERTA_REGISTRO_RUS
	(xMUNICIPIO 					IN CHAR, 
   xYEAR								IN CHAR, 
   xABONADO							IN INTEGER,
   xCOD_DELEGACION				IN CHAR,
   xCOD_MUNICIPIO					IN CHAR,
   xRC_NUM_PARCELA				IN CHAR,
	xRC_NUM_SECUENCIAL			IN CHAR,
	xRC_PRIMER_CONTROL			IN CHAR,
	xRC_SEGUNDO_CONTROL			IN CHAR,
	xCOD_PROVINCIA					IN CHAR,
	xNOMBRE_PROVINCIA				IN VARCHAR2,
	xCOD_MUNICIPIO_DGC			IN CHAR,
	xCOD_MUNICIPIO_INE			IN CHAR,
	xNOMBRE_MUNICIPIO				IN VARCHAR2,
	xNOMBRE_ENTIDAD_MENOR		IN VARCHAR2,
	xCOD_MUNICIPIO_ORIGEN		IN CHAR,
	xCOD_ZONA						IN CHAR,
	xCOD_POLIGONO					IN CHAR,
	xCOD_PARCELA					IN CHAR,
	xNOMBRE_PARAJE					IN VARCHAR2,
	xVALOR_CATASTRAL				IN FLOAT,
	xVC_SUELO						IN FLOAT,
	xBASE_LIQUIDABLE				IN FLOAT,
	xVC_BONIFICADO					IN FLOAT,
	xCLAVE_BONIFICACION			IN CHAR,
	xSUPERFICIE_SUELO				IN FLOAT,
	xCOEFICIENTE_PROPIEDAD		IN FLOAT,
	xVALOR_BASE						IN FLOAT,
	xCOD_VALOR_BASE				IN CHAR,
	xYEAR_REVISION					IN CHAR,
	xYEAR_REVISION_PARCIAL		IN CHAR,
	xPERIODO_VIGENCIA				IN INTEGER,
	xCOD_DERECHO					IN CHAR,
	xNUMERO_TITULARES				IN INTEGER,
	xTIPO_TITULARES				IN INTEGER,
	xCOMPLEMENTO_TITULARIDAD	IN VARCHAR2,
	xCLASE_ALTERACION				IN CHAR,
	xTIPO_EXPEDIENTE				IN CHAR,
	xFECHA_ALTERACION				IN DATE,
	xYEAR_EXPEDIENTE				IN CHAR,
	xREFERENCIA_EXPEDIENTE		IN CHAR,
	xYEAR_EXPEDIENTE_EC			IN CHAR,
	xREFERENCIA_EXPEDIENTE_EC	IN CHAR,
	xCOD_ENTIDAD_COLABORADORA	IN CHAR)
AS	
	xID								INTEGER;	
BEGIN	

	--insertamos la informacion de la parcela
	INSERT INTO RUS_PARCELAS(
			ABONADO,MUNICIPIO,YEAR,	
			--Identificación de la parcela
			COD_DELEGACION,COD_MUNICIPIO,RC_NUM_PARCELA,RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,RC_SEGUNDO_CONTROL,
			--Localización
			COD_PROVINCIA,NOMBRE_PROVINCIA,COD_MUNICIPIO_DGC,COD_MUNICIPIO_INE,NOMBRE_MUNICIPIO,NOMBRE_ENTIDAD_MENOR,
			COD_MUNICIPIO_ORIGEN,COD_ZONA,POLIGONO,PARCELA,PARAJE,
			-- Datos Económicos
			VALOR_CATASTRAL,VC_SUELO,BASE_LIQUIDABLE,VC_BONIFICADO,CLAVE_BONIFICACION,SUPERFICIE_SUELO,
			COEFICIENTE_PROPIEDAD,
			-- Datos cálculo Base Liquidable
			VALOR_BASE,COD_VALOR_BASE,YEAR_REVISION,YEAR_REVISION_PARCIAL,PERIODO_VIGENCIA,
			--Información de la titularidad
			COD_DERECHO,NUMERO_TITULARES,TIPO_TITULARES,COMPLEMENTO_TITULARIDAD,
			--Información de la alteración
			CLASE_ALTERACION,TIPO_EXPEDIENTE,FECHA_ALTERACION,YEAR_EXPEDIENTE,REFERENCIA_EXPEDIENTE,YEAR_EXPEDIENTE_EC,
			REFERENCIA_EXPEDIENTE_EC,COD_ENTIDAD_COLABORADORA)
	VALUES(xABONADO,xMUNICIPIO,xYEAR,
			--Identificación de la parcela
			xCOD_DELEGACION,xCOD_MUNICIPIO,xRC_NUM_PARCELA,xRC_NUM_SECUENCIAL,xRC_PRIMER_CONTROL,xRC_SEGUNDO_CONTROL,
			--Localización
			xCOD_PROVINCIA,xNOMBRE_PROVINCIA,xCOD_MUNICIPIO_DGC,xCOD_MUNICIPIO_INE,xNOMBRE_MUNICIPIO,xNOMBRE_ENTIDAD_MENOR,
			xCOD_MUNICIPIO_ORIGEN,xCOD_ZONA,xCOD_POLIGONO,xCOD_PARCELA,xNOMBRE_PARAJE,
			-- Datos Económicos
			xVALOR_CATASTRAL,xVC_SUELO,xBASE_LIQUIDABLE,xVC_BONIFICADO,xCLAVE_BONIFICACION,xSUPERFICIE_SUELO,
			xCOEFICIENTE_PROPIEDAD,
			-- Datos cálculo Base Liquidable
			xVALOR_BASE,xCOD_VALOR_BASE,xYEAR_REVISION,xYEAR_REVISION_PARCIAL,xPERIODO_VIGENCIA,
			--Información de la titularidad
			xCOD_DERECHO,xNUMERO_TITULARES,xTIPO_TITULARES,xCOMPLEMENTO_TITULARIDAD,
			--Información de la alteración
			xCLASE_ALTERACION,xTIPO_EXPEDIENTE,to_date(xFECHA_ALTERACION),xYEAR_EXPEDIENTE,xREFERENCIA_EXPEDIENTE,
			xYEAR_EXPEDIENTE_EC,xREFERENCIA_EXPEDIENTE_EC,xCOD_ENTIDAD_COLABORADORA			
	) RETURNING ID INTO xID;
	
	-- Asociamos el ID a los titulares de la tabla TMP_TITULARES_IBI
   UPDATE TMP_TITULARES_IBI SET IDIBI=xID 
   WHERE RC_NUM_PARCELA=xRC_NUM_PARCELA AND RC_NUM_SECUENCIAL=xRC_NUM_SECUENCIAL AND 
   		CLASE_IBI='RU' AND COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR;

end;
/

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: Procedimiento de carga del padrón completo
Modificado: 16/06/2006. Agustín León Robles.
		se eliminar varios to_date(to_char(to_date))) por un solo to_date
********************************************************************************/

CREATE OR REPLACE PROCEDURE CARGA_PADRON_RUS (
 	 xMUNICIPIO 			IN CHAR,
 	 xYEAR					IN	CHAR)
AS	
	xTIPO_CARGA INTEGER;
	xIDRUS_TIT INTEGER;
	xNIF CHAR(10);
	xCLAVE_IDENTIFICACION CHAR(10);
	xINSERTAR_TITULAR BOOLEAN;
	CURSOR CNIF IS SELECT NIF FROM TMP_PADRONES_IBI
						WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU' AND CARGADO='N'
						AND NIF IS NOT NULL
						GROUP BY NIF
						ORDER BY NIF;
	CURSOR CCLAVE IS SELECT CLAVE_IDENTIFICACION FROM TMP_PADRONES_IBI
						WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU' AND CARGADO='N'
						AND NIF IS NULL
						GROUP BY CLAVE_IDENTIFICACION
						ORDER BY CLAVE_IDENTIFICACION;
	CURSOR CRUSNIF IS SELECT * FROM TMP_PADRONES_IBI 
						WHERE Cod_Municipio=xMunicipio AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU' AND CARGADO='N' AND
								NIF=xNIF;								
	CURSOR CRUSCLAVE IS SELECT * FROM TMP_PADRONES_IBI 
						WHERE Cod_Municipio=xMunicipio AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU' AND CARGADO='N' AND
								CLAVE_IDENTIFICACION=xCLAVE_IDENTIFICACION;
BEGIN	

	SELECT RUS_CLASE_ALTERACION INTO xTIPO_CARGA FROM DATOSPER WHERE MUNICIPIO=xMUNICIPIO;	

	-- introducimos datos de titular en RUS_TITULARES, así como todas las parcelas asociadas en RUS_PARCELAS
	-- para aquellos registros identificados por NIF
	FOR vNIF IN CNIF 
	LOOP
		xNIF:=vNIF.NIF;	
		xINSERTAR_TITULAR:=TRUE;
		-- insertamos la información de las parcelas asociadas al titular
		-- sólo para el primer registro seleccionado insertamos la información del titular (ha de ser igual para todos)
		FOR vRUS IN CRUSNIF
		LOOP
			--Insertamos información del titular
			IF xINSERTAR_TITULAR THEN
				INSERTA_REGISTRO_RUSTIT	
						(xMUNICIPIO,xYEAR,xTIPO_CARGA,vRUS.CLASE_ALTERACION,vRUS.NIF,vRUS.NOMBRE,vRUS.CLAVE_IDENTIFICACION,
						vRUS.COD_PROVINCIA_FISCAL,vRUS.NOMBRE_PROVINCIA_FISCAL,vRUS.COD_MUNICIPIO_DGC_FISCAL,
						vRUS.COD_MUNICIPIO_INE_FISCAL,vRUS.NOMBRE_MUNICIPIO_FISCAL,vRUS.NOMBRE_ENTIDAD_MENOR_FISCAL,
						vRUS.COD_VIA_PUBLICA_FISCAL,vRUS.TIPO_VIA_FISCAL,vRUS.NOMBRE_VIA_FISCAL,vRUS.PRIMER_NUMERO_FISCAL,
						vRUS.PRIMERA_LETRA_FISCAL,vRUS.SEGUNDO_NUMERO_FISCAL,vRUS.SEGUNDA_LETRA_FISCAL,vRUS.KILOMETRO_FISCAL,
						vRUS.BLOQUE_FISCAL,vRUS.ESCALERA_FISCAL,vRUS.PLANTA_FISCAL,vRUS.PUERTA_FISCAL,
						vRUS.TEXTO_DIRECCION_FISCAL,vRUS.CODIGO_POSTAL_FISCAL,vRUS.APARTADO_CORREOS_FISCAL,vRUS.NIF_CONYUGE,
						vRUS.NOMBRE_CONYUGE,xIDRUS_TIT);
				xINSERTAR_TITULAR:=FALSE;				
			END IF;
			
			--Insertamos información de las parcelas asociadas al titular			
			INSERTA_REGISTRO_RUS(
						xMUNICIPIO,xYEAR,xIDRUS_TIT,vRUS.COD_DELEGACION,vRUS.COD_MUNICIPIO,vRUS.RC_NUM_PARCELA,
						vRUS.RC_NUM_SECUENCIAL,vRUS.RC_PRIMER_CONTROL,vRUS.RC_SEGUNDO_CONTROL,vRUS.COD_PROVINCIA,
						vRUS.NOMBRE_PROVINCIA,vRUS.COD_MUNICIPIO_DGC,vRUS.COD_MUNICIPIO_INE,vRUS.NOMBRE_MUNICIPIO,
						vRUS.NOMBRE_ENTIDAD_MENOR,vRUS.COD_MUNICIPIO_AGRAGACION,vRUS.COD_ZONA,vRUS.COD_POLIGONO,
						vRUS.COD_PARCELA,vRUS.NOMBRE_PARAJE,vRUS.VALOR_CATASTRAL,vRUS.VC_SUELO,vRUS.BASE_LIQUIDABLE,
						vRUS.VC_BONIFICADO,vRUS.CLAVE_BONIFICACION,vRUS.SUPERFICIE_SUELO,vRUS.COEFICIENTE_PROPIEDAD,
						vRUS.VALOR_BASE,vRUS.COD_VALOR_BASE,vRUS.YEAR_REVISION,vRUS.YEAR_REVISION_PARCIAL,
						vRUS.PERIODO_VIGENCIA,vRUS.COD_DERECHO,vRUS.NUMERO_TITULARES,vRUS.TIPO_TITULARES,
						vRUS.COMPLEMENTO_TITULARIDAD,vRUS.CLASE_ALTERACION,vRUS.TIPO_EXPEDIENTE,
						TO_DATE(vRUS.FECHA_ALTERACION,'YYYYMMDD'),
						vRUS.YEAR_EXPEDIENTE,vRUS.REFERENCIA_EXPEDIENTE,vRUS.YEAR_EXPEDIENTE_EC,
						vRUS.REFERENCIA_EXPEDIENTE_EC,vRUS.COD_ENTIDAD_COLABORADORA);					
		END LOOP;					
	END LOOP;
	
	-- introducimos datos de titular en RUS_TITULARES, así como todas las parcelas asociadas en RUS_PARCELAS
	-- para aquellos registros identificados por CLAVE_IDENTIFICACION
	FOR vCLAVE IN CCLAVE
	LOOP
		xCLAVE_IDENTIFICACION:=vCLAVE.CLAVE_IDENTIFICACION;	
		xINSERTAR_TITULAR:=TRUE;
		-- insertamos la información de las parcelas asociadas al titular
		-- sólo para el primer registro seleccionado insertamos la información del titular (ha de ser igual para todos)
		FOR vRUS IN CRUSCLAVE
		LOOP
			--Insertamos información del titular
			IF xINSERTAR_TITULAR THEN
				INSERTA_REGISTRO_RUSTIT	
						(xMUNICIPIO,xYEAR,xTIPO_CARGA,vRUS.CLASE_ALTERACION,vRUS.NIF,vRUS.NOMBRE,vRUS.CLAVE_IDENTIFICACION,
						vRUS.COD_PROVINCIA_FISCAL,vRUS.NOMBRE_PROVINCIA_FISCAL,vRUS.COD_MUNICIPIO_DGC_FISCAL,
						vRUS.COD_MUNICIPIO_INE_FISCAL,vRUS.NOMBRE_MUNICIPIO_FISCAL,vRUS.NOMBRE_ENTIDAD_MENOR_FISCAL,
						vRUS.COD_VIA_PUBLICA_FISCAL,vRUS.TIPO_VIA_FISCAL,vRUS.NOMBRE_VIA_FISCAL,vRUS.PRIMER_NUMERO_FISCAL,
						vRUS.PRIMERA_LETRA_FISCAL,vRUS.SEGUNDO_NUMERO_FISCAL,vRUS.SEGUNDA_LETRA_FISCAL,vRUS.KILOMETRO_FISCAL,
						vRUS.BLOQUE_FISCAL,vRUS.ESCALERA_FISCAL,vRUS.PLANTA_FISCAL,vRUS.PUERTA_FISCAL,
						vRUS.TEXTO_DIRECCION_FISCAL,vRUS.CODIGO_POSTAL_FISCAL,vRUS.APARTADO_CORREOS_FISCAL,vRUS.NIF_CONYUGE,
						vRUS.NOMBRE_CONYUGE,xIDRUS_TIT);
				xINSERTAR_TITULAR:=FALSE;				
			END IF;
			
			--Insertamos información de las parcelas asociadas al titular			
			INSERTA_REGISTRO_RUS(
						xMUNICIPIO,xYEAR,xIDRUS_TIT,vRUS.COD_DELEGACION,vRUS.COD_MUNICIPIO,vRUS.RC_NUM_PARCELA,
						vRUS.RC_NUM_SECUENCIAL,vRUS.RC_PRIMER_CONTROL,vRUS.RC_SEGUNDO_CONTROL,vRUS.COD_PROVINCIA,
						vRUS.NOMBRE_PROVINCIA,vRUS.COD_MUNICIPIO_DGC,vRUS.COD_MUNICIPIO_INE,vRUS.NOMBRE_MUNICIPIO,
						vRUS.NOMBRE_ENTIDAD_MENOR,vRUS.COD_MUNICIPIO_AGRAGACION,vRUS.COD_ZONA,vRUS.COD_POLIGONO,
						vRUS.COD_PARCELA,vRUS.NOMBRE_PARAJE,vRUS.VALOR_CATASTRAL,vRUS.VC_SUELO,vRUS.BASE_LIQUIDABLE,
						vRUS.VC_BONIFICADO,vRUS.CLAVE_BONIFICACION,vRUS.SUPERFICIE_SUELO,vRUS.COEFICIENTE_PROPIEDAD,
						vRUS.VALOR_BASE,vRUS.COD_VALOR_BASE,vRUS.YEAR_REVISION,vRUS.YEAR_REVISION_PARCIAL,
						vRUS.PERIODO_VIGENCIA,vRUS.COD_DERECHO,vRUS.NUMERO_TITULARES,vRUS.TIPO_TITULARES,
						vRUS.COMPLEMENTO_TITULARIDAD,vRUS.CLASE_ALTERACION,vRUS.TIPO_EXPEDIENTE,
						TO_DATE(vRUS.FECHA_ALTERACION,'YYYYMMDD'),
						vRUS.YEAR_EXPEDIENTE,vRUS.REFERENCIA_EXPEDIENTE,vRUS.YEAR_EXPEDIENTE_EC,
						vRUS.REFERENCIA_EXPEDIENTE_EC,vRUS.COD_ENTIDAD_COLABORADORA);					
		END LOOP;					
	END LOOP;		
	
	UPDATE TMP_PADRONES_IBI SET CARGADO='S' 
	WHERE Cod_Municipio=xMunicipio AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU' AND CARGADO='N';
END;
/

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: inserción de un recibo en RECIBOS_RUS
MODIFICACIÓN: 05/02/2007 Lucas Fernández Pérez. Ampliación del campo domicilio de la tabla RECIBOS_RUS
********************************************************************************/

CREATE OR REPLACE PROCEDURE INSERTA_RECIBO_RUS (
		vRegistro	IN	RUS_TITULARES%ROWTYPE,
		xDESDE		IN	DATE,
		xHASTA		IN	DATE,
		xCARGO		IN	DATE,
		xCONCEPTO	IN	CHAR,
		xLINEA1		IN	CHAR,
		xLINEA2		IN	CHAR,
		xLINEA3		IN	CHAR,
		xPERIODO		IN	CHAR,
		xNUM_PER		IN	INTEGER,
		xPADRON		IN	CHAR,
		xEMISOR		IN CHAR,
		xTRIBUTO		IN CHAR,
		xGRAVAMEN	IN FLOAT,
		xMAX_CUOTA	IN FLOAT)		
AS	
	xBASE_IMPONIBLE		FLOAT DEFAULT 0;
	xTOTAL             	FLOAT DEFAULT 0;
	xIMPORTE           	CHAR(12);	
	
	xREFERENCIA         	CHAR(10);
	xDIGITO_CONTROL     	VARCHAR(2);
	xDIG_C60_M2         	CHAR(2);	
	xDOMICILIO          	VARCHAR2(60);
	xRECIBO             	INTEGER;	

	xNOMBRE_TITULAR   	VARCHAR2(40);
	xCODPOSTAL 	    		CHAR(5);
	xPOBLACION 	    		VARCHAR2(40);
	xPROVINCIA	    		VARCHAR2(25);
	
	mNIF						CHAR(10);	
	xID						INTEGER;
	
	CURSOR CPARCELAS IS SELECT * FROM RUS_PARCELAS WHERE ABONADO=vRegistro.ID;
	   	
BEGIN    
   
	-- Información de domiciliación bancaria 
   IF (vRegistro.DOMICILIADO='N') THEN      
   	xNOMBRE_TITULAR:=NULL;          
   ELSE      
		if RTRIM(vRegistro.DNI_TITULAR) IS NULL then
			xNOMBRE_TITULAR:=SUBSTR(vRegistro.NOMBRE,1,40);
		else
			SELECT NOMBRE INTO xNOMBRE_TITULAR FROM CONTRIBUYENTES WHERE NIF=vRegistro.DNI_TITULAR;
		end if;			
   END IF;


   -- DOMICILIO FISCAL: en función de si tiene representante o no.
   --							dentro de la función "GetDomicilioFiscal" se comprueba
   --							si tiene a su vez un domicilio alternativo.
	IF vRegistro.REPRESENTANTE IS NULL THEN			
		IF vRegistro.IDDOMIALTER IS NULL THEN
		-- Si no tiene representante ni domicilio alternativo se recoge la información de 
		-- la tabla RUS_TITULARES, no de CONTRIBUYENTES.

			xDOMICILIO:=SUBSTR(RTRIM(vRegistro.TIPO_VIA_FISCAL)||' '||
                            RTRIM(vRegistro.NOMBRE_VIA_FISCAL)||' '||
                            RTRIM(vRegistro.PRIMER_NUMERO_FISCAL)||' '||
                            RTRIM(vRegistro.BLOQUE_FISCAL)||' '||
                            RTRIM(vRegistro.ESCALERA_FISCAL)||' '||
			        	          RTRIM(vRegistro.PLANTA_FISCAL)||' '||
                            RTRIM(vRegistro.PUERTA_FISCAL) ,1 ,50);

			xPoblacion:=vRegistro.NOMBRE_MUNICIPIO_FISCAL;
			xProvincia:=vRegistro.NOMBRE_PROVINCIA_FISCAL;
			xCodPostal:=vRegistro.CODIGO_POSTAL_FISCAL;

		ELSE
			GetDomicilioFiscal(vRegistro.NIF,vRegistro.IDDOMIALTER,
					xDomicilio,xPoblacion,xProvincia,xCodPostal);
		END IF;
	ELSE
		GetDomicilioFiscal(vRegistro.REPRESENTANTE,vRegistro.IDDOMIALTER,
				xDomicilio,xPoblacion,xProvincia,xCodPostal);
	END IF;
	

	-- Nº DE RECIBO: será el ID de la tabla de Referencias_bancos.
	mNIF:=vRegistro.NIF;
	IF (mNIF IS NULL) THEN
		mNIF:=vRegistro.CLAVE_IDENTIFICACION;
	END IF;
	
	SELECT MIN(ID) INTO xRECIBO 
	FROM REFERENCIAS_BANCOS 
	WHERE MUNICIPIO=vRegistro.MUNICIPIO AND YEAR=vRegistro.YEAR AND REF_RUSTICA=mNIF;
	
	-- convierte el Nº de Recibo en caracteres y rellena de ceros
   GETREFERENCIA(xRECIBO, xREFERENCIA);  
   
   -- Insertamos el recibo, a falta del cálculo del total dependiendo de las parcelas asociadas al abonado   
   INSERT INTO RECIBOS_RUS
		(ABONADO,YEAR,PERIODO,RECIBO,MUNICIPIO,NIF,CLAVE_IDENTIFICACION,
		NOMBRE,DOMICILIO,POBLACION,PROVINCIA,CODIGO_POSTAL,
		
		DESDE,HASTA,F_CARGO,CONCEPTO,LINEA1,LINEA2,LINEA3,EMISOR,TRIBUTO,EJERCICIO,REMESA,		
		REFERENCIA,DISCRI_PERIODO,DIGITO_YEAR,F_JULIANA,
		
		DOMICILIADO,ENTIDAD,SUCURSAL,DC,CUENTA,F_DOMICILIACION,DNI_TITULAR,NOMBRE_TITULAR,ESTADO_BANCO)
	VALUES
		(vRegistro.ID,vRegistro.YEAR,xPERIODO,xRECIBO,vRegistro.MUNICIPIO,vRegistro.NIF,vRegistro.CLAVE_IDENTIFICACION,
		vRegistro.NOMBRE,TRIM(xDOMICILIO),xPOBLACION,xPROVINCIA,xCODPOSTAL,
		
		xDESDE,xHASTA,xCARGO,xCONCEPTO,xLINEA1,xLINEA2,xLINEA3,xEMISOR,xTRIBUTO,SUBSTR(vRegistro.YEAR,3,2),xPERIODO,
		xREFERENCIA,'1',to_char(xHASTA,'y'), to_char(xHASTA,'ddd'),		

		vRegistro.DOMICILIADO,
		DECODE(vRegistro.DOMICILIADO,'S',vRegistro.ENTIDAD,NULL),
		DECODE(vRegistro.DOMICILIADO,'S',vRegistro.SUCURSAL,NULL),
		DECODE(vRegistro.DOMICILIADO,'S',vRegistro.DC,NULL),
		DECODE(vRegistro.DOMICILIADO,'S',vRegistro.CUENTA,NULL),		
		DECODE(vRegistro.DOMICILIADO,'S',vRegistro.F_DOMICILIACION,NULL),
		DECODE(vRegistro.DOMICILIADO,'S',vRegistro.DNI_TITULAR,NULL),xNOMBRE_TITULAR,
		DECODE(vRegistro.DOMICILIADO,'S','EB',NULL)
		)
	RETURNING ID INTO xID;
	
	-- Cálculo del TOTAL del recibo
	-- Se calculará el importe por parcelas, siendo el total la suma de los importes individuales
	-- En la tabla RECIBOS_RUS_DESGLOSE se guardará el desglose del recibo por parcelas asociadas a un abonado
	
	FOR vPARCELAS IN cPARCELAS
	LOOP
	
		xBASE_IMPONIBLE:=ROUND((vPARCELAS.VALOR_CATASTRAL * vPARCELAS.COEFICIENTE_PROPIEDAD)/100,2);
		xBASE_IMPONIBLE:=xBASE_IMPONIBLE - vPARCELAS.VC_BONIFICADO;
		xBASE_IMPONIBLE:=ROUND((xBASE_IMPONIBLE * xGRAVAMEN)/100,2);	

		xTOTAL:=ROUND( xBASE_IMPONIBLE / xNUM_PER, 2 );    	
		
		INSERT INTO RECIBOS_RUS_DESGLOSE
			(ID_RECIBO,RC_NUM_PARCELA,RC_NUM_SECUENCIAL,RC_PRIMER_CONTROL,RC_SEGUNDO_CONTROL,COD_ZONA,
			POLIGONO,PARCELA,PARAJE,COEFICIENTE_PROPIEDAD,COD_DERECHO,SUPERFICIE_SUELO,TIPO_GRAVAMEN,
			VALOR_CATASTRAL,VC_BONIFICADO,BASE_LIQUIDABLE,BASE_IMPONIBLE,TOTAL)
		VALUES
			(xID,vPARCELAS.RC_NUM_PARCELA,vPARCELAS.RC_NUM_SECUENCIAL,vPARCELAS.RC_PRIMER_CONTROL,
			vPARCELAS.RC_SEGUNDO_CONTROL,vPARCELAS.COD_ZONA,vPARCELAS.POLIGONO,vPARCELAS.PARCELA,
			vPARCELAS.PARAJE,vPARCELAS.COEFICIENTE_PROPIEDAD,vPARCELAS.COD_DERECHO,
			vPARCELAS.SUPERFICIE_SUELO,xGRAVAMEN,vPARCELAS.VALOR_CATASTRAL,vPARCELAS.VC_BONIFICADO,
			vPARCELAS.BASE_LIQUIDABLE,xBASE_IMPONIBLE,xTOTAL);
			
	END LOOP;
	
	-- Calculamos el total del recibo como la suma de los totales de cada parcela individual
	SELECT SUM(TOTAL) INTO xTOTAL FROM RECIBOS_RUS_DESGLOSE
	WHERE ID_RECIBO=xID;
	
	IF (xTOTAL<xMAX_CUOTA) THEN
	   xTOTAL:=0;
   END IF;	
	
   -- Cálculo de la información de CUADERNO 60
   CALCULA_DC_60(xTOTAL,xRECIBO,xTRIBUTO,SUBSTR(vRegistro.YEAR,3,2),xPERIODO,xEMISOR,xDIGITO_CONTROL);   
	
	CALCULA_DC_MODALIDAD2_60(xTOTAL, xRECIBO, xTRIBUTO, SUBSTR(vRegistro.YEAR,3,2), '1',
			to_char(xHASTA,'y'), to_char(xHASTA,'ddd'), xEMISOR, xDIG_C60_M2);
   
	-- convierte el importe relleno de ceros
   IMPORTEENCADENA(xTOTAL,xIMPORTE);

	--insertamos los cotitulares del recibo
	IF vRegistro.COTITULARES='S' THEN
		INSERT INTO COTITULARES_RECIBO(NIF,PROGRAMA,AYTO,PADRON,YEAR,PERIODO,RECIBO)
		SELECT NIF,'RUSTICA',vRegistro.MUNICIPIO,xPADRON,vRegistro.YEAR,xPERIODO,xRECIBO
		FROM COTITULARES
		WHERE ID_CONCEPTO=vRegistro.ID AND PROGRAMA='RUSTICA';
	END IF;
	
	-- completamos la información del recibo
	UPDATE RECIBOS_RUS SET TOTAL=xTOTAL,
								  IMPORTE=xIMPORTE,
								  DIGITO_CONTROL=xDIGITO_CONTROL,
								  DIGITO_C60_MODALIDAD2=xDIG_C60_M2
	WHERE ID=xID;
	
END;
/

/********************************************************************************
Acción: Generación del padrón de Rústica.
MODIFICACIÓN: 23/08/2001 Agustin León Robles.
MODIFICACIÓN: 12/09/2001 Lucas Fernández Pérez. Adaptación al euro.
MODIFICACIÓN: 24/06/2002 M. Carmen Junco Gómez. Se añaden bonificaciones.
MODIFICACIÓN: 28/06/2002 M. Carmen Junco Gómez. Insertar una tupla en LogsPadrones
		  para controlar que se ha generado un padrón.
MODIFICACIÓN: 10/09/2002 M. Carmen Junco Gómez. Cuando la bonificación ha finalizado,
		  incluir como %Bonificación un 0 en el recibo, y no el %Bonificación
		  que tiene asignado el abonado de rustica.
MODIFICACIÓN: 04/12/2002 M. Carmen Junco Gómez. Insertamos los campos municipio y
		  periodo en logspadrones
Modificación: 29/05/2003. Agustín León Robles. Las bonificaciones ya bienen indicadas
			por el Catastro, con lo cual se cambia la forma de calcular las bonificaciones.
Modificacion: 17/05/2004. Gloria Maria Calle Hernandez. Cambiado MAX_VALOR_CATASTRAL por MAX_CUOTA.
Modificación: 01/06/2004. Agustín León Robles. Se cambia el select cuando se accede a la tabla de referencias_bancos
			Se quita los ltrim(rtrim(XX))
Modificación: 02/06/2004. Agustín León Robles. Si no tiene NIF del titular de la cuenta, el Nombre del titular 
			es el nombre de la tabla de Rus80
Modificación: 15/05/2006. M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
********************************************************************************/

CREATE OR REPLACE PROCEDURE GENERA_PADRON_RUS (
      xMUNICIPIO 	IN CHAR,
      xYEAR 		IN CHAR,
      xDESDE 		IN DATE,
      xHASTA 		IN DATE,
	   xCARGO		IN DATE,
      xCONCEPTO 	IN CHAR,
      xLINEA1 		IN CHAR,
      xLINEA2 		IN CHAR,
      xLINEA3 		IN CHAR,
      xPERIODO 	IN CHAR)
AS

	xPADRON			CHAR(6);
	xEMISOR 			CHAR(6);
	xTRIBUTO 		CHAR(3);
	xNUM_PER       INTEGER;
	xGRAVAMEN 		FLOAT;
	xMAX_CUOTA		FLOAT;
	
	xREGISTRO		RUS_TITULARES%ROWTYPE;
	
	CURSOR cRusNIF IS
      SELECT * FROM RUS_TITULARES WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR AND NIF IS NOT NULL;
      
   CURSOR cRusCLAVE IS
   	SELECT * FROM RUS_TITULARES WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR AND NIF IS NULL;
BEGIN

	SELECT RUSTICA_NUM_PERIODOS INTO xNUM_PER FROM DATOSPER WHERE MUNICIPIO=xMUNICIPIO;

	--Averiguar que concepto es el padron de RÚSTICA
	SELECT CONCEPTO INTO xPADRON FROM PROGRAMAS WHERE PROGRAMA='RUSTICA';

	--recoger los datos para el cuaderno 60
	BEGIN
		select EMISORA,CONCEPTO_BANCO into xEMISOR,xTRIBUTO from RELA_APLI_BANCOS
				where AYTO=xMUNICIPIO and CONCEPTO=xPADRON;
	EXCEPTION
		when no_data_found then
			BEGIN
			xEMISOR:='000000';
			xTRIBUTO:='000';
			END;
	END;
	
	BEGIN
   	select GRAVAMEN,MAX_CUOTA INTO xGRAVAMEN,xMAX_CUOTA
		from GRAVAMEN_IBI_RUS 
	   where MODULO='RUS' AND MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;
   EXCEPTION
		when no_data_found then
		   xGRAVAMEN:=0;
	      xMAX_CUOTA:=0;
	END;
	
	-- Primero: se generan los recibos para los titulares identificados por NIF
	FOR vNIF IN cRusNIF
	LOOP
		SELECT * INTO xREGISTRO FROM RUS_TITULARES WHERE ID=vNIF.ID;
		INSERTA_RECIBO_RUS (xREGISTRO,xDESDE,xHASTA,xCARGO,xCONCEPTO,xLINEA1,xLINEA2,xLINEA3,
								  xPERIODO,xNUM_PER,xPADRON,xEMISOR,xTRIBUTO,xGRAVAMEN,xMAX_CUOTA);
	END LOOP;
	
	-- Segundo: se generan los recibos para los titulares identificados por CLAVE_IDENTIFICACION
	FOR vCLAVE IN cRusCLAVE
	LOOP
		SELECT * INTO xREGISTRO FROM RUS_TITULARES WHERE ID=vCLAVE.ID;
		INSERTA_RECIBO_RUS (xREGISTRO,xDESDE,xHASTA,xCARGO,xCONCEPTO,xLINEA1,xLINEA2,xLINEA3,
								  xPERIODO,xNUM_PER,xPADRON,xEMISOR,xTRIBUTO,xGRAVAMEN,xMAX_CUOTA);
	END LOOP;
	
	-- Insertamos una tupla en LOGSPADRONES para controlar que esta acción ha sido ejecutada
   INSERT INTO LOGSPADRONES (MUNICIPIO,PROGRAMA,PYEAR,PERIODO,HECHO)
   VALUES (xMUNICIPIO,'RUSTICA',xYEAR,xPERIODO,'Se Genera un Padrón');
	
END;
/

/********************************************************************************
Acción: Emite los recibos de Rústica
********************************************************************************/

CREATE OR REPLACE PROCEDURE GENERA_RECIBOS_RUS (
       xYEAR 		IN CHAR,
       xDESDE 		IN DATE,
       xHASTA 		IN DATE,
	 xCARGO		IN DATE,
       xCONCEPTO 		IN CHAR,
       xLINEA1 		IN CHAR,
       xLINEA2 		IN CHAR,
       xLINEA3 		IN CHAR,
       xPERIODO 		IN CHAR)

AS  
   CURSOR CAYTOS IS 
      SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
BEGIN   
   FOR v_aytos IN CAYTOS 
   LOOP  
      GENERA_PADRON_RUS(v_aytos.MUNICIPIO,xYEAR,xDESDE,xHASTA,xCARGO,xCONCEPTO,
		            xLINEA1,xLINEA2,xLINEA3,xPERIODO);
   END LOOP;   
END;
/

/********************************************************************************
Acción: Recoge los datos de las parcelas de un titular.
Autor: Lucas Fernández Pérez
Fecha: 11/07/2006
Acción: nuevo procedimiento. El anterior se utiliza para la impresión de recibos generados hasta el 2005
********************************************************************************/

CREATE OR REPLACE PROCEDURE DAME_DATOS_RUS_PARCELAS
	(xABONADO			IN INTEGER,
	xVALOR_CATASTRAL1  	OUT FLOAT,
	xSUPERFICIE_SUELO1	OUT FLOAT,
	xPARCELA1			OUT CHAR,
	xPARAJE1			OUT CHAR,
	xPOLIGONO1			OUT CHAR,

	xVALOR_CATASTRAL2 	OUT FLOAT,		
	xSUPERFICIE_SUELO2	OUT FLOAT,
	xPARCELA2			OUT CHAR,
	xPARAJE2			OUT CHAR,
	xPOLIGONO2			OUT CHAR,

	xVALOR_CATASTRAL3 	OUT FLOAT,		
	xSUPERFICIE_SUELO3	OUT FLOAT,
	xPARCELA3			OUT CHAR,
	xPARAJE3			OUT CHAR,
	xPOLIGONO3			OUT CHAR,

	xVALOR_CATASTRAL4 	OUT FLOAT,		
	xSUPERFICIE_SUELO4	OUT FLOAT,
	xPARCELA4			OUT CHAR,
	xPARAJE4			OUT CHAR,
	xPOLIGONO4			OUT CHAR,

	xVALOR_CATASTRAL5 	OUT FLOAT,
	xSUPERFICIE_SUELO5	OUT FLOAT,
	xPARCELA5			OUT CHAR,
	xPARAJE5			OUT CHAR,
	xPOLIGONO5			OUT CHAR,

	xVALOR_CATASTRAL6 	OUT FLOAT,		
	xSUPERFICIE_SUELO6	OUT FLOAT,
	xPARCELA6			OUT CHAR,
	xPARAJE6			OUT CHAR,
	xPOLIGONO6			OUT CHAR,

	xVALOR_CATASTRAL7 	OUT FLOAT,
	xSUPERFICIE_SUELO7	OUT FLOAT,
	xPARCELA7			OUT CHAR,
	xPARAJE7			OUT CHAR,
	xPOLIGONO7			OUT CHAR,

	xVALOR_CATASTRAL8 	OUT FLOAT,		
	xSUPERFICIE_SUELO8	OUT FLOAT,
	xPARCELA8			OUT CHAR,
	xPARAJE8			OUT CHAR,
	xPOLIGONO8			OUT CHAR)

AS
Z	INTEGER;
CURSOR CPARCELAS IS 
	SELECT POLIGONO,PARCELA,PARAJE,SUPERFICIE_SUELO,  VALOR_CATASTRAL 
	FROM RECIBOS_RUS_DESGLOSE D, RECIBOS_RUS R WHERE D.ID_RECIBO=R.ID AND R.ABONADO=xABONADO;

BEGIN

	/* recogemos los datos de hasta 8 posibles parcelas */
	xVALOR_CATASTRAL1:=NULL;
	xSUPERFICIE_SUELO1:=NULL;
	xPARCELA1:=NULL;
	xPARAJE1:=NULL;
	xPOLIGONO1:=NULL;
	xVALOR_CATASTRAL2:=NULL;
	xSUPERFICIE_SUELO2:=NULL;
	xPARCELA2:=NULL;
	xPARAJE2:=NULL;
	xPOLIGONO2:=NULL;
	xVALOR_CATASTRAL3:=NULL;
	xSUPERFICIE_SUELO3:=NULL;
	xPARCELA3:=NULL;
	xPARAJE3:=NULL;
	xPOLIGONO3:=NULL;
	xVALOR_CATASTRAL4:=NULL;
	xSUPERFICIE_SUELO4:=NULL;
	xPARCELA4:=NULL;
	xPARAJE4:=NULL;
	xPOLIGONO4:=NULL;
	xVALOR_CATASTRAL5:=NULL;
	xSUPERFICIE_SUELO5:=NULL;
	xPARCELA5:=NULL;
	xPARAJE5:=NULL;
	xPOLIGONO5:=NULL;
	xVALOR_CATASTRAL6:=NULL;
	xSUPERFICIE_SUELO6:=NULL;
	xPARCELA6:=NULL;
	xPARAJE6:=NULL;
	xPOLIGONO6:=NULL;
	xVALOR_CATASTRAL7:=NULL;
	xSUPERFICIE_SUELO7:=NULL;
	xPARCELA7:=NULL;
	xPARAJE7:=NULL;
	xPOLIGONO7:=NULL;
	xVALOR_CATASTRAL8:=NULL;
	xSUPERFICIE_SUELO8:=NULL;
	xPARCELA8:=NULL;
	xPARAJE8:=NULL;
	xPOLIGONO8:=NULL;

	Z:=1;

	FOR v_parcelas IN CPARCELAS
	LOOP
 	   IF (Z=1) THEN
		xVALOR_CATASTRAL1:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO1:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA1:=v_parcelas.PARCELA;
		xPARAJE1:=v_parcelas.PARAJE;
		xPOLIGONO1:=v_parcelas.POLIGONO;
	   ELSIF (Z=2) THEN
		xVALOR_CATASTRAL2:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO2:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA2:=v_parcelas.PARCELA;
		xPARAJE2:=v_parcelas.PARAJE;
		xPOLIGONO2:=v_parcelas.POLIGONO;
	   ELSIF (Z=3) THEN
		xVALOR_CATASTRAL3:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO3:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA3:=v_parcelas.PARCELA;
		xPARAJE3:=v_parcelas.PARAJE;
		xPOLIGONO3:=v_parcelas.POLIGONO;
	   ELSIF (Z=4) THEN
		xVALOR_CATASTRAL4:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO4:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA4:=v_parcelas.PARCELA;
		xPARAJE4:=v_parcelas.PARAJE;
		xPOLIGONO4:=v_parcelas.POLIGONO;
	   ELSIF (Z=5) THEN
		xVALOR_CATASTRAL5:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO5:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA5:=v_parcelas.PARCELA;
		xPARAJE5:=v_parcelas.PARAJE;
		xPOLIGONO5:=v_parcelas.POLIGONO;
	   ELSIF (Z=6) THEN
		xVALOR_CATASTRAL6:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO6:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA6:=v_parcelas.PARCELA;
		xPARAJE6:=v_parcelas.PARAJE;
		xPOLIGONO6:=v_parcelas.POLIGONO;
	   ELSIF (Z=7) THEN
		xVALOR_CATASTRAL7:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO7:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA7:=v_parcelas.PARCELA;
		xPARAJE7:=v_parcelas.PARAJE;
		xPOLIGONO7:=v_parcelas.POLIGONO;
	   ELSIF (Z=8) THEN
		xVALOR_CATASTRAL8:=v_parcelas.VALOR_CATASTRAL;	
		xSUPERFICIE_SUELO8:=v_parcelas.SUPERFICIE_SUELO;
		xPARCELA8:=v_parcelas.PARCELA;
		xPARAJE8:=v_parcelas.PARAJE;
		xPOLIGONO8:=v_parcelas.POLIGONO;
	   ELSE
		EXIT;
	   END IF;

	   Z:=Z+1;

	END LOOP;
END;
/

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: nuevo procedimiento. El anterior se utiliza para la impresión de recibos generados hasta el 2005
Modificado: 11/07/2006 Lucas Fernández Pérez
Incorpora a la tabla los campos nuevos de desglose de las parcelas del recibo 
	de rústica (poligono,parcela,valor catastral...)
********************************************************************************/

CREATE OR REPLACE PROCEDURE WriteTempRus
		(v_RegistroRus 	IN Recibos_Rus%ROWTYPE,
		xMUNICIPIO			IN CHAR,
		xYEAR					IN CHAR,
		xPERI					IN CHAR)
AS
	xNOMBRE_ENTIDAD	CHAR(50);
	xHASTA1         	DATE;
		
	xDMUNICIPIO       VARCHAR2(50);
	xCODCONCEPTO      CHAR(6);

   xNOMBREORD 			VARCHAR2(40);
	xNIFORD    			CHAR(10);
	xTIPOENT		 	CHAR(1);
	
	xGRAVAMEN			FLOAT;
	
	xVALOR_CATASTRAL1  	FLOAT;		
	xSUPERFICIE_SUELO1	FLOAT;
	xPARCELA1			CHAR(5);
	xPARAJE1			CHAR(30);
	xPOLIGONO1			CHAR(3);		

	xVALOR_CATASTRAL2  	FLOAT;		
	xSUPERFICIE_SUELO2	FLOAT;
	xPARCELA2			CHAR(5);
	xPARAJE2			CHAR(30);
	xPOLIGONO2			CHAR(3);		

	xVALOR_CATASTRAL3  	FLOAT;		
	xSUPERFICIE_SUELO3	FLOAT;
	xPARCELA3			CHAR(5);
	xPARAJE3			CHAR(30);
	xPOLIGONO3			CHAR(3);		

	xVALOR_CATASTRAL4  	FLOAT;		
	xSUPERFICIE_SUELO4	FLOAT;
	xPARCELA4			CHAR(5);
	xPARAJE4			CHAR(30);
	xPOLIGONO4			CHAR(3);		

	xVALOR_CATASTRAL5  	FLOAT;		
	xSUPERFICIE_SUELO5	FLOAT;
	xPARCELA5			CHAR(5);
	xPARAJE5			CHAR(30);
	xPOLIGONO5			CHAR(3);		

	xVALOR_CATASTRAL6  	FLOAT;		
	xSUPERFICIE_SUELO6	FLOAT;
	xPARCELA6			CHAR(5);
	xPARAJE6			CHAR(30);
	xPOLIGONO6			CHAR(3);		

	xVALOR_CATASTRAL7  	FLOAT;		
	xSUPERFICIE_SUELO7	FLOAT;
	xPARCELA7			CHAR(5);
	xPARAJE7			CHAR(30);
	xPOLIGONO7			CHAR(3);		

	xVALOR_CATASTRAL8  	FLOAT;		
	xSUPERFICIE_SUELO8	FLOAT;
	xPARCELA8			CHAR(5);
	xPARAJE8			CHAR(30);
	xPOLIGONO8			CHAR(3);		
	
BEGIN

	-- recogemos los datos del ordenante (nombre y nif)
   begin
		SELECT TIPO_ENTIDAD INTO xTipoEnt FROM CONFIGURACION C, MUNICIPIOS M 
      WHERE C.ZONA=M.ZONA AND AYTO=xMUNICIPIO;
      IF xTIPOENT='S' THEN
      	SELECT NIF,NOMBRE INTO xNIFORD,xNOMBREORD FROM DATOS_ORDENANTE WHERE AYTO IS NULL;
      ELSE 
      	SELECT NIF,NOMBRE INTO xNIFORD,xNOMBREORD FROM DATOS_ORDENANTE WHERE AYTO=xMUNICIPIO;
      END IF;
      Exception
	      When no_data_found then
	         xNIFORD:=NULL;
            xNOMBREORD:=NULL;
   end;

	-- recogemos la descripción del municipio
	SELECT EMPRESA INTO xDMUNICIPIO FROM DATOSPER WHERE MUNICIPIO=xMUNICIPIO;

	-- recogemos el código del concepto
	SELECT CONCEPTO INTO xCODCONCEPTO FROM PROGRAMAS WHERE PROGRAMA='RUSTICA';	
	
   --En caso de estar domiciliado, nombre de la Entidad
   xNOMBRE_ENTIDAD:='';
	begin
	   SELECT NOMBRE INTO xNOMBRE_ENTIDAD FROM ENTIDADES WHERE CODIGO=v_RegistroRus.ENTIDAD;
	EXCEPTION
	   WHEN NO_DATA_FOUND THEN
	      NULL;
	end;

	xHASTA1:=v_RegistroRus.HASTA+1; --fecha del hasta mas un día          
	
	--Tipo de gravamen
	BEGIN
   	select GRAVAMEN INTO xGRAVAMEN
		from GRAVAMEN_IBI_RUS 
	   where MODULO='RUS' AND MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;
   EXCEPTION
		when no_data_found then
		   xGRAVAMEN:=0;	      
	END;
	
	DAME_DATOS_RUS_PARCELAS(v_RegistroRus.ABONADO,
		xVALOR_CATASTRAL1,xSUPERFICIE_SUELO1,xPARCELA1,xPARAJE1,xPOLIGONO1,
		xVALOR_CATASTRAL2,xSUPERFICIE_SUELO2,xPARCELA2,xPARAJE2,xPOLIGONO2,
		xVALOR_CATASTRAL3,xSUPERFICIE_SUELO3,xPARCELA3,xPARAJE3,xPOLIGONO3,
		xVALOR_CATASTRAL4,xSUPERFICIE_SUELO4,xPARCELA4,xPARAJE4,xPOLIGONO4,
		xVALOR_CATASTRAL5,xSUPERFICIE_SUELO5,xPARCELA5,xPARAJE5,xPOLIGONO5,
		xVALOR_CATASTRAL6,xSUPERFICIE_SUELO6,xPARCELA6,xPARAJE6,xPOLIGONO6,
		xVALOR_CATASTRAL7,xSUPERFICIE_SUELO7,xPARCELA7,xPARAJE7,xPOLIGONO7,
		xVALOR_CATASTRAL8,xSUPERFICIE_SUELO8,xPARCELA8,xPARAJE8,xPOLIGONO8);

	INSERT INTO IMP_RECIBOS_RUSTICA 
		(MUNI,DMUNICIPIO,CODCONCEPTO,YEAR,PERIODO,RECIBO,NIF,CLAVE_IDENTIFICACION,NOMBRE,
		DOMICILIO,CODIGO_POSTAL,POBLACION,PROVINCIA,TOTAL,TIPO_GRAVAMEN,REFERENCIA,
		DC,EMISOR,TRIBUTO,EJERCICIO,REMESA,IMPORTE,DISCRI_PERIODO,DIGITO_YEAR,F_JULIANA,
		DIGITO_C60_MODALIDAD2,COD_BARRAS_MOD1,COD_BARRAS_MOD2,DESDE,HASTA,F_CARGO,
		HASTA1,ENTIDAD,SUCURSAL,DCCUENTA,CUENTA,DNI_TITULAR,NOMBRE_ENTIDAD,NOMBRE_TITULAR,
		CONCEPTO,NOMBREORDENANTE,NIFORDENANTE,
		xVALOR_CATASTRAL1,xSUPERFICIE_SUELO1,xPARCELA1,xPARAJE1,xPOLIGONO1, -- DATOS DE LAS PARCELAS
		xVALOR_CATASTRAL2,xSUPERFICIE_SUELO2,xPARCELA2,xPARAJE2,xPOLIGONO2,
		xVALOR_CATASTRAL3,xSUPERFICIE_SUELO3,xPARCELA3,xPARAJE3,xPOLIGONO3,
		xVALOR_CATASTRAL4,xSUPERFICIE_SUELO4,xPARCELA4,xPARAJE4,xPOLIGONO4,
		xVALOR_CATASTRAL5,xSUPERFICIE_SUELO5,xPARCELA5,xPARAJE5,xPOLIGONO5,
		xVALOR_CATASTRAL6,xSUPERFICIE_SUELO6,xPARCELA6,xPARAJE6,xPOLIGONO6,
		xVALOR_CATASTRAL7,xSUPERFICIE_SUELO7,xPARCELA7,xPARAJE7,xPOLIGONO7,
		xVALOR_CATASTRAL8,xSUPERFICIE_SUELO8,xPARCELA8,xPARAJE8,xPOLIGONO8)
	VALUES
		(xMUNICIPIO,xDMUNICIPIO,xCODCONCEPTO,xYEAR,xPERI,v_RegistroRus.RECIBO,v_RegistroRus.NIF,
		v_RegistroRus.CLAVE_IDENTIFICACION,v_RegistroRus.NOMBRE,v_RegistroRus.DOMICILIO,
		v_RegistroRus.CODIGO_POSTAL,v_RegistroRus.POBLACION,v_RegistroRus.PROVINCIA,
		v_RegistroRus.TOTAL,xGRAVAMEN,v_RegistroRus.REFERENCIA,v_RegistroRus.DIGITO_CONTROL,
		v_RegistroRus.EMISOR,v_RegistroRus.TRIBUTO,v_RegistroRus.EJERCICIO,v_RegistroRus.REMESA,
		v_RegistroRus.IMPORTE,v_RegistroRus.DISCRI_PERIODO,v_RegistroRus.DIGITO_YEAR,v_RegistroRus.F_JULIANA,
		v_RegistroRus.DIGITO_C60_MODALIDAD2,
		'90502'||v_RegistroRus.EMISOR||v_RegistroRus.REFERENCIA||
		v_RegistroRus.DIGITO_CONTROL||
		v_RegistroRus.TRIBUTO||v_RegistroRus.EJERCICIO||v_RegistroRus.REMESA||
		LPAD(v_RegistroRus.IMPORTE*100,8,'0'),
		'90521'||v_RegistroRus.EMISOR||v_RegistroRus.REFERENCIA||
		v_RegistroRus.DIGITO_C60_MODALIDAD2||v_RegistroRus.DISCRI_PERIODO||
		v_RegistroRus.TRIBUTO||v_RegistroRus.EJERCICIO||v_RegistroRus.DIGITO_YEAR||
		v_RegistroRus.F_JULIANA||LPAD(v_RegistroRus.IMPORTE*100,8,'0')||'0',		 
		v_RegistroRus.DESDE,v_RegistroRus.HASTA,v_RegistroRus.F_CARGO,xHASTA1,
		v_RegistroRus.ENTIDAD,v_RegistroRus.SUCURSAL,v_RegistroRus.DC,v_RegistroRus.CUENTA,
		v_RegistroRus.DNI_TITULAR,xNOMBRE_ENTIDAD,v_RegistroRus.NOMBRE_TITULAR,v_RegistroRus.CONCEPTO,		 
		xNOMBREORD,xNIFORD,
		xVALOR_CATASTRAL1,xSUPERFICIE_SUELO1,xPARCELA1,xPARAJE1,xPOLIGONO1, -- DATOS DE LAS PARCELAS
		xVALOR_CATASTRAL2,xSUPERFICIE_SUELO2,xPARCELA2,xPARAJE2,xPOLIGONO2,
		xVALOR_CATASTRAL3,xSUPERFICIE_SUELO3,xPARCELA3,xPARAJE3,xPOLIGONO3,
		xVALOR_CATASTRAL4,xSUPERFICIE_SUELO4,xPARCELA4,xPARAJE4,xPOLIGONO4,
		xVALOR_CATASTRAL5,xSUPERFICIE_SUELO5,xPARCELA5,xPARAJE5,xPOLIGONO5,
		xVALOR_CATASTRAL6,xSUPERFICIE_SUELO6,xPARCELA6,xPARAJE6,xPOLIGONO6,
		xVALOR_CATASTRAL7,xSUPERFICIE_SUELO7,xPARCELA7,xPARAJE7,xPOLIGONO7,
		xVALOR_CATASTRAL8,xSUPERFICIE_SUELO8,xPARCELA8,xPARAJE8,xPOLIGONO8
		);
END;
/

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: nuevo procedimiento. El anterior se utiliza para la impresión de recibos generados hasta el 2005
********************************************************************************/

CREATE OR REPLACE PROCEDURE Imprime_Recibos_Rustica (
		xMUNICIPIO 	IN CHAR,
		xID        	IN INTEGER,
		xYear      	IN CHAR, 
		xPeri      	IN CHAR, 
		xDomi      	IN CHAR,
		xReciDesde 	IN INTEGER,
		xReciHasta 	IN INTEGER,
		xOrden	IN CHAR)
AS

	I INTEGER;

	CURSOR CRecibosAlfabetico IS
		SELECT * FROM RECIBOS_RUS
		WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri	and domiciliado=xDomi
		ORDER BY NOMBRE,RECIBO;

	CURSOR CRecibosCallejero IS
		SELECT * FROM RECIBOS_RUS
		WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri	and domiciliado=xDomi
		ORDER BY DOMICILIO,RECIBO;

	CURSOR CRecibosCPDomi IS
		SELECT * FROM RECIBOS_RUS
		WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri	and domiciliado=xDomi
		ORDER BY CODIGO_POSTAL,DOMICILIO;

	v_RegistroRus      Recibos_Rus%ROWTYPE;

BEGIN

   I:=0;

   DELETE FROM IMP_RECIBOS_RUSTICA WHERE USUARIO=USER;

   IF (xID<>0 ) then 
   
		SELECT * INTO v_RegistroRus FROM RECIBOS_RUS WHERE ID=xID;
		WriteTempRus(v_RegistroRus,xMUNICIPIO,xYear,xPeri);

   ELSE 

		--imprimir en orden alfabetico
		if xOrden='A' then
			OPEN CRecibosAlfabetico;
			LOOP 
		   	FETCH CRecibosAlfabetico INTO v_RegistroRus;
		   	EXIT WHEN CRecibosAlfabetico%NOTFOUND;
	
  		   	I:=I+1;				

		   	IF (I >= xReciDesde and I <= xReciHasta) then

					IF v_RegistroRus.TOTAL>0 THEN
			 			WriteTempRus(v_RegistroRus,xMUNICIPIO,xYear,xPeri);				
					END IF;

		   	ELSE
		      	IF (I > xRECIHASTA) THEN
      		   	EXIT;
					END IF;
  		   	END IF;	

			END LOOP;			
			CLOSE CRecibosAlfabetico;

		--imprimir en orden codigopostal y domicilio fiscal
		elsif xOrden='D' then
			OPEN CRecibosCPDomi;
			LOOP 
		   	FETCH CRecibosCPDomi INTO v_RegistroRus;
		   	EXIT WHEN CRecibosCPDomi%NOTFOUND;
	
  		   	I:=I+1;				

		   	IF (I >= xReciDesde and I <= xReciHasta) then

					IF v_RegistroRus.TOTAL>0 THEN
			 			WriteTempRus(v_RegistroRus,xMUNICIPIO,xYear,xPeri);				
					END IF;

		   	ELSE
		      	IF (I > xRECIHASTA) THEN
      		   	EXIT;
					END IF;
  		   	END IF;	

			END LOOP;
			CLOSE CRecibosCPDomi;

		else /*if xOrden='A' then*/
			--orden callejero	
			OPEN CRecibosCallejero;
			LOOP 
		   	FETCH CRecibosCallejero INTO v_RegistroRus;
		   	EXIT WHEN CRecibosCallejero%NOTFOUND;
	
  		   	I:=I+1;				

		   	IF (I >= xReciDesde and I <= xReciHasta) then
		 			IF v_RegistroRus.TOTAL>0 THEN
			 			WriteTempRus(v_RegistroRus,xMUNICIPIO,xYear,xPeri);				
					END IF;
		   	ELSE
		      	IF (I > xRECIHASTA) THEN
      		   	EXIT;
					END IF;
  		   	END IF;	

			END LOOP;
			CLOSE CRecibosCallejero;

		end if; /*DEL if xOrden='A' then*/

	END IF; /*DEL IF (xID<>0 ) */

END;
/

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: Creación de grupos de titulares desde las consultas de RUSTICA
********************************************************************************/

CREATE OR REPLACE PROCEDURE CREA_PEGA_GRUPO_TITULARES(
       xID 			    		IN INTEGER,
       xTIPO 		    		IN CHAR,
       xCODIGO_OPERACION   IN OUT INTEGER)
AS
BEGIN

  	IF(xTIPO='C') THEN /*CREAR GRUPO*/
     	ADD_COD_OPERACION(xCODIGO_OPERACION);
     	UPDATE RUS_TITULARES SET CODIGO_OPERACION=xCODIGO_OPERACION WHERE ID=xID;
  	END IF;

  	IF (xTIPO='P') THEN /*PEGAR GRUPO*/ 
      UPDATE RUS_TITULARES SET CODIGO_OPERACION=xCODIGO_OPERACION WHERE ID=xID;
  	END IF;

  	IF (xTIPO='Q') THEN /*QUITAR GRUPO*/ 
      UPDATE RUS_TITULARES SET CODIGO_OPERACION=0 WHERE ID=xID;
  	END IF;

END;
/

/********************************************************************************
Autor: M. Carmen Junco Gómez
Fecha: 15/05/2006
Acción: Creación de grupos de parcelas desde las consultas de RUSTICA
********************************************************************************/

CREATE OR REPLACE PROCEDURE CREA_PEGA_GRUPO_PARCELAS(
       xID 			    IN INTEGER,
       xTIPO 		    IN CHAR,
       xCODIGO_OPERACION    IN OUT INTEGER)
AS
BEGIN

  	IF(xTIPO='C') THEN /*CREAR GRUPO*/
     	ADD_COD_OPERACION(xCODIGO_OPERACION);
     	UPDATE RUS_PARCELAS SET CODIGO_OPERACION=xCODIGO_OPERACION WHERE ID=xID;
  	END IF;

  	IF (xTIPO='P') THEN /*PEGAR GRUPO*/ 
      UPDATE RUS_PARCELAS SET CODIGO_OPERACION=xCODIGO_OPERACION WHERE ID=xID;
  	END IF;

  	IF (xTIPO='Q') THEN /*QUITAR GRUPO*/ 
      UPDATE RUS_PARCELAS SET CODIGO_OPERACION=0 WHERE ID=xID;
  	END IF;

END;
/


/********************************************************************************
Autor: Agustin Leon Robles
Fecha: 23/08/2001.
Acción:Añadir o eliminar un representante a un abonado 
MODIFICACIÓN: 15/05/2006 M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
Mofificado: 12/06/2006. Nuevo parámetro con el motivo por el que cambia el 
	representante, que se graba en usuariosgt y lo recoge el trigger T_UPDCUENTA_RUS
********************************************************************************/

CREATE OR REPLACE PROCEDURE ADDDEL_RUSTICA_REPRESENTANTE 
		(xID 		IN integer,
		 xNIF		IN	char,
		 xMotivo IN varchar,
		 xAddDel	IN	char)
AS
BEGIN

	UPDATE USUARIOSGT SET TEXTO=xMotivo WHERE USUARIO=USER;

	if xAddDel='A' then
		update Rus_Titulares set representante=xNIF where id=xID;
	else
		update Rus_Titulares set representante=NULL,IDDOMIALTER=NULL where id=xID;
	end if;
END;
/


/********************************************************************************
Acción: borra un disco de rústica, junto con sus recibos.
MODIFICACIÓN: 23/08/2001 Agustin Leon Robles.
MODIFICACIÓN: 15/05/2006 M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
********************************************************************************/

CREATE OR REPLACE PROCEDURE BORRA_VIEJO_RUS(
       xMUNICIPIO   IN CHAR,
       xYEAR 	  IN CHAR)
AS
BEGIN

	DELETE FROM HIS_CARGOREAL_RUS WHERE IDRUSTIT IN (SELECT ID FROM RUS_TITULARES WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR);
	-- incluir cuando se cree la tabla RECIBOS_RUS
	--DELETE FROM RECIBOS_RUS WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;
	DELETE FROM RUS_PARCELAS WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;		
	DELETE FROM RUS_TITULARES WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;		
	DELETE FROM COTITULARES_RECIBO WHERE PROGRAMA='RUSTICA' 
	AND AYTO=xMUNICIPIO AND YEAR=xYEAR;
	UPDATE TMP_PADRONES_IBI SET CARGADO='N' WHERE COD_MUNICIPIO=xMUNICIPIO AND YEAR_PADRON=xYEAR AND CLASE_IBI='RU';			
END;
/

/********************************************************************************
Acción: borrar un padrón.
MODIFICACIÓN: 23/08/2001 Agustin Leon Robles.
MODIFICACIÓN: 28/06/2002 M. Carmen Junco Gómez. Insertar una tupla en LogsPadrones
		  para controlar que se ha borrado un padrón.
MODIFICACIÓN: 04/12/2002 M. Carmen Junco Gómez. Insertamos el municipio y el periodo
		  en logspadrones.
MODIFICACIÓN: 15/05/2006. M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
********************************************************************************/

CREATE OR REPLACE PROCEDURE BORRA_PADRON_VIEJO_RUS(
       xPERIODO     IN CHAR,
       xYEAR        IN CHAR)
AS
	CURSOR CMUNI IS SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER;
BEGIN

	FOR vMUNI IN CMUNI
 	LOOP
 	
 		DELETE FROM RECIBOS_RUS_DESGLOSE WHERE ID_RECIBO IN (SELECT ID FROM RECIBOS_RUS
 				WHERE MUNICIPIO=vMUNI.MUNICIPIO AND YEAR=xYEAR AND PERIODO=xPERIODO);
 	
   	DELETE FROM RECIBOS_RUS
		WHERE MUNICIPIO=vMUNI.MUNICIPIO AND YEAR=xYEAR AND PERIODO=xPERIODO;

		DELETE FROM COTITULARES_RECIBO 
      WHERE PROGRAMA='RUSTICA' AND AYTO=vMUNI.MUNICIPIO AND YEAR=xYEAR AND PERIODO=xPERIODO;

   	-- Insertamos una tupla en LOGSPADRONES para controlar que esta acción ha sido ejecutada
   	INSERT INTO LOGSPADRONES (MUNICIPIO,PROGRAMA,PYEAR,PERIODO,HECHO)
   	VALUES (vMUNI.MUNICIPIO,'RUSTICA',xYEAR,xPERIODO,'Se Borra un Padrón');     
	END LOOP;
	
END;
/


/*****************************************************************************************
MODIFICACIÓN: 23/08/2001 Agustin Leon Robles
MODIFICACIÓN: 14/09/2001 M. Carmen Junco Gómez. Adaptación al euro.
Modificacion: 17/09/2001 Agustin Leon Robles. Se ha añadido que en el fichero del banco 
		  salga el año y periodo
Modificación: 24/06/2002 M. Carmen Junco Gómez. Se añade bonificación al recibo.
MODIFICACIÓN: 11/07/2003 M. Carmen Junco Gómez. Se cambia el formato de la superficie de
			  0D99 por 999D99, ya que para p.ejm. 77,52 pintaba ####
MODIFICACIÓN: 30/09/2003 Lucas Fernández Pérez. Se cambia el formato de la bonificación 
				de 900 a 999G990D00, porque pasa de ser un porcentaje a un importe.
MODIFICACIÓN: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato del tipo de Gravamen
					de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
MODIFICACIÓN: 21/01/2004 Lucas Fernández Pérez. Bonificaciones por domiciliaciones.
	  Obtiene de la tabla PROGRAMAS la bonificación por domiciliación y la aplica al 
		importe del recibo, para que en el disco del c19 vaya el importe bonificado.
MODIFICACION: 28/05/2004 Gloria Maria Calle Hernandez. Añadido campo AYTO a la tabla 
			  Recibos_Cuadreno19 para generar ficheros por ayuntamientos (xej. Catoure).
MODIFICACIÓN: 02/06/2004 Agustín León Robles. Cuando no hay el NIF del titular de la cuenta
			se toman los datos del fichero de recibos_rustica
MODIFICACIÓN: 15/05/2006. M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA.
MODIFICACIÓN: 06/02/2007 Lucas Fernández Pérez. Ampliación de la variable xDomi_Titular para recoger el 
					nuevo domicilio con bloque y portal.
***************************************************************************************** */

CREATE OR REPLACE PROCEDURE CUADERNO19_RUSTICA (
		xYEAR 	   IN CHAR,
      xPERI 	   IN CHAR,
      xESTADO 	   IN CHAR)
AS

	xDNI_TITULAR	    	CHAR(10);
	xNOMBRE_TITULAR     	CHAR(40);
	xDOMI_TITULAR       	CHAR(60);
	xParcela				varchar2(120);
	x2                  	CHAR(40);
	x3                  	CHAR(40);
	x4                  	CHAR(40);
	x5                  	CHAR(40);
	x6                  	CHAR(40);
	x7                  	CHAR(40);
	x8			   			CHAR(40);
	x9			    			CHAR(40);
	x10						char(40);
	x11						char(40);
	x12						char(40);
	x13						char(40);
	x14						char(40);
	x15						char(40);
	x16						char(40);
	i 							integer;
	j							integer;
	xRegis 					integer;	
	xID						integer;
	xNumParcelas 			integer;	

		
	xNIF                	CHAR(10);
	xProvincia		    	CONTRIBUYENTES.Provincia%Type;
	xCODPOSTAL          	CHAR(5);
	xPoblacion		    	CHAR(35);

	xCONCEPTO				CHAR(6);
	xBONIDOMI				FLOAT;
	xF_INGRESO				DATE;
	xFECHA_DE_BAJA			DATE;

	CURSOR CRECRUS IS SELECT * FROM RECIBOS_RUS
                  WHERE YEAR=xYEAR AND PERIODO=xPERI AND ESTADO_BANCO=xESTADO AND TOTAL>0
            		AND MUNICIPIO IN (SELECT DISTINCT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER);
	CURSOR CDESGLOSE IS SELECT * FROM RECIBOS_RUS_DESGLOSE
						WHERE ID_RECIBO=xID;

BEGIN

	--Borrar los datos de este usuario de la tabla temporal
	DELETE FROM RECIBOS_CUADERNO19 WHERE USUARIO=USER;

	SELECT COUNT(*) INTO xREGIS FROM RECIBOS_RUS
	WHERE YEAR=xYEAR AND PERIODO=xPERI AND ESTADO_BANCO=xESTADO AND TOTAL>0
	   	AND MUNICIPIO IN (SELECT DISTINCT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER);

	-- recogemos el concepto y la bonificacion por domiciliaciones para RUSTICA
	SELECT CONCEPTO,PORC_BONIFI_DOMI INTO xCONCEPTO, xBONIDOMI 
	FROM PROGRAMAS WHERE PROGRAMA='RUSTICA';

	FOR v_RRus IN CRECRUS 
	LOOP
	
		xID:=v_RRus.ID;

		--comprobamos si el recibo está ya ingresado o dado de baja en recaudación
		begin
			SELECT F_INGRESO,FECHA_DE_BAJA INTO xF_INGRESO,xFECHA_DE_BAJA
			FROM VALORES WHERE AYTO=v_RRus.MUNICIPIO AND PADRON=xCONCEPTO AND
						 YEAR=v_RRus.YEAR AND PERIODO=v_RRus.PERIODO AND
						 RECIBO=v_RRus.RECIBO AND TIPO_DE_OBJETO='R';
			Exception
			   When no_data_found then
					xF_INGRESO:=NULL;
					xFECHA_DE_BAJA:=NULL;
		end;

		IF ((xF_INGRESO IS NULL) AND (xFECHA_DE_BAJA IS NULL)) THEN	
			
			-- Datos del titular de la cuenta
			IF v_RRus.DNI_TITULAR IS NULL THEN
				xDNI_TITULAR:=v_RRus.NIF;
			ELSE
				xDNI_TITULAR:=v_RRus.DNI_TITULAR;
			END IF;
		   
			if RTRIM(xDNI_TITULAR) is null then
				xNOMBRE_TITULAR:=substr(v_RRus.NOMBRE,1,40);
				xPoblacion:=substr(v_RRus.POBLACION,1,35);
				xProvincia:=v_RRus.PROVINCIA;
				xCodPostal:=v_RRus.CODIGO_POSTAL;
				xDomi_Titular:=v_RRus.DOMICILIO;
			else
				GETContribuyente(xDNI_TITULAR,xNOMBRE_TITULAR,xPoblacion,xProvincia,xCodPostal,xDomi_Titular);
			end if;
  
			-- La variable "i" indica el número de campos opcionales que hay, si las variables
			-- llegan hasta x13 entonces son 12, porque se empieza en el x2, 
			-- si son x15 entonces son 14, etc...

			i:=15;
			
			x2:='';
			x3:='';
			x4:='';
			x5:='';
			x6:='';
			x7:='';
			x8:='';
			x9:='';
			x10:='';
			x11:='';
			x12:='';
			x13:='';
			x14:='';
			x15:='';
			x16:='';		
		
			j:=0;
		
			SELECT COUNT(*) INTO xNUMPARCELAS FROM RECIBOS_RUS_DESGLOSE WHERE ID_RECIBO=xID;
		
			FOR vDESGLOSE IN CDESGLOSE
			LOOP
				j:=j+1;
				xParcela:='REF:'||vDESGLOSE.RC_NUM_PARCELA||';PARAJE:'||TRIM(vDESGLOSE.PARAJE)||			
							 ';SUP(m2):'||vDESGLOSE.SUPERFICIE_SUELO||
							 ';VCAT:'||TRIM(TO_CHAR(vDESGLOSE.VALOR_CATASTRAL,'999G990D00'))||
							 ';GRAV:'||TRIM(TO_CHAR(vDESGLOSE.TIPO_GRAVAMEN,'990D999'));
			
				if (length(';B.IMP:'||TRIM(TO_CHAR(vDESGLOSE.BASE_IMPONIBLE,'999G990D00'))) +
					length(xParcela)<121) then
						xParcela:=xParcela||';B.IMP:'||TRIM(TO_CHAR(vDESGLOSE.BASE_IMPONIBLE,'999G990D00'));
				end if;
				if (length(';TOTAL:'||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'))) +
					length(xParcela)<121) then
						xParcela:=xParcela||';TOTAL:'||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'));
				end if;
					
				xParcela:=rpad(xParcela,120,' ');
				
				if (j=1 and xNumParcelas<5) then
					x2:=RPAD('AÑO: '||xYEAR||' PERIODO: '||xPERI,40,' ');
					x3:=RPAD(' ',40,' ');
					x4:=RPAD(' ',40,' ');
					x5:=substr(xParcela,1,40);
					x6:=substr(xParcela,41,40);
					x7:=substr(xParcela,81,40);
				elsif (j=1 and xNumParcelas>4) then
					x2:=RPAD('AÑO: '||xYEAR||' PERIODO: '||xPERI,40,' ');
					x3:=RPAD('Datos de 4 parcelas de '||TO_CHAR(xNumParcelas),40,' ');
					x4:=RPAD('Más información en centro emisor.',40,' ');
					x5:=substr(xParcela,1,40);
					x6:=substr(xParcela,41,40);
					x7:=substr(xParcela,81,40);
				elsif j=2 then
					x8:=substr(xParcela,1,40);
					x9:=substr(xParcela,41,40);
					x10:=substr(xParcela,81,40);
				elsif j=3 then
					x11:=substr(xParcela,1,40);
					x12:=substr(xParcela,41,40);
					x13:=substr(xParcela,81,40);
				elsif j=4 then					
					x14:=substr(xParcela,1,40);
					x15:=substr(xParcela,41,40);
					x16:=substr(xParcela,81,40);
					EXIT;
				end if;				
			
			END LOOP;								

      	INSERT INTO RECIBOS_CUADERNO19
	      	(AYTO,ABONADO,NIF,NOMBRE,DOMICILIO,CODPOSTAL,MUNICIPIO,NOMBRE_TITULAR,
			 	ENTIDAD,SUCURSAL,DC,CUENTA, TOTAL, Campo2, Campo3, Campo4, Campo5, Campo6, 
			 	Campo7, Campo8, Campo9, Campo10, Campo11, Campo12, Campo13, Campo14, Campo15, Campo16,
			 	CAMPOS_OPCIONALES, CUANTOS_REGISTROS)
		   VALUES 
	  			(V_RRus.MUNICIPIO,v_RRus.RECIBO,xDNI_TITULAR,SUBSTR(v_RRus.NOMBRE,1,40),SUBSTR(xDOMI_TITULAR,1,40),
			 	xCODPOSTAL,xPoblacion,xNOMBRE_TITULAR,v_RRus.ENTIDAD,v_RRus.SUCURSAL,v_RRus.DC,v_RRus.CUENTA,
 			 	ROUND(v_RRus.TOTAL*(1-(xBoniDomi/100)),2), 
			 	x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, i, xREGIS);      

		END IF;
   END LOOP;  
END;
/

/********************************************************************************
Acción: Comprobar cuantos registros hay en la tabla RUS_TITULARES para un ayto y año.
MODIFICACIÓN: 15/05/2006 M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA.
********************************************************************************/

CREATE OR REPLACE PROCEDURE CHECK_EXIT_RUS(
       xMUNICIPIO    IN CHAR,
       xYEAR 	   	IN CHAR,
       xCUANTOS 	   OUT INTEGER)
AS
BEGIN  
	SELECT COUNT(*) INTO xCUANTOS
   FROM RUS_TITULARES WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;	
END;
/

/********************************************************************************
Acción: Comprobar cuantos recibos hay para un año y periodo.
Modificación: 15/05/2006. M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
********************************************************************************/

CREATE OR REPLACE PROCEDURE CHECK_EXIT_PADRUS(
       xYEAR 	  IN CHAR,
       xPERIODO  IN CHAR,
       xCUANTOS  OUT INTEGER)
AS
BEGIN  
	SELECT COUNT(*) INTO xCUANTOS FROM RECIBOS_RUS
  	WHERE YEAR=xYEAR AND PERIODO=xPERIODO AND 
   		MUNICIPIO IN (SELECT MUNICIPIO FROM TMP_AYTOS WHERE USUARIO=USER);
END;
/

/********************************************************************************
Acción: domiciliación de un recibo.
MODIFICACIÓN: 25/06/2002 M. Carmen Junco Gómez. Comprueba si hay recibo emitido 
              del padrón anual en curso y en tal caso modifica los datos de la 
              domiciliación para que entre en los soportes del cuaderno 19
MODIFICACION: 03/07/2002 M. Carmen Junco Gómez. Si no se encontraba el recibo en la 
		  tabla de valores estavamos asignándole a mVOL_EJE:=''; En mi máquina,
		  por ejemplo, funcionaba correctamente, pero en Salobreña estaba fallando
		  el procedimiento (no domiciliaba el recibo) debido a esta asignación.
		  Se ha cambiado por mVOL_EJE:=NULL;		 
MODIFICACION: 08/07/2002 M. Carmen Junco Gómez. El recibo de Rústica sólo se podrá modificar
		  si aún no se ha emitido el Cuaderno19 para el padrón al que pertenece.
		  Además, cuando modificamos en recaudación, debemos tener en cuenta si el
		  cargo se ha aceptado o no. Si aún no se ha aceptado habrá que hacer la
		  modificación en la tabla PUNTEO y no en VALORES.
MODIFICACIÓN: 04/12/2002 M. Carmen Junco Gómez. Insertamos los campos MUNICIPIO y 
		  PERIODO en LOGSPADRONES.
Modificado: 02/06/2004. Agustín Léon Robles. 
			Puede darse el caso de que no tengamos el NIF del titular de la cuenta, entonces
			el nombre del titular será el de la tabla de Rus80
MODIFICACIÓN: 01/02/2005 Lucas Fernandez Pérez. Se añade el parámetro xMotivoCambioDomi.
		  Se eliminan los campos USR_CHG__CUENTA y F_CHG__CUENTA.
		  La información se almacenará ahora en la tabla HISTO_DOMICILIACIONES.
MODIFICACIÓN: 10/03/2005 Lucas Fernández Pérez. Hasta ahora se comprobaban los recibos emitidos 
		  en el año en curso, de tal forma que no hacía la modificación del recibo si el padrón se
		  emitió el año anterior al actual. Lo que haremos será revisar los recibos emitidos desde
		  hace un año al día de hoy. 		  
MODIFICACIÓN: 15/05/2006. M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
MODIFICACIÓN: 18/07/2006 Lucas Fernández Pérez. En la búsqueda del recibo en valores y punteo
	no estaba en la condicion "TIPO_DE_OBJETO='R'" 
********************************************************************************/

CREATE OR REPLACE PROCEDURE RUS_BANCOS(
      xID 					IN INTEGER,
      xENTIDAD 			IN CHAR,
      xSUCURSAL 			IN CHAR,
      xDC 					IN CHAR,
      xCUENTA 				IN CHAR,
	   xF_DOMICILIACION 	IN DATE,
      xDNI_TITULAR 		IN CHAR,
      xDOMICILIADO 		IN CHAR,
      xMotivoCambioDomi IN VARCHAR2)
AS

	mVOL_EJE 			Char(1);
	mVALOR   			Integer;
	mPUNTEO  			Integer;
	mPADRON 				CHAR(6);
	xNOMBRE_TITULAR	VARCHAR2(40);
	xCUANTOS 			Integer;
	xNOMBRE				VARCHAR2(60);

	-- cursor que recorre los distintos periodos de los distintos recibos que 
	-- se han podido emitir para este abonado, para comprobar para que padrón
	-- se ha emitido ya el Cuaderno19, y por lo tanto no modificar la domiciliación
	-- de ese recibo. Han de ser recibos emitidos en el año en curso.
	CURSOR CPERIODOS IS SELECT DISTINCT YEAR,PERIODO,ID,MUNICIPIO,RECIBO FROM RECIBOS_RUS
				  WHERE ABONADO=xID 
				  		AND YEAR BETWEEN (TO_CHAR(sysdate,'yyyy')-1) AND TO_CHAR(sysdate,'yyyy');
				  

BEGIN

	-- Se pone el posible motivo del cambio en la domiciliación en USUARIOSGT (campo TEXTO2).
   UPDATE USUARIOSGT SET TEXTO2=xMotivoCambioDomi WHERE USUARIO=USER;

   -- se actualiza en la tabla RUS_TITULARES
	UPDATE RUS_TITULARES SET ENTIDAD=xENTIDAD,
                   			 SUCURSAL=xSUCURSAL,
                   			 DC=xDC,CUENTA=xCUENTA,
			 						 F_DOMICILIACION=xF_DOMICILIACION,
                   			 DNI_TITULAR=xDNI_TITULAR,
                   			 DOMICILIADO=xDOMICILIADO                   		
	WHERE ID=xID RETURNING NOMBRE INTO xNombre;

	-- por cada periodo distinto de recibos sobre el abonado
	FOR vPERIODOS IN CPERIODOS 
	LOOP	 

   	-- Comprobamos si se ha emitido ya el soporte del cuaderno 19
	   SELECT COUNT(*) INTO xCUANTOS FROM LOGSPADRONES 
	   WHERE MUNICIPIO=vPERIODOS.MUNICIPIO AND 
		   PROGRAMA ='RUSTICA' AND 
		   PYEAR=vPERIODOS.YEAR AND
		   PERIODO=vPERIODOS.PERIODO AND 
		   HECHO='Generación Cuaderno 19 (recibos domiciliados)';

	   IF xCUANTOS=0 THEN  -- aún no se ha emitido. Podemos modificar el recibo.
	   
	   	-- Averiguar el código de padron de RUSTICA
			SELECT CONCEPTO INTO mPADRON FROM PROGRAMAS WHERE PROGRAMA='RUSTICA';
		
			-- Comprobar si ya se paso a recaudación    
			begin
	   		SELECT ID,VOL_EJE INTO mVALOR,mVOL_EJE FROM VALORES 
         	WHERE AYTO=vPERIODOS.MUNICIPIO AND PADRON=mPADRON AND
		   	YEAR=vPERIODOS.YEAR AND PERIODO=vPERIODOS.PERIODO AND 
				RECIBO=vPERIODOS.RECIBO AND TIPO_DE_OBJETO='R';
				Exception
	   			When no_data_found then
	      			mVOL_EJE:=NULL;
			end;

			-- Si no se encuentra el valor, comprobar si está en el punteo
			IF (mVOL_EJE IS NULL) THEN
				begin
					SELECT ID,VOL_EJE INTO mPUNTEO,mVOL_EJE FROM PUNTEO
					WHERE AYTO=vPERIODOS.MUNICIPIO
						AND PADRON=mPADRON
						AND YEAR=vPERIODOS.YEAR
						AND PERIODO=vPERIODOS.PERIODO
						AND RECIBO=vPERIODOS.RECIBO
						AND TIPO_DE_OBJETO='R';
					Exception
						When no_data_found then
							mVOL_EJE:=NULL;
				end;
			END IF;

			-- si el recibo está en Voluntaria en RECA o todavia no se ha pasado a recaudación
			IF ((mVOL_EJE='V') or (mVOL_EJE IS NULL)) THEN

	   		-- modificamos el recibo en gestión tributaria
	   		IF xDOMICILIADO='N' THEN
	      		UPDATE RECIBOS_RUS SET DOMICILIADO='N',
								   				ENTIDAD=NULL,
								   				SUCURSAL=NULL,
								   				DC=NULL,
								   				CUENTA=NULL,
								   				F_DOMICILIACION=NULL,
								   				DNI_TITULAR=NULL,
								   				NOMBRE_TITULAR=NULL,
								   				ESTADO_BANCO=NULL
					WHERE ID=vPERIODOS.ID;
				ELSE				
				
					--Puede darse el caso de que no tengamos el NIF del titular de la cuenta
					if RTRIM(xDNI_TITULAR) is null then				
						xNOMBRE_TITULAR:=SUBSTR(xNOMBRE,1,40);
					else
						SELECT NOMBRE INTO xNOMBRE_TITULAR FROM CONTRIBUYENTES WHERE NIF=xDNI_TITULAR;
					end if;

	   			UPDATE RECIBOS_RUS SET DOMICILIADO='S',
							 	   				ENTIDAD=xENTIDAD,
								   				SUCURSAL=xSUCURSAL,
								   				DC=xDC,
								   				CUENTA=xCUENTA,
								   				F_DOMICILIACION=xF_DOMICILIACION,
								   				DNI_TITULAR=xDNI_TITULAR,
								   				NOMBRE_TITULAR=xNOMBRE_TITULAR,
								   				ESTADO_BANCO='EB'
			    	WHERE ID=vPERIODOS.ID;
				END IF;

	   		-- modificamos los datos del valor (o del punteo)
	   		IF mVOL_EJE='V' THEN				
					IF xDOMICILIADO = 'N' THEN
						IF mVALOR IS NOT NULL THEN
  	         			UPDATE VALORES SET ESTADO_BANCO=DECODE(ESTADO_BANCO, 'EB', NULL, ESTADO_BANCO)
	         			WHERE ID=mVALOR;
						ELSE
					   	UPDATE PUNTEO SET ESTADO_BANCO=DECODE(ESTADO_BANCO, 'EB', NULL, ESTADO_BANCO)
					   	WHERE ID=mPUNTEO;
						END IF;
					ELSE		
						IF mVALOR IS NOT NULL THEN
  	         			UPDATE VALORES SET ESTADO_BANCO=DECODE(ESTADO_BANCO, NULL, 'EB',ESTADO_BANCO)
	         			WHERE ID=mVALOR;		
						ELSE
					   	UPDATE PUNTEO SET ESTADO_BANCO=DECODE(ESTADO_BANCO, NULL, 'EB',ESTADO_BANCO)
	         			WHERE ID=mPUNTEO;			
						END IF;
					END IF; 						
	   		END IF; 

     		END IF; -- ((mVOL_EJE='V') or (mVOL_EJE IS NULL))	 

      END IF;

	END LOOP;

END;
/

/********************************************************************************
Acción: Modificación de un registro.
MODIFICACIÓN: 26/03/2002 M. del Carmen Junco Gómez. 
		Permitimos cambiar los datos fiscales
		del fichero RUS80 por indicación del sujeto pasivo, guardando los datos que venían
		en cita en una tabla histórica. 
		En cargas posteriores tenedremos que buscar posibles variaciones (utilizando la tabla
		HIS_CARGOREAL_RUS) para no perder los datos actualizados.
MODIFICACIÓN: A petición de Agustín: 20/05/2002. M. Carmen Junco Gómez. 
		Se van a guardar todas las variaciones (no sólo los datos que venían en disco) para 
		poder tener un histórico. También podremos modificar de forma masiva los datos fiscales
		en la tabla de Rus80 (por código de operación).
MODIFICACIÓN: 01/06/2004. Agustín León Robles. 
		Se cambia el select cuando se accede a la tabla de referencias_bancos. 
		Se quita los ltrim(rtrim(XX))
MODIFICACIÓN: 31/01/2005. M. Carmen Junco Góemz.
		Se añade el motivo del cambio.
MODIFICACIÓN: 15/05/2006. M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA.		
MODIFICACIÓN: 12/06/2006. Lucas Fernández Pérez. Se elimina el parámetro xCLAVE_IDENTIFICACION por no usarse
********************************************************************************/

CREATE OR REPLACE PROCEDURE RUS_MODIFICA(		 
       xID 							IN INTEGER,
       xNIF 						IN CHAR,
       xNOMBRE 					IN CHAR,
       xVIAF 						IN CHAR,
       xCALLEF 					IN VARCHAR2,
       xNUMEROF 					IN CHAR,
       xESCALERAF 				IN CHAR,
       xPLANTAF 					IN CHAR,
       xPISOF 						IN CHAR,
       xCPF 						IN CHAR,
       xPOBLACIONF 				IN VARCHAR2,
       xPROVINCIAF 				IN VARCHAR2,
	    xPAISF 						IN CHAR,
	    xCODIGO_OPERACION 		IN INTEGER,
	    xMOTIVO						IN	VARCHAR2)  
AS

	mNIF 			CHAR(10);    
	v_registro	RUS_TITULARES%ROWTYPE;

	-- cursor que recorre todos los registros con código de operacion=xCodigo_Operacion
	-- de forma que se puedan actualizar los datos fiscales a la vez para más de un 
	-- registro de la tabla RUS_TITULARES.
	-- Guardaremos los datos actuales en la tabla HIS_CARGOREAL_RUS para mantener 
	-- un histórico.

	CURSOR CRUSTIT IS SELECT * FROM RUS_TITULARES WHERE CODIGO_OPERACION=xCODIGO_OPERACION
			      		FOR UPDATE OF NIF,NOMBRE,TIPO_VIA_FISCAL,NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,
                   	              ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,CODIGO_POSTAL_FISCAL,
					        				  NOMBRE_MUNICIPIO_FISCAL,NOMBRE_PROVINCIA_FISCAL,PAIS;
BEGIN   

   -- Si trabajamos sólo sobre un registro
   IF xCODIGO_OPERACION=0 THEN 

		-- recogemos los datos actuales que para este ID hay en la tabla RUS_TITULARES.
		SELECT * INTO v_registro FROM RUS_TITULARES WHERE ID=xID;

		INSERT INTO HIS_CARGOREAL_RUS
			(IDRUSTIT,AYTO,TIPO_VARIACION,NIF_NEW,NIF_OLD,CLAVE_IDENTIFICACION,NOMBRE,TIPO_VIA_FISCAL,
			NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,COD_POSTAL_FISCAL,
			MUNICIPIO_FISCAL,PROVINCIA,PAIS,MOTIVO)
		VALUES
			(v_registro.ID,v_registro.MUNICIPIO,'M',xNIF,v_registro.NIF,v_registro.CLAVE_IDENTIFICACION,
			v_registro.NOMBRE,v_registro.TIPO_VIA_FISCAL,v_registro.NOMBRE_VIA_FISCAL,v_registro.PRIMER_NUMERO_FISCAL,
			v_registro.ESCALERA_FISCAL,v_registro.PLANTA_FISCAL,v_registro.PUERTA_FISCAL,v_registro.CODIGO_POSTAL_FISCAL,
			v_registro.NOMBRE_MUNICIPIO_FISCAL,v_registro.NOMBRE_PROVINCIA_FISCAL,v_registro.PAIS,xMOTIVO);

		-- guardamos el nif que teníamos antes de modificar los datos, ya que 
		-- este dato puede ser modificado y lo necesitamos como clave en la tabla
		-- Referencias_bancos. Si es nulo la clave será CLAVE_IDENTIFICACION
		IF (v_registro.NIF IS NOT NULL) THEN
			mNIF:=v_registro.NIF;
		ELSE
			mNIF:=v_registro.CLAVE_IDENTIFICACION;
		END IF;
		
		-- modificamos los datos en la tabla RUS_TITULARES
		UPDATE RUS_TITULARES SET 	NIF=xNIF,
									CLAVE_IDENTIFICACION=DECODE(xNIF,NULL,CLAVE_IDENTIFICACION,'00000000'),
                       				NOMBRE=xNOMBRE,
                       				TIPO_VIA_FISCAL=xVIAF,
                       				NOMBRE_VIA_FISCAL=SUBSTR(xCALLEF,1,25),
                       				PRIMER_NUMERO_FISCAL=xNUMEROF,
                       				ESCALERA_FISCAL=xESCALERAF,
                       				PLANTA_FISCAL=xPLANTAF,
                       				PUERTA_FISCAL=xPISOF,
                       				CODIGO_POSTAL_FISCAL=xCPF,
                       				NOMBRE_MUNICIPIO_FISCAL=xPOBLACIONF,
                       				NOMBRE_PROVINCIA_FISCAL=SUBSTR(xPROVINCIAF,1,25),
                       				PAIS=SUBSTR(xPAISF,1,25)
		WHERE ID=xID;

		-- Si se ha modificado el nif tendremos que modificar la referencia para rústica
		-- en la tabla REFERENCIAS_BANCOS.

		IF ((mNIF<>xNIF) AND (xNIF IS NOT NULL)) THEN	
			UPDATE REFERENCIAS_BANCOS SET 
						NIF=xNIF,
						REF_RUSTICA=xNIF
			WHERE MUNICIPIO=v_registro.MUNICIPIO AND REF_RUSTICA=mNIF;
		END IF;

		
   -- si se van a modificar más de un registro a la vez
   ELSE  

      FOR vRUS IN CRUSTIT
      LOOP	            

   	   -- Insertamos en el historico la información que hasta ahora poseíamos
	   	-- para el registro en la tabla RUS_TITULARES.
	   	
	   	INSERT INTO HIS_CARGOREAL_RUS
				(IDRUSTIT,AYTO,TIPO_VARIACION,NIF_NEW,NIF_OLD,CLAVE_IDENTIFICACION,NOMBRE,TIPO_VIA_FISCAL,
				NOMBRE_VIA_FISCAL,PRIMER_NUMERO_FISCAL,ESCALERA_FISCAL,PLANTA_FISCAL,PUERTA_FISCAL,COD_POSTAL_FISCAL,
				MUNICIPIO_FISCAL,PROVINCIA,PAIS,MOTIVO)
			VALUES
				(vRUS.ID,vRUS.MUNICIPIO,'M',xNIF,vRUS.NIF,vRUS.CLAVE_IDENTIFICACION,
				vRUS.NOMBRE,vRUS.TIPO_VIA_FISCAL,vRUS.NOMBRE_VIA_FISCAL,vRUS.PRIMER_NUMERO_FISCAL,
				vRUS.ESCALERA_FISCAL,vRUS.PLANTA_FISCAL,vRUS.PUERTA_FISCAL,vRUS.CODIGO_POSTAL_FISCAL,
				vRUS.NOMBRE_MUNICIPIO_FISCAL,vRUS.NOMBRE_PROVINCIA_FISCAL,vRUS.PAIS,xMOTIVO);	   

	   	-- guardamos el nif que teníamos antes de modificar los datos, ya que 
			-- este dato puede ser modificado y lo necesitamos como clave en la tabla
			-- Referencias_bancos. Si es nulo la clave será CLAVE_IDENTIFICACION
			IF (vRUS.NIF IS NOT NULL) THEN
				mNIF:=vRUS.NIF;
			ELSE
				mNIF:=vRUS.CLAVE_IDENTIFICACION;
			END IF;

	   	-- modificamos los datos en la tabla RUS_TITULARES
         UPDATE RUS_TITULARES SET 	NIF=xNIF,
         									CLAVE_IDENTIFICACION=DECODE(xNIF,NULL,CLAVE_IDENTIFICACION,'00000000'),
                       					NOMBRE=xNOMBRE,
                       					TIPO_VIA_FISCAL=xVIAF,
                       					NOMBRE_VIA_FISCAL=SUBSTR(xCALLEF,1,25),
                       					PRIMER_NUMERO_FISCAL=xNUMEROF,
                       					ESCALERA_FISCAL=xESCALERAF,
                       					PLANTA_FISCAL=xPLANTAF,
                       					PUERTA_FISCAL=xPISOF,
                       					CODIGO_POSTAL_FISCAL=xCPF,
                       					NOMBRE_MUNICIPIO_FISCAL=xPOBLACIONF,
                       					NOMBRE_PROVINCIA_FISCAL=SUBSTR(xPROVINCIAF,1,25),
                       					PAIS=SUBSTR(xPAISF,1,25)		
	   	WHERE CURRENT OF CRUSTIT;

         -- Si se ha modificado el nif tendremos que modificar la referencia para rústica
         -- en la tabla REFERENCIAS_BANCOS.

         IF ((mNIF<>xNIF) AND (xNIF IS NOT NULL)) THEN	
				UPDATE REFERENCIAS_BANCOS SET 
						NIF=xNIF,
						REF_RUSTICA=xNIF
				WHERE MUNICIPIO=v_registro.MUNICIPIO AND REF_RUSTICA=mNIF;
			END IF;

      END LOOP;

   END IF;	

END;
/

/******************************************************************************************
Autor: 12/06/2006 Lucas Fernández Pérez
Acción: Realiza el cambio de titularidad de un registro de Rus_titulares, 
		  llamando a RUS_MODIFICA.
		  Se llama desde la creación de motes (CHGNIF_MALO_A_BUENO)
        xTipo 'M' de motes.
*/
CREATE OR REPLACE PROCEDURE RUSCambioTitularidad(
	xNUEVO  IN CHAR,
	xIDRUS  IN INTEGER,
	xTipo   IN Char) 
AS

	xNombre	char(60);
	xVIAF		CHAR(5);
	xCALLEF	CHAR(25);
	xNUMEROF	CHAR(4);
	xESCALERAF	CHAR(2);
	xPLANTAF	CHAR(3);
	xPISOF	CHAR(2);
	xCPF		CHAR(5);
	xPOBLACIONF	CHAR(25);
	xPROVINCIAF	CHAR(25);
	xPAISF	CHAR(25);
	xMOTIVO VARCHAR2(512);

BEGIN

  	-- Buscar los datos fiscales del nuevo sujeto pasivo
   BEGIN
     	SELECT NOMBRE,VIA,SUBSTR(CALLE,1,25),
	  	DECODE(SUBSTR(NUMERO,1,1),'0',SUBSTR(NUMERO,2,4),SUBSTR(NUMERO,1,4)),
		ESCALERA,PLANTA,PISO,CODIGO_POSTAL,SUBSTR(POBLACION,1,25),SUBSTR(PROVINCIA,1,25),
		SUBSTR(PAIS,1,25)
		INTO xNOMBRE,xVIAF,xCALLEF,xNUMEROF,xESCALERAF,xPLANTAF,xPISOF,xCPF,
	     	  xPOBLACIONF,xPROVINCIAF,xPAISF
		FROM CONTRIBUYENTES WHERE NIF=xNUEVO;

		EXCEPTION
 	   	when no_data_found then
				NULL;
   END;


	-- Los últimos parametros indican:
	-- xTipo el tipo de cambio y 0 para una única actualización.
	
	if xTipo='M' then --Motes
		xMOTIVO:='Cambio de titularidad por creación de Mote';
	end if;

	RUS_MODIFICA(xIDRUS,xNUEVO,xNOMBRE,xVIAF,xCALLEF,xNUMEROF,xESCALERAF,xPLANTAF,
				 xPISOF,xCPF,xPOBLACIONF,xPROVINCIAF,xPAISF,0,xMOTIVO);

END;
/

/* ****************************************************************************************
Acción: Pase a recaudación de un padrón.
MODIFICACIÓN: 23/08/2001 Agustin Leon Robles.
MODIFICACIÓN: 12/09/2001 Lucas Fernández Pérez. Adaptación al euro.
MODIFICACIÓN: 27/05/2002 M. Carmen Junco Gómez. Incluir o no los exentos dependiendo
		  del nuevo parámetro de entrada xEXENTOS.
MODIFICACIÓN: 24/06/2002 M. Carmen Junco Gómez. Añadir Bonificación al recibo.
MODIFICACIÓN: 1/07/2002 M. Carmen Junco Gómez. Insertar una tupla en LogsPadrones
		  para controlar que se ha pasado un padrón a Recaudación.
MODIFICACIÓN: 04/12/2002 M. Carmen Junco Gómez. Se añaden los campos MUNICIPIO y
		  PERIODO en la tabla LOGSPADRONES.
MODIFICACIÓN: 30/09/2003 Lucas Fernández Pérez. Se cambia el formato de la bonificación 
				de 900 a 999G990D00, porque pasa de ser un porcentaje a un importe.
MODIFICACIÓN: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato del tipo de Gravamen
				de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
MODIFICACIÓN: 09/06/2004 Gloria Mª Calle Hernández. Se guarda en el campo Clave_recibo el ID 
		 	 de la la tabla de recibos.
MODIFICACIÓN: 15/05/2006 M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA.
***************************************************************************************** */

CREATE OR REPLACE PROCEDURE RUS_PASE_RECA(
		xMUNICIPIO 		IN CHAR,
      xYEAR 			IN CHAR,
      xPERIODO 		IN CHAR,
      xFECHA 			IN DATE,
      xN_CARGO 		IN CHAR,
	   xYEARCONTRAIDO	IN CHAR,
	   xEXENTOS			IN CHAR)
AS

	xID						  INTEGER;	
	xSALTO                 CHAR(2);	
	xPADRON                CHAR(6);
	xTIPO_TRIBUTO		  	  CHAR(2);	
	xOBJETO_TRIBUTARIO     VARCHAR2(1024);
	xGRAVAMEN				  FLOAT;
	
	xLONGITUD				  INTEGER;
	xLONGITUD2				  INTEGER;
	xNUMPARCELAS			  INTEGER;	

	CURSOR CRECRUS IS SELECT ID,NIF,CLAVE_IDENTIFICACION,NOMBRE,DESDE,HASTA,TOTAL,ESTADO_BANCO,RECIBO 
							FROM RECIBOS_RUS 
							WHERE MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR AND PERIODO=xPERIODO;
	CURSOR CDESGLOSE IS SELECT * FROM RECIBOS_RUS_DESGLOSE WHERE ID_RECIBO=xID;

BEGIN

	SELECT CONCEPTO INTO xPADRON FROM PROGRAMAS WHERE PROGRAMA='RUSTICA';

	SELECT TIPO_TRIBUTO INTO xTIPO_TRIBUTO
	FROM CONTADOR_CONCEPTOS
	WHERE MUNICIPIO=xMUNICIPIO AND CONCEPTO=xPADRON;

	SELECT SALTO INTO xSALTO FROM SALTO;	
	
	--Tipo de gravamen
	BEGIN
   	select GRAVAMEN INTO xGRAVAMEN
		from GRAVAMEN_IBI_RUS 
	   where MODULO='RUS' AND MUNICIPIO=xMUNICIPIO AND YEAR=xYEAR;
   EXCEPTION
		when no_data_found then
		   xGRAVAMEN:=0;	      
	END;
	
	FOR vRECIBOS IN CRECRUS
	LOOP
	
		xID:=vRECIBOS.ID;
	
		xOBJETO_TRIBUTARIO:='RECIBO Nº: '||
                            RTRIM(TO_CHAR(vRECIBOS.RECIBO))||xSALTO;
                            
		xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||'TIPO DE GRAVAMEN: '||
				   RTRIM(TO_CHAR(xGRAVAMEN,'0D99'))||xSALTO;
				   
		SELECT COUNT(*) INTO xNUMPARCELAS FROM RECIBOS_RUS_DESGLOSE
		WHERE ID_RECIBO=vRECIBOS.ID;		
				   
		FOR vDESGLOSE IN CDESGLOSE
		LOOP						
			xLONGITUD:=LENGTH(xOBJETO_TRIBUTARIO);
			xLONGITUD2:=LENGTH('REF: '||vDESGLOSE.RC_NUM_PARCELA||vDESGLOSE.RC_NUM_SECUENCIAL
			||vDESGLOSE.RC_PRIMER_CONTROL||vDESGLOSE.RC_SEGUNDO_CONTROL||
			'; SUP(m2): '||vDESGLOSE.SUPERFICIE_SUELO||
			'; V.CAT: '||TRIM(TO_CHAR(vDESGLOSE.VALOR_CATASTRAL,'999G990D00'))||
			'; VC BONIF: '||TRIM(TO_CHAR(vDESGLOSE.VC_BONIFICADO,'999G990D00'))||
			'; PART: '||TRIM(TO_CHAR(vDESGLOSE.COEFICIENTE_PROPIEDAD,'990D99'))||
			'%; TOTAL: '||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'))||' Euros '||xSALTO);
			
			-- (debemos dejar los 24 caracteres del pico de los 1024 para indicar la falta de información de otras parcelas)
			IF (xLONGITUD+xLONGITUD2<=1000) THEN		
				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO||
				'REF: '||vDESGLOSE.RC_NUM_PARCELA||vDESGLOSE.RC_NUM_SECUENCIAL||vDESGLOSE.RC_PRIMER_CONTROL||
				vDESGLOSE.RC_SEGUNDO_CONTROL||
				'; SUP(m2): '||vDESGLOSE.SUPERFICIE_SUELO||
				'; V.CAT: '||TRIM(TO_CHAR(vDESGLOSE.VALOR_CATASTRAL,'999G990D00'))||
				'; VC BONIF: '||TRIM(TO_CHAR(vDESGLOSE.VC_BONIFICADO,'999G990D00'))||
				'; PART: '||TRIM(TO_CHAR(vDESGLOSE.COEFICIENTE_PROPIEDAD,'990D99'))||
				'%; TOTAL: '||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'))||' Euros '||xSALTO;
			ELSE
				xOBJETO_TRIBUTARIO:=xOBJETO_TRIBUTARIO || 'FALTA INFO '||
						TRIM(TO_CHAR(xNUMPARCELAS,'999G990'))||' PARCELAS';
				EXIT;
			END IF;	
			
			xNUMPARCELAS:=xNUMPARCELAS-1;			
			
		END LOOP;	
		
		IF NOT (xEXENTOS='N' AND vRECIBOS.TOTAL<=0) THEN   
      	INSERT INTO PUNTEO
         	(AYTO, PADRON, YEAR, PERIODO, RECIBO,
            NIF, NOMBRE, VOL_EJE, F_CARGO, N_CARGO, 
            INI_PE_VOL, FIN_PE_VOL, TIPO_DE_TRIBUTO, CUOTA_INICIAL, 
            PRINCIPAL, OBJETO_TRIBUTARIO, 
            ESTADO_BANCO, TIPO_DE_OBJETO, CLAVE_CONCEPTO, YEAR_CONTRAIDO, CLAVE_RECIBO)
         VALUES
         	(xMUNICIPIO, xPADRON, xYEAR, xPERIODO, vRECIBOS.RECIBO, vRECIBOS.NIF, SUBSTR(vRECIBOS.NOMBRE,1,40), 
            'V',xFECHA, xN_CARGO, vRECIBOS.DESDE, vRECIBOS.HASTA, xTIPO_TRIBUTO,
            vRECIBOS.TOTAL, vRECIBOS.TOTAL, xOBJETO_TRIBUTARIO, vRECIBOS.ESTADO_BANCO,'R', 
            DECODE(vRECIBOS.NIF,NULL,vRECIBOS.CLAVE_IDENTIFICACION,vRECIBOS.NIF), xYEARCONTRAIDO, xID);
      END IF;
      
   END LOOP;
	
	-- Insertamos una tupla en LOGSPADRONES para controlar que esta acción ha sido ejecutada
   INSERT INTO LOGSPADRONES (MUNICIPIO,PROGRAMA,PYEAR,PERIODO,HECHO)
   VALUES (xMUNICIPIO,'RUSTICA',xYEAR,xPERIODO,'Se Pasa un padrón a Recaudación');		
	
END;
/     

/********************************************************************************
Acción: Configuración.
********************************************************************************/
CREATE OR REPLACE PROCEDURE RUS_CONF_RECIBOS(
       xMUNICIPIO   IN CHAR,
       xNUM 	  IN INTEGER)
AS
BEGIN
	UPDATE DATOSPER SET RUSTICA_CONF_RECIBOS=xNUM
  	WHERE MUNICIPIO=xMUNICIPIO;
END;
/

/********************************************************************************
Acción: Modificación del número de periodos.
********************************************************************************/

CREATE OR REPLACE PROCEDURE RUS_MOD_NUM_PERIODOS(
       xMUNICIPIO   IN CHAR,
       xNUM 	  IN INTEGER
)
AS

BEGIN
  	UPDATE DATOSPER SET RUSTICA_NUM_PERIODOS=xNUM
  	WHERE MUNICIPIO=xMUNICIPIO;
END;
/

/****************************************************************************************
Acción: PARA RECIBOS DOMICILIADOS Y NO DOMICILIADOS DE LA CAIXA.
MODIFICACIÓN: 14/09/2001 M. Carmen Junco Gómez. Adaptación al euro y eliminación 
		  de una consulta innecesaria al tener los datos fiscales en 
		  la tabla de recibos.
MODIFICACIÓN: 20/09/2001 M. Carmen Junco Gómez. Parcela, Polígono y Paraje ya no 
              hay que escribirlos en el disco.
		  Adaptación al Euro.
MODIFICACIÓN: 24/06/2002 M. Carmen Junco Gómez. Bonificaciones en los recibos.
MODIFICACIÓN: 30/09/2003 Lucas Fernández Pérez. Se cambia el texto "%bonificacion" por
				"importe bonificado", porque pasa de ser un porcentaje a un importe.
MODIFICACIÓN: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato del tipo de Gravamen
				de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
MODIFICACIÓN: 15/05/2006 M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
**************************************************************************************** */

CREATE OR REPLACE PROCEDURE Proc_Caixa_Rustica (
       xMUNICIPIO  IN CHAR,
       xYear 	 IN char, 
       xPeri 	 IN char) 
AS
	xParcela		varchar2(120);
	x2 			char(40);
	x3 			char(40);
	x4 			char(40);
	x5 			char(40);
	x6 			char(40);
	x7 			char(40);
	x8				char(40);
	x9				char(40);
	x10			char(40);
	x11			char(40);
	x12			char(40);
	x13			char(40);
	x14			char(40);
	x15			char(40);
	x16			char(40);
	i 				integer;
	j				integer;
	xRegis 		integer;	
	xID			integer;
	xNumParcelas integer;	

	CURSOR CRECRUS IS
	   SELECT *  FROM RECIBOS_RUS
	   WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri and total>0;
	CURSOR CDESGLOSE IS
		SELECT * FROM RECIBOS_RUS_DESGLOSE WHERE ID_RECIBO=xID;

BEGIN

	DELETE FROM RECIBOS_CAIXA WHERE USUARIO=USER;	

	select count(*) into xRegis FROM recibos_rus
	WHERE municipio=xMunicipio and year=xYear and periodo=xPeri and total>0;

	FOR v_TRustica IN CRECRUS LOOP
	
		xID:=v_TRustica.ID;

		i:=15;		
		
		x2:='';
		x3:='';
		x4:='';
		x5:='';
		x6:='';
		x7:='';
		x8:='';
		x9:='';
		x10:='';
		x11:='';
		x12:='';
		x13:='';
		x14:='';
		x15:='';
		x16:='';		
		
		j:=0;
		
		SELECT COUNT(*) INTO xNUMPARCELAS FROM RECIBOS_RUS_DESGLOSE WHERE ID_RECIBO=xID;
		
		FOR vDESGLOSE IN CDESGLOSE
		LOOP
			j:=j+1;
			xParcela:='REF:'||vDESGLOSE.RC_NUM_PARCELA||';PARAJE:'||TRIM(vDESGLOSE.PARAJE)||			
						 ';SUP(m2):'||vDESGLOSE.SUPERFICIE_SUELO||
						 ';VCAT:'||TRIM(TO_CHAR(vDESGLOSE.VALOR_CATASTRAL,'999G990D00'))||
						 ';GRAV:'||TRIM(TO_CHAR(vDESGLOSE.TIPO_GRAVAMEN,'990D999'));
			
			if (length(';B.IMP:'||TRIM(TO_CHAR(vDESGLOSE.BASE_IMPONIBLE,'999G990D00'))) +
				length(xParcela)<121) then
					xParcela:=xParcela||';B.IMP:'||TRIM(TO_CHAR(vDESGLOSE.BASE_IMPONIBLE,'999G990D00'));
			end if;
			if (length(';TOTAL:'||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'))) +
				length(xParcela)<121) then
					xParcela:=xParcela||';TOTAL:'||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'));
			end if;
					
			xParcela:=rpad(xParcela,120,' ');
					
			if j=1 then
				x2:=substr(xParcela,1,40);
				x3:=substr(xParcela,41,40);
				X4:=substr(xParcela,81,40);
			elsif j=2 then
				x5:=substr(xParcela,1,40);
				x6:=substr(xParcela,41,40);
				x7:=substr(xParcela,81,40);
			elsif j=3 then
				x8:=substr(xParcela,1,40);
				x9:=substr(xParcela,41,40);
				x10:=substr(xParcela,81,40);
			elsif j=4 then
				x11:=substr(xParcela,1,40);
				x12:=substr(xParcela,41,40);
				x13:=substr(xParcela,81,40);
			elsif j=5 then
				if (xNumParcelas-5>0) then --quedan parcelas sin poder indicar su información
					x14:=RPAD('Faltan datos de '||TO_CHAR(xNumParcelas-4)||' parcelas.',40,' ');
					x15:=RPAD('Más información en centro emisor.',40,' ');
					x16:=RPAD(' ',40,' ');
					EXIT;
				else
					x14:=substr(xParcela,1,40);
					x15:=substr(xParcela,41,40);
					x16:=substr(xParcela,81,40);
					EXIT;
				end if;
			end if;
			
		END LOOP;		

		INSERT INTO RECIBOS_CAIXA
			(ABONADO,NIF,NOMBRE,DOMICILIO,CODPOSTAL,MUNICIPIO,
			ENTIDAD,SUCURSAL,DC,CUENTA,
			TOTAL, Campo2, Campo3, Campo4, Campo5, Campo6, Campo7, Campo8,
			Campo9, Campo10, Campo11, Campo12, Campo13, Campo14, Campo15, Campo16,
			CAMPOS_OPCIONALES, CUANTOS_REGISTROS)
		VALUES
			(v_TRustica.RECIBO, v_TRustica.Nif, substr(v_TRustica.Nombre,1,40), 
         substr(v_TRustica.Domicilio,1,40), v_TRustica.Codigo_Postal, 
         substr(v_TRustica.Poblacion,1,35), v_TRustica.Entidad, v_TRustica.Sucursal, 
         v_TRustica.DC, v_TRustica.Cuenta, (v_TRustica.TOTAL*100), x2, 
         x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, i, xRegis); 
         
	END LOOP;
	
END;
/

/* ****************************************************************************************
Autor: M. Carmen Junco Gómez. 09/05/2002
Acción: PARA RECIBOS DOMICILIADOS Y NO DOMICILIADOS DE CAJA MADRID.
MODIFICACIÓN: 24/06/2002 M. Carmen Junco Gómez. Bonificación de los recibos
MODIFICACIÓN: 30/09/2003 Lucas Fernández Pérez. Se cambia el texto "%bonificacion" por
				"importe bonificado", porque pasa de ser un porcentaje a un importe.
MODIFICACIÓN: 13/01/2004 Gloria Mª Calle Hernández. Se cambia el formato del tipo de Gravamen
				de 0D99 a 0D999, porque pasa a arrastrar 3 dígitos decimales.
MODIFICACIÓN: 15/05/2006 M. Carmen Junco Gómez. Adaptación al nuevo formato de RUSTICA
****************************************************************************************** */

CREATE OR REPLACE PROCEDURE Proc_CajaMadrid_Rustica (
       xMUNICIPIO  	IN CHAR,
       xYear 	 		IN char, 
       xPeri 	 		IN char) 
AS
	xParcela		varchar2(80);
	x1 			char(40);
	x2 			char(40);
	x3 			char(40);
	x4 			char(40);
	x5 			char(40);
	x6 			char(40);
   x7				char(40);
   x8				char(40);
   x9				char(40);
   x10			char(40);
   x11			char(40);
   x12			char(40);
   x13			char(40);
   x14			char(40);
   x15			char(40);
   x16			char(40);
	i 				integer;
	j				integer;
	xRegis 		integer;
	xPAIS			char(25);
	xID			integer;
	xNumParcelas integer;	

	CURSOR CRECRUS IS
	   SELECT *  FROM RECIBOS_RUS 
	   WHERE MUNICIPIO=xMUNICIPIO and year=xYear and periodo=xPeri and total>0;
	CURSOR CDESGLOSE IS
		SELECT * FROM RECIBOS_RUS_DESGLOSE
		WHERE ID_RECIBO=xID;

BEGIN

	DELETE FROM RECIBOS_CAJAMADRID WHERE USUARIO=USER;	

	select count(*) into xRegis FROM recibos_rus
	WHERE municipio=xMunicipio and year=xYear and periodo=xPeri and total>0;

	FOR v_TRustica IN CRECRUS LOOP
		
		xID:=v_TRustica.ID;
				
		SELECT PAIS INTO xPAIS FROM RUS_TITULARES WHERE ID=v_TRustica.ABONADO;

		i:=16;

		x1:='';
		x2:='';
		x3:='';
		x4:='';
		x5:='';
		x6:='';
		x7:='';
		x8:='';
		x9:='';
		x10:='';
		x11:='';
		x12:='';
		x13:='';
		x14:='';
		x15:='';
		x16:='';		
		
		j:=0;
		
		SELECT COUNT(*) INTO xNUMPARCELAS FROM RECIBOS_RUS_DESGLOSE WHERE ID_RECIBO=xID;
		
		FOR vDESGLOSE IN CDESGLOSE
		LOOP
			j:=j+1;
			xParcela:='REF:'||vDESGLOSE.RC_NUM_PARCELA||';SUP(m2):'||vDESGLOSE.SUPERFICIE_SUELO||
						 ';VCAT:'||TRIM(TO_CHAR(vDESGLOSE.VALOR_CATASTRAL,'999G990D00'));						 
			
			if (length(';GRAV:'||TRIM(TO_CHAR(vDESGLOSE.TIPO_GRAVAMEN,'990D999'))) +
				length(xParcela)<81) then
				 	xParcela:=xParcela||';GRAV:'||TRIM(TO_CHAR(vDESGLOSE.TIPO_GRAVAMEN,'990D999'));
			end if;
			if (length(';B.IMP:'||TRIM(TO_CHAR(vDESGLOSE.BASE_IMPONIBLE,'999G990D00'))) +
				length(xParcela)<81) then
					xParcela:=xParcela||';B.IMP:'||TRIM(TO_CHAR(vDESGLOSE.BASE_IMPONIBLE,'999G990D00'));
			end if;
			if (length(';TOTAL:'||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'))) +
				length(xParcela)<81) then
					xParcela:=xParcela||';TOTAL:'||TRIM(TO_CHAR(vDESGLOSE.TOTAL,'999G990D00'));
			end if;
					
			xParcela:=rpad(xParcela,80,' ');
					
			if j=1 then
				x1:=substr(xParcela,1,40);
				x2:=substr(xParcela,41,40);
			elsif j=2 then
				x3:=substr(xParcela,1,40);
				x4:=substr(xParcela,41,40);
			elsif j=3 then
				x5:=substr(xParcela,1,40);
				x6:=substr(xParcela,41,40);
			elsif j=4 then
				x7:=substr(xParcela,1,40);
				x8:=substr(xParcela,41,40);
			elsif j=5 then
				x9:=substr(xParcela,1,40);
				x10:=substr(xParcela,41,40);
			elsif j=6 then
				x11:=substr(xParcela,1,40);
				x12:=substr(xParcela,41,40);
			elsif j=7 then
				x13:=substr(xParcela,1,40);
				x14:=substr(xParcela,41,40);
			elsif j=8 then
				if (xNumParcelas-8>0) then --quedan parcelas sin poder indicar su información
					x15:=RPAD('Faltan datos de '||TO_CHAR(xNumParcelas-7)||' parcelas.',40,' ');
					x16:=RPAD('Más información en centro emisor.',40,' ');
					EXIT;
				else
					x15:=substr(xParcela,1,40);
					x16:=substr(xParcela,41,40);
					EXIT;
				end if;
			end if;
			
		END LOOP;

		INSERT INTO RECIBOS_CAJAMADRID
			(ABONADO,NIF,NOMBRE,DOMICILIO,CODPOSTAL,POBLACION,PROVINCIA,PAIS,
			 REFERENCIA,DOMICILIADO,ENTIDAD,SUCURSAL,DC,CUENTA,
			 TOTAL, Campo1, Campo2, Campo3, Campo4, Campo5, Campo6, Campo7,
			 Campo8, Campo9, Campo10, Campo11, Campo12, Campo13, Campo14,
			 Campo15, Campo16, CAMPOS_OPCIONALES, CUANTOS_REGISTROS)
		VALUES
			(v_TRustica.RECIBO, v_TRustica.Nif, substr(v_TRustica.Nombre,1,40), 
         substr(v_TRustica.Domicilio,1,40), v_TRustica.Codigo_Postal, 
         substr(v_TRustica.Poblacion,1,35), v_TRustica.PROVINCIA, xPAIS,
			DECODE(v_TRustica.DOMICILIADO,'S',v_TRustica.REFERENCIA||v_TRustica.DIGITO_CONTROL,
			       v_TRustica.REFERENCIA),	
			DECODE(v_TRustica.DOMICILIADO,'S','D',' '),
		   v_TRustica.Entidad, v_TRustica.Sucursal,v_TRustica.DC, v_TRustica.Cuenta,
         (v_TRustica.TOTAL*100),x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,i,xRegis); 
	END LOOP;
END;
/

/********************************************************************/
COMMIT;
/********************************************************************/
